<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Archived Changes | AutoHotkey v1</title>
<meta name="description" content="This page contains a history of changes made within the original branch of AutoHotkey development, by Chris Mallett." />
<meta name="ahk:equiv-v2" content="ChangeLog.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
</head>

<body>
<h1>Archived Changes</h1>
<p>This document contains a history of changes made within the original branch of AutoHotkey development, by Chris Mallett.</p>
<p>For newer changes, see <a href="AHKL_ChangeLog.htm">Changes &amp; New Features</a>.</p>

<h2 id="v1.0.48.05">1.0.48.05 - September 25, 2009</h2>
<p>Fixed crash of <a href="lib/PostMessage.htm">SendMessage and PostMessage</a> when wParam or lParam is omitted (broken by 1.0.48.04). [thanks Lexikos]</p>

<h2 id="v1.0.48.04">1.0.48.04 - September 25, 2009</h2>
<p>Fixed <a href="lib/StringSplit.htm">StringSplit</a> to work properly inside <a href="Functions.htm">functions</a> of <a href="Scripts.htm#ahk2exe">compiled scripts</a> (broken by 1.0.35.01). [thanks engunneer &amp; Lexikos]</p>
<p>Fixed <a href="lib/Send.htm#SendPlayDetail">SendPlay</a> not to wait for the release of the Windows key prior to sending an "L" keystroke (broken by 1.0.48.01). [thanks Lexikos]</p>
<p>Fixed <a href="Variables.htm#EndChar">A_EndChar</a> to be valid when the <a href="Hotstrings.htm#b0">B0 option</a> is present, and to be empty when there is no <a href="Hotstrings.htm#EndChars">ending character</a> (broken by 1.0.44.09). [thanks Al2000]</p>
<p>Fixed <a href="lib/FormatTime.htm">FormatTime</a> to yield a valid time of day even when the specified month is out-of-range (broken by 1.0.48.00). [thanks silveredge78]</p>
<p>Fixed <a href="lib/FileCreateDir.htm">FileCreateDir</a> to support a leading backslash even when it is the only backslash; e.g. \dir. [thanks jaco0646]</p>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl</a>/<a href="lib/GuiControlGet.htm">GuiControlGet</a>/<a href="lib/Gui.htm">Gui</a>/<a href="lib/PostMessage.htm">SendMessage</a> to work reliably even when they trigger a <a href="lib/RegisterCallback.htm">callback</a> or <a href="lib/OnMessage.htm">OnMessage</a> function. [thanks Lexikos]</p>
<p>Fixed <a href="lib/RegExMatch.htm">RegExMatch()</a> not to produce too few replacements when an empty-string match is followed by a non-empty-string match.</p>
<p>Changed <code>While()</code> to be recognized as a <a href="lib/While.htm">loop</a> rather than a <a href="Functions.htm">function</a>. [thanks Crash&amp;Burn]</p>
<p>Improved <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a> to support FTP and Gopher. [thanks Lexikos]</p>
<p>Improved the <a href="lib/FileAppend.htm#stdout">stdout/asterisk mode</a> of FileAppend to write immediately rather than lazily to standard output. [thanks Lexikos]</p>
<p>Added full support for <code>if % expression</code>. [thanks kenomby]</p>

<h2 id="v1.0.48.03">1.0.48.03 - May 3, 2009</h2>
<p>Fixed <code><a href="lib/ListLines.htm">ListLines On</a></code> not to erase the most recent log entry in the line history. [thanks Lexikos]</p>
<p>Fixed <a href="lib/ListView.htm">ListView</a> to respond properly to mouse dragging when <a href="lib/SetTimer.htm">timers</a> are running. [thanks Solar]</p>
<p>Fixed <a href="Hotkeys.htm#keyup">key-up hotkeys</a> so that if one is created while its key is being held down, the release of the key doesn't trigger the wrong hotkey. [thanks Peter &amp; engunneer]</p>

<h2 id="v1.0.48.02">1.0.48.02 - April 19, 2009</h2>
<p>Changed and fixed <a href="lib/Gosub.htm">Gosub</a> and <a href="lib/GroupActivate.htm">GroupActivate</a> so that when a function calls an <a href="Functions.htm#GosubPublic">external/public subroutine</a>, that subroutine will treat all dynamic variables as globals, and will have outside-of-function GUI behavior. [thanks kenomby &amp; Lexikos]</p>
<p>Improved performance of <a href="Variables.htm#True">True</a>/<a href="Variables.htm#False">False</a>/<a href="Variables.htm#EventInfo">A_EventInfo</a> in <a href="Variables.htm#Expressions">expressions</a> by treating them as integers vs. strings.</p>

<h2 id="v1.0.48.01">1.0.48.01 - April 15, 2009</h2>
<p>Changed: For Windows Vista and later, hotkeys that include <kbd>Win</kbd> (e.g. #a) will wait for LWin and RWin to be released before sending any text containing an "L" keystroke. This prevents such a hotkey from locking the PC. This behavior applies to all sending modes except <a href="lib/Send.htm#SendPlayDetail">SendPlay</a> (which doesn't need it) and <a href="lib/Send.htm#blind">blind mode</a>.</p>
<p>Fixed <a href="lib/LoopFile.htm#LoopFileExt">A_LoopFileExt</a> to be blank for any filename having no extension but a period in its pathname. [thanks Yek-Toho-Tua].</p>
<p>Fixed the <a href="Variables.htm#AssignOp">assignment</a> of integers that are 19 or 20 characters long to work as they did prior to v1.0.48. [thanks Laszlo &amp; Lexikos]</p>
<p>Fixed <a href="Functions.htm#define">function definitions</a> to work properly inside a <a href="lib/Block.htm">block</a>. [thanks rmarko]</p>
<p>Improved performance of <a href="Variables.htm#Index">A_Index</a> in <a href="Variables.htm#Expressions">expressions</a> by treating it as an integer rather than a string.</p>
<p>Improved performance of <code class="no-highlight"><a href="lib/IfIn.htm">if var [not] in/contains</a></code>. [developed by Lexikos]</p>
<p>Improved <a href="lib/ListLines.htm">ListLines</a> with an option to turn line-logging Off or On. [thanks kenomby &amp; ruespe]</p>

<h2 id="v1.0.48.00">1.0.48 - February 25, 2009</h2>
<p><strong>Compatibility:</strong> The change most likely to affect backward compatibility is that floating point numbers stored in variables now have higher precision. Scripts that rely on tiny differences in precision would either need to be reviewed and updated, or have their compatibility improved by using <code><a href="lib/SetFormat.htm">SetFormat Float</a></code> (e.g. <code>SetFormat, Float, 0.6</code>) <em>anywhere</em> in the script. <code>SetFormat Float</code> disables the higher precision, but gives up some of the new, faster floating point performance.</p>
<p><strong>Performance:</strong> The main theme of this release is faster performance. Almost all scripts should run faster -- especially those that make heavy use of <a href="Variables.htm#Expressions">expressions</a> and integer math/comparisons (which may run up to three times as fast). To achieve the full benefit, a script either should avoid using SetFormat or should use <a href="lib/SetFormat.htm#Fast">SetFormat's fast mode</a>.</p>
<h3 id="Performance_improvements">Performance improvements</h3>
<p><a href="Variables.htm#Expressions">Expressions</a> and <a href="Functions.htm">function calls</a> are compiled more heavily, making them much faster (especially complex integer expressions, including those with <a href="Variables.htm#comma">commas</a>).</p>
<p>Binary numbers are cached for variables to avoid conversions to/from strings. This makes numerical operations involving variables much faster.</p>
<p>Literal integers in expressions and math/comparison commands are replaced with binary integers, which makes them faster; e.g. <code>X+5</code> and <code>if x &gt; 5</code>.</p>
<p><a href="lib/Loop.htm">LOOPs</a>, <a href="lib/IfExpression.htm">IFs</a>, and <a href="lib/Else.htm">ELSEs</a> that have blocks (braces) are faster due to skipping the opening '{'. A side-effect is that the '{' is omitted from <a href="lib/ListLines.htm">ListLines</a>.</p>
<p><a href="misc/Threads.htm">Thread-creation</a> performance is improved, which should help rapid-fire threads in <a href="lib/OnMessage.htm">OnMessage()</a>, <a href="lib/RegisterCallback.htm">RegisterCallback()</a>, and <a href="lib/Gui.htm#Events">GUI events</a>.</p>
<h3 id="Changes_that_might_affect_existing_scripts">Changes that might affect existing scripts (other than higher-precision floating point described at the top)</h3>
<p>When <code><a href="lib/SetFormat.htm#Integer">SetFormat, Integer, Hex</a></code> is in effect, assigning a literal decimal integer to a variable also converts it to hex. Usually this is only a display issue.</p>
<p>For <a href="lib/OnMessage.htm">OnMessage()</a> performance, the message number and HWND arrive as standard numbers rather than appearing unconditionally as hex. Usually this is only a display issue.</p>
<p>To achieve various improvements in performance, scripts now use slightly more memory (proportionate to the number of variables and expressions).</p>
<p>Changed and fixed <code><a href="lib/IfIs.htm#time">if var is time</a></code> and other uses of YYYYMMDDHHMISS date-time stamps to recognize that months outside the range 1-12 are invalid. [thanks Nick]</p>
<p>Changed and improved <a href="Functions.htm#DynCall">dynamic function calling</a> to allow passing more parameters than defined by a function, in which case the parameters are evaluated but discarded. [developed by Lexikos]</p>
<h3 id="Other_improvements">Other improvements</h3>
<p>Added function <a href="lib/IsFunc.htm">IsFunc()</a>, which indicates whether a function may be <a href="Functions.htm#DynCall">called dynamically</a>. [developed by Lexikos]</p>
<p>Added the <a href="lib/While.htm">while-loop</a>, which repeats its commands until its <a href="Variables.htm#Expressions">expression</a> evaluates to false. [developed by Lexikos]</p>
<p>Added an <a href="Functions.htm#AssumeStatic">assume-static mode</a> for functions. [developed by Lexikos]</p>
<p>Added built-in variables <a href="Variables.htm#IsPaused">A_IsPaused</a> and <a href="Variables.htm#IsCritical">A_IsCritical</a>. [developed by Lexikos]</p>
<p>Improved <a href="lib/NumPut.htm">NumPut()</a> to support UInt64 like <a href="lib/DllCall.htm#unsigned">DllCall()</a>. [thanks Sean]</p>
<p>Improved mouse wheel support by adding <a href="Hotkeys.htm#Wheel">WheelLeft and WheelRight</a> as hotkeys and supporting them in <a href="lib/Send.htm">Send</a>, <a href="lib/Click.htm">Click</a>, and related commands. However, WheelLeft/Right has no effect on operating systems older than Windows Vista. [developed by Lexikos]</p>
<p>Upgraded <a href="Scripts.htm#ahk2exe">compiled script</a> compressor from UPX 3.00 to 3.03.</p>
<h3 id="Fixes">Fixes</h3>
<p>Fixed inability to use <a href="lib/MsgBox.htm#Timeout">MsgBox</a>'s timeout parameter when the "Text" parameter had an expression containing commas.</p>
<p>Fixed <code><a href="lib/Menu.htm#Delete">Menu, Delete, Item-that's-a-submenu</a></code> not to disrupt the associated submenu. [thanks animeaime &amp; Lexikos]</p>
<p>Fixed the <a href="lib/GuiControls.htm#Hotkey">GUI Hotkey control</a> to return usable hotkey names even for dead keys (e.g. "^" instead of Zircumflex). [thanks DerRaphael]</p>
<p>Fixed <a href="lib/RegDelete.htm">RegDelete</a> so that it won't delete an entire root key when SubKey is blank. [thanks Icarus]</p>
<p>Fixed <a href="lib/LoopReg.htm">registry loops</a> to support subkey names longer than 259 (rare). In prior versions, such subkeys would either be skipped or cause a crash. [thanks Krzysztof Sliwinski &amp; Eggi]</p>
<p>Fixed FileSelectFolder by providing <a href="lib/FileSelectFolder.htm#NewDialog">an option</a> to make it compatible with BartPE/WinPE. [thanks markreflex]</p>
<p>Fixed <a href="misc/WinTitle.htm#ahk_id">window/control IDs (HWNDs)</a>, which in rare cases wrongly started with 0xFFFFFFFF instead of just 0x. [thanks Micahs]</p>
<p>Fixed inability of <a href="lib/Send.htm">Send commands</a> to use the Down/Up modifiers with the "}" character. [thanks neovars]</p>

<h2 id="v1.0.47.06">1.0.47.06 - March 9, 2008</h2>
<p>Fixed crash when a <a href="Functions.htm">function</a> was called concurrently with an optional <a href="Functions.htm#ByRef">ByRef parameter</a> omitted by one <a href="misc/Threads.htm">thread</a> but not omitted by the other. [thanks DeathByNukes]</p>
<p>Fixed <code><a href="lib/Menu.htm#MainWindow">Menu, Tray, MainWindow</a></code> to enable the menu items in the main window's View menu. [thanks Lexikos]</p>
<p>Added <a href="Functions.htm#DynCall">dynamic function calling</a>. [developed by Lexikos]</p>

<h2 id="v1.0.47.05">1.0.47.05 - November 21, 2007</h2>
<p>Fixed the <a href="lib/Sort.htm">Sort command</a>: 1) fixed the <a href="lib/Sort.htm#callback">"function" option</a> not to misbehave when it's the last option in the list; 2) fixed the <a href="lib/Sort.htm#unique">"unique" option</a> so that when the delimiter is CRLF, the last item can be detected as a duplicate even when it doesn't end in CRLF; 3) fixed the "unique" option not to append a trailing delimiter when the last item is a duplicate. [thanks Roland]</p>
<p>Fixed <a href="lib/RegExMatch.htm">RegExMatch()</a> and <a href="lib/RegExReplace.htm">RegExReplace()</a> to yield correct results even when Haystack and OutputVar are both the same variable. [thanks Superfraggle]</p>
<p>Fixed inability to pass a parameter that is "a variable to which <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> has been assigned". [thanks Joy2DWorld &amp; Lexikos]</p>
<p>Updated RegEx/PCRE from 7.0 to 7.4. For a summary of the major changes, see <a href="http://www.pcre.org/news.txt">www.pcre.org/news.txt</a>. For full details of every change and fix, see <a href="http://www.pcre.org/changelog.txt">www.pcre.org/changelog.txt</a>.</p>
<p>Added GUI control "<a href="lib/GuiControls.htm#Tab2">Tab2</a>" that fixes rare redrawing problems in the original "Tab" control (e.g. activating a GUI window by clicking on a control's scrollbar). The original Tab control is retained for backward compatibility because "Tab2" puts its Tab control after its contained controls in the tab-key navigation order. [thanks Xander]</p>

<h2 id="v1.0.47.04">1.0.47.04 - August 28, 2007</h2>
<p>Fixed <a href="Hotkeys.htm#keyup">key-up hotkeys</a> like <code>a up::</code> not to block the pressing of the "a" key unless the hotkey's <a href="lib/_IfWinActive.htm">#IfWin criteria</a> are met. [thanks Roland]</p>
<p>Fixed <code><a href="lib/Math.htm#Round">Round(Var, NegativeNumber)</a></code>, which in rare cases was off by 1. [thanks Icarus]</p>
<p>Fixed crash of scripts that end in a syntax error consisting of an orphaned IF-statement (broken by 1.0.47.00). [thanks msgbox of the German forum]</p>
<p>Eliminated the "GetClipboardData" error dialog. Instead, an empty string is retrieved when the data cannot be accessed within the <a href="lib/_ClipboardTimeout.htm">#ClipboardTimeout</a> period. [thanks ManaUser &amp; Sean]</p>
<p>Changed GUI <a href="lib/GuiControls.htm#CheckBox">checkboxes</a> and <a href="lib/GuiControls.htm#Radio">radio buttons</a> to default to <a href="lib/Gui.htm#Wrap">"no word-wrap"</a> when no width, height, or CR/LF characters are specified. This solves display issues under certain unusual DPI settings. [thanks Boskoop]</p>

<h2 id="v1.0.47.03">1.0.47.03 - August 1, 2007</h2>
<p>Fixed <a href="Variables.htm#Expressions">expressions</a> to allow literal negative hexadecimal numbers that end in "E"; e.g. fn(-0xe). [thanks Laszlo]</p>
<p>Fixed <a href="lib/Block.htm">block syntax</a> to allow a <a href="Functions.htm">function-call</a> immediately to the right of a '}'. [thanks Roland]</p>

<h2 id="v1.0.47.02">1.0.47.02 - July 19, 2007</h2>
<p>Fixed the <a href="lib/GuiControls.htm#EditNum">Number option</a> of Edit controls to properly display a balloon tip when the user types something other than a digit. [thanks tfcahm]</p>
<p>Fixed WM_TIMER not to be blocked unless it's posted to the script's main window. [thanks tfcahm]</p>
<p>Fixed <a href="Hotkeys.htm#wildcard">wildcard hotkeys</a> not to acquire <a href="Hotkeys.htm#Tilde">tilde behavior</a> when the same hotkey exists in the script with a tilde. [thanks Lexikos]</p>
<p>Fixed <a href="Functions.htm#DeclareInit">declaration initializers</a> not to retain whitespace at the end of literal numbers. Also, they now allow spaces between a closing quote and the next comma. [thanks Hardeep]</p>

<h2 id="v1.0.47.01">1.0.47.01 - July 8, 2007</h2>
<p>Fixed <a href="lib/RunAs.htm">RunAs</a> not to crash or misbehave when a domain is specified. [thanks Markus Frohnmaier]</p>
<p>Changed <a href="Variables.htm#Operators">relational operators</a> to yield integers even when the inputs are floating point; e.g. <code>1.0 &lt; 2.0</code> yields 1 vs. 1.0. [thanks Lexikos]</p>

<h2 id="v1.0.47.00">1.0.47 - June 19, 2007</h2>
<p>Added support for <a href="Functions.htm#lib">function libraries</a>, which allow a script to call a function in an external file without having to use <a href="lib/_Include.htm">#Include</a>.</p>
<p>Added <a href="lib/RegisterCallback.htm">RegisterCallback()</a>, which creates a machine-code address that when called, redirects the call to a function in the script. [developed by Jonathan Rennison (JGR)]</p>
<p>Added <a href="lib/NumGet.htm">NumGet()</a> and <a href="lib/NumPut.htm">NumPut()</a>, which retrieve/store binary numbers with much greater speed than Extract/InsertInteger.</p>
<p>Improved <a href="lib/Sort.htm#callback">Sort</a> with an option to do custom sorting according to the criteria in a callback function. [thanks Laszlo]</p>
<p>Improved <a href="lib/OnMessage.htm">OnMessage()</a> with an option to allow more than one simultaneous <a href="misc/Threads.htm">thread</a>. [thanks JGR]</p>
<p>Improved Critical with an option to change the <a href="lib/Critical.htm#Interval">message-check interval</a>, which may improve reliability for some usages. [thanks Majkinetor and JGR]</p>
<p>Changed <a href="lib/Critical.htm">Critical</a> to put <a href="lib/SetBatchLines.htm">SetBatchLines -1</a> into effect.</p>
<p>Changed the error messages produced by <a href="lib/_ErrorStdOut.htm">#ErrorStdOut</a> to contain a space before the colon. [thanks Toralf]</p>
<p>Fixed <a href="lib/OnMessage.htm">OnMessage() functions</a> that return one of their own local variables to return the number in that variable, not 0.</p>
<p>Fixed potential crashing of built-in variables that access the registry (e.g. A_AppData, A_Desktop, A_MyDocuments, A_ProgramFiles). [thanks Tekl]</p>

<h2 id="v1.0.46.17">1.0.46.17 - May 31, 2007</h2>
<p>Fixed <a href="Variables.htm#UserName">A_UserName</a> (broken by 1.0.46.16).</p>

<h2 id="v1.0.46.16">1.0.46.16 - May 30, 2007</h2>
<p>Fixed <code><a href="lib/GuiControls.htm#Tab">Gui, Tab, TabName</a></code> when used after a previous <code>Gui Tab</code>. [thanks Toralf]</p>
<p>Improved SetTimer to treat <a href="lib/SetTimer.htm#Period">negative periods</a> as "run only once". [thanks Majkinetor]</p>
<p>Added <a href="lib/GuiControlGet.htm#Hwnd">GuiControlGet Hwnd</a>, which is a more modular/dynamic way to retrieve a control's HWND. [thanks Majkinetor]</p>
<p>Added built-in variables <a href="Variables.htm#ThisLabel">A_ThisLabel</a> and <a href="Variables.htm#ThisFunc">A_ThisFunc</a>, which contain the names of the currently-executing label/function. [thanks Titan &amp; Majkinetor]</p>

<h2 id="v1.0.46.15">1.0.46.15 - May 9, 2007</h2>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl</a>, <a href="lib/GuiControlGet.htm">GuiControlGet</a>, and <code>Gui <a href="lib/ListView.htm#GuiLV">ListView</a>/<a href="lib/TreeView.htm#GuiTV">TreeView</a></code> to support <a href="Functions.htm#static">static variables</a> and <a href="Functions.htm#ByRef">ByRefs</a> that point to globals/statics. [thanks Peter]</p>
<p>Fixed <a href="lib/FileInstall.htm">FileInstall</a> causing the <a href="lib/Random.htm">Random</a> command to become non-random in <a href="Scripts.htm#ahk2exe">compiled scripts</a>. [thanks Velocity]</p>
<p>Reduced the size of <a href="Scripts.htm#ahk2exe">compiled scripts</a> by about 16 KB due to UPX 3.0. [thanks to atnbueno for discovering the optimal command-line switches]</p>

<h2 id="v1.0.46.14">1.0.46.14 - May 2, 2007</h2>
<p>Added the "require administrator" flag to the installer to avoid a warning dialog on Windows Vista. [thanks Roussi Nikolov]</p>

<h2 id="v1.0.46.13">1.0.46.13 - May 1, 2007</h2>
<p>Fixed <a href="Hotkeys.htm">hotkeys</a> like <code>*x::</code> to fire even when <strong>x</strong> is also a hotkey that is prevented from firing due to <a href="lib/_IfWinActive.htm">#IfWin</a>. [thanks Joy2DWorld &amp; Engunneer]</p>
<p>Improved <a href="Functions.htm#optional">optional parameters</a> to accept quoted/literal strings as default values.</p>
<p>Improved <a href="Functions.htm#ByRef">ByRef parameters</a> with the ability to be <a href="Functions.htm#optional">optional</a> (i.e. they may accept default values). [thanks Corrupt]</p>

<h2 id="v1.0.46.12">1.0.46.12 - April 24, 2007</h2>
<p>Fixed inability to recognize a literal scientific notation number that begins with 0, such as 0.15e+1. [thanks Laszlo]</p>

<h2 id="v1.0.46.11">1.0.46.11 - April 23, 2007</h2>
<p>Fixed inability to have a <a href="Functions.htm">function-call</a> as the first item in certain <a href="Variables.htm#comma">comma-separated expressions</a>. [thanks Majkinetor]</p>
<p>Fixed WinTitles like <code class="no-highlight">ahk_id %ControlHwnd%</code> in <a href="lib/ControlGet.htm">ControlGet</a>'s FindString/Choice/List, and <a href="lib/Control.htm">Control</a>'s Add/Delete/Choose. [thanks Freighter &amp; PhiLho]</p>
<p>Improved floating point support to recognize scientific notation; e.g. 1.2e-5 (the decimal point is mandatory). Also improved "<a href="lib/SetFormat.htm#sci">SetFormat Float</a>" with an option to output in scientific notation. [thanks Laszlo]</p>

<h2 id="v1.0.46.10">1.0.46.10 - March 22, 2007</h2>
<p>Fixed <a href="lib/StringSplit.htm">StringSplit</a> inside assume-local <a href="Functions.htm">functions</a> so that it creates a local <a href="misc/Arrays.htm">array</a> even when OutputArray0 exists as a global but not a local. [thanks KZ]</p>
<p>Improved <a href="lib/ListView.htm#ItemChanged">ListView's item-changed notification ("I")</a> to indicate via ErrorLevel whether the item has been selected/deselected, focused/unfocused, and/or checked/unchecked. [thanks foom]</p>
<p>Added an additional layer of protection to <a href="Scripts.htm#ahk2exe">compiled scripts</a>. It is recommended that scripts containing sensitive data or source code be recompiled with the <a href="Scripts.htm#ahk2exeCmd">/NoDecompile switch</a>.</p>

<h2 id="v1.0.46.09">1.0.46.09 - March 4, 2007</h2>
<p>Fixed <code><a href="lib/SetExpression.htm">:=</a></code> deep inside expressions when used to assign the result of a recursive <a href="Functions.htm">function</a> to a <a href="Functions.htm#Local">local variable</a> (broken by 1.0.46.06). [thanks Laszlo]</p>
<p>Fixed inability to pass certain <a href="Variables.htm#ternary">ternary expressions</a> to <a href="Functions.htm#ByRef">ByRef parameters</a>. [thanks Titan]</p>
<p>Fixed <code><a href="lib/GuiControlGet.htm">GuiControlGet</a>, OutputVar, Pos</code> so that it doesn't make the OutputVar blank. [thanks PhiLho]</p>
<p>Changed and fixed continuation sections so that the <a href="Scripts.htm#CommentOption">"Comment" option</a> doesn't force the <a href="Scripts.htm#LTrim">LTrim option</a> into effect. [thanks Titan]</p>
<p>Changed the <a href="https://learn.microsoft.com/cpp/build/reference/tsaware-create-terminal-server-aware-application">Terminal Server Awareness flag</a> back to "disabled" on AutoHotkey.exe and compiled scripts. This improves flexibility and backward compatibility (see <a href="https://www.autohotkey.com/board/topic/14700-">discussion</a> at forum).</p>

<h2 id="v1.0.46.08">1.0.46.08 - February 7, 2007</h2>
<p>Fixed unreliability of <a href="Variables.htm#ComSpec">ComSpec</a> and <a href="Concepts.htm#environment-variables">environment variables</a> on Windows 9x (broken by v1.0.46.07). [thanks Loriss]</p>
<p>Changed: When AutoHotkey.exe is launched without a script specified, it will now run (or prompt you to create) the file AutoHotkey.ahk in the <a href="Variables.htm#MyDocuments">My Documents</a> folder. The only exception is when AutoHotkey.ini exists in the working directory, in which case it uses the old behavior of executing that file.</p>
<p>Improved <a href="lib/DllCall.htm">DllCall</a> to support an integer in place of the function name, which is interpreted as the address of the function to call. [thanks Sean]</p>

<h2 id="v1.0.46.07">1.0.46.07 - January 23, 2007</h2>
<p>Fixed crash of illegally-named <a href="misc/Arrays.htm">dynamic variables</a> on the left of an equal-sign assignment (broken by v1.0.45). [thanks PhiLho]</p>
<p>Fixed <a href="lib/FileMoveDir.htm">FileMoveDir</a>'s "Option 2" to work properly even when the directory is being both renamed and moved. [thanks bugmenot]</p>
<p>Fixed inability to pass a variable <a href="Functions.htm#ByRef">ByRef</a> if that same expression changed it from empty to non-empty (when <a href="lib/_NoEnv.htm">#NoEnv</a> is absent). [thanks Joy2DWorld]</p>
<p>Changed DllCall's <a href="lib/DllCall.htm#LastError">A_LastError</a> to reflect only changes made by the script, not by AutoHotkey itself. [thanks Azerty]</p>

<h2 id="v1.0.46.06">1.0.46.06 - January 16, 2007</h2>
<p>Applied minor fixes and improvements to <a href="misc/RegEx-QuickRef.htm">regular expressions</a> by upgrading from PCRE 6.7 to 7.0. One of the most notable improvements is the `a option, which recognizes any type of newline (namely `r, `n, or `r`n). Similarly, the \R escape sequence means "any single newline of any type". See also: <a href="http://www.pcre.org/changelog.txt">Full PCRE changelog</a></p>
<p>Changed and fixed all <a href="lib/Control.htm">Control commands</a> and <a href="lib/StatusBarWait.htm">StatusBarWait</a> to obey <a href="lib/SetTitleMatchMode.htm#RegEx">SetTitleMatchMode RegEx</a> as documented.</p>
<p>Changed <a href="lib/RegExReplace.htm">RegExReplace()</a> to return the original/unaltered string rather than "" when an error occurs.</p>
<p>Changed: Enabled the <a href="https://learn.microsoft.com/cpp/build/reference/tsaware-create-terminal-server-aware-application">Terminal Server Awareness flag</a> on AutoHotkey.exe and <a href="Scripts.htm#ahk2exe">compiled scripts</a>.</p>
<p>Improved performance when <a href="Variables.htm#AssignOp">assigning</a> large strings returned from <a href="Functions.htm">user-defined functions</a>. [thanks Laszlo]</p>

<h2 id="v1.0.46.05">1.0.46.05 - January 4, 2007</h2>
<p>Fixed the <a href="lib/Input.htm">Input command</a> to allow named end keys like {F9} to work even when the shift key is being held down (broken by v1.0.45). [thanks Halweg]</p>
<p>Fixed inability of "<a href="lib/Gui.htm#Show">Gui Show</a>" to focus the GUI window when the tray menu is used both to reload the script and to show the GUI window. [thanks Rnon]</p>
<p>Fixed inability to pass some types of <a href="Variables.htm#AssignOp">assignments (:=)</a> to a <a href="Functions.htm#ByRef">ByRef</a> parameter. [thanks Laszlo]</p>

<h2 id="v1.0.46.04">1.0.46.04 - January 2, 2007</h2>
<p>Fixed inability to pass the result of an <a href="Variables.htm#AssignOp">assignment (:=)</a> to a <a href="Functions.htm#ByRef">ByRef</a> parameter. [thanks Titan]</p>

<h2 id="v1.0.46.03">1.0.46.03 - December 18, 2006</h2>
<p>Fixed <a href="lib/ListView.htm">ListView</a>'s floating point sorting to produce the correct ordering. [thanks oldbrother/Goyyah/Laszlo]</p>

<h2 id="v1.0.46.02">1.0.46.02 - December 17, 2006</h2>
<p>Fixed <a href="Concepts.htm#environment-variables">environment variables</a> to work properly as input variables in various commands such as <a href="lib/StringLen.htm">StringLen</a> and <a href="lib/StringReplace.htm">StringReplace</a> (broken by 1.0.44.14). [thanks Camarade_Tux]</p>

<h2 id="v1.0.46.01">1.0.46.01 - December 15, 2006</h2>
<p class="note"><strong>NOTE:</strong> Although this release has been extensively tested, several low-level enhancements were made. If you have any mission-critical scripts, it is recommended that you retest them and/or wait a few weeks for any bugs to get fixed.</p>
<p>Fixed comma-separated <a href="Functions.htm#DeclareInit">declaration initializers</a> such as <code>local x = 1, y = 2</code> to work even when immediately below an if/else/loop statement.</p>
<p>Fixed <a href="Variables.htm#comma">comma-separated expressions</a> so when the leftmost item is an assignment, it will occur before the others rather than after. [thanks Laszlo]</p>
<p>Changed and fixed <a href="Functions.htm">function-calls</a> so that any changes they make to <a href="Variables.htm#ref">dynamic variable names</a>, <a href="Concepts.htm#environment-variables">environment variables</a>, and <a href="Variables.htm#BuiltIn">built-in variables</a> (such as <a href="misc/Clipboard.htm">Clipboard</a>) are always visible to subsequent parts of the expression that called them.</p>
<p>Changed: When a <a href="Variables.htm#comma">multi-statement comma</a> is followed immediately by a variable and an equal sign, that equal sign is automatically treated as a <a href="lib/SetExpression.htm">:= assignment</a>. For example, all of the following are assignments: <code>x:=1, y=2, a=b=c</code>.</p>
<p>Changed <a href="Variables.htm#comma">comma-separated expressions</a> to produce the following effects: 1) the leftmost <strong>/=</strong> operator becomes <a href="Variables.htm#divide">true divide</a> rather than <a href="lib/EnvDiv.htm">EnvDiv</a>; 2) blank values are not treated as zero in math expressions (thus they yield blank results).</p>
<p>Improved the performance of <a href="Variables.htm#Expressions">expressions</a> by 5 to 20&nbsp;% (depending on type).</p>
<p>Improved the <a href="Variables.htm#AssignOp">new assignment operators such as <strong>.=</strong></a> to support the <a href="misc/Clipboard.htm">Clipboard variable</a> (even in <a href="Variables.htm#comma">comma-separated expressions</a>).</p>
<p>Improved the <a href="Variables.htm#AssignOp"><strong>.=</strong> operator</a> so that it doesn't require a space to its left.</p>
<p>Improved GUI controls to accept <a href="Functions.htm#static">static variables</a> as their <a href="lib/Gui.htm#var">associated variables</a> (formerly only globals were allowed).</p>
<p>Added option <a href="lib/Gui.htm#HwndOutputVar">HwndOutputVar</a> to <code>Gui Add</code>, which stores a control's HWND in OutputVar. [thanks Corrupt &amp; Toralf]</p>

<h2 id="v1.0.46.00">1.0.46 - November 29, 2006</h2>
<p class="note"><strong>NOTE:</strong> Although this release has been extensively tested and is not expected to break any existing scripts, several low-level enhancements were made. If you have any mission-critical scripts, it is recommended that you retest them and/or wait a few weeks for any bugs to get fixed.</p>
<p>Added function <a href="lib/SubStr.htm">SubStr()</a>, which retrieves the specified number of characters at the specified position in a string.</p>
<p>Added assignment operators <a href="Variables.htm#AssignOp">//=, <strong>.</strong>=, |=, &amp;=, ^=, &gt;&gt;=, and &lt;&lt;=</a>, which can be used anywhere in expressions. For example, <code>Var .= "abc"</code> appends the string "abc" to <em>Var</em>'s current contents.</p>
<p>Added full support in expressions for the operators <a href="Variables.htm#AssignOp">:=, ++, --, +=, -=, *=, and /=</a> (formerly, they could be used only as the leftmost operator on a line). All <a href="Variables.htm#AssignOp">assignment operators</a> (especially <a href="Variables.htm#IncDec">++ and --</a>) behave in a C-like way when their result is used by some other operator.</p>
<p>Added the <a href="Variables.htm#ternary">ternary operator (?:)</a>, which is a shorthand replacement for the <a href="lib/IfExpression.htm">if-else statement</a>. For example, <code>var := x&gt;y ? 2 : 3</code> assigns the value 2 if x is greater than y; otherwise it assigns 3.</p>
<p>Added support for <a href="Variables.htm#comma">comma-separated expressions</a>, which allow a single line to contain multiple assignments, function calls, and other expressions. [thanks PhiLho &amp; Titan]</p>
<p>Improved <a href="Functions.htm#DeclareInit">variable declarations</a> to support initialization on the same line. Note: A <a href="Functions.htm#static">static variable</a>'s initialization occurs only once, before the script begins executing.</p>
<p>Improved <a href="Scripts.htm#continuation">line continuation</a> to support all expression operators. For example, a line that starts with "?" or "+" is automatically appended to the line above it.</p>
<p>Improved performance of operators <a href="Variables.htm#concat">"<strong>.</strong>"</a> and <a href="Variables.htm#concat">"<strong>.=</strong>"</a> to be as fast as the percent-sign method of appending a string.</p>
<p>Improved expressions to allow more types of <a href="Variables.htm#unary">consecutive unary operators</a> such as <strong>!!</strong>Var. [thanks Laszlo]</p>
<p>Changed <a href="lib/Critical.htm">Critical</a> to check messages less often (20 vs. 10&nbsp;ms), which improves the reliability of frequently-called <a href="lib/OnMessage.htm">OnMessage functions</a>. [thanks Majkinetor]</p>
<p>Changed: A variable named simply "?" is no longer valid in expressions due to the new <a href="Variables.htm#ternary">ternary operator</a>.</p>
<p>Fixed <a href="Hotkeys.htm">hotkeys</a> to support <code>:::</code> (colon as a hotkey) and <code>: &amp; x::</code> (colon as a <a href="Hotkeys.htm#combo">hotkey prefix</a>).</p>
<p>Fixed the installer to remove psapi.dll from the AutoHotkey folder (except on Windows NT4). This avoids a conflict with Internet Explorer 7. [thanks to all who reported it]</p>

<h2 id="v1.0.45.04">1.0.45.04 - November 15, 2006</h2>
<p>Fixed crash on Windows 9x when a script doesn't actually run (e.g. due to syntax error) (broken by v1.0.45). [thanks rogerg]</p>
<p>Changed <a href="lib/Control.htm">Control Style|ExStyle</a> to report ErrorLevel 0 vs. 1 when the requested style change wasn't necessary because it was already in effect.</p>
<p>Improved <a href="lib/_Include.htm">#Include</a> to support <a href="Variables.htm#AppData">%A_AppData%</a> and <a href="Variables.htm#AppDataCommon">%A_AppDataCommon%</a>. [thanks Tekl]</p>

<h2 id="v1.0.45.03">1.0.45.03 - November 12, 2006</h2>
<p>Fixed <a href="lib/LoopFile.htm">file-pattern loops</a> not to crash when recursing into paths longer than 259 characters. In addition, such paths and files are now ignored (skipped over) by file-pattern loops, <a href="lib/FileSetAttrib.htm">FileSetAttrib</a>, and <a href="lib/FileSetTime.htm">FileSetTime</a>. [thanks PhilR]</p>
<p>Fixed <a href="Functions.htm">functions</a> that call themselves and assign the result to one of their own <a href="Functions.htm#Local">locals</a> (broken by v1.0.45). [thanks bjennings]</p>
<p>Fixed crash of scripts containing <a href="misc/RegEx-QuickRef.htm">regular expressions</a> that have compile errors. [thanks PhiLho]</p>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl</a> not to convert <a href="lib/GuiControls.htm#CheckBox">checkboxes</a> into 3-state unless requested. [thanks JBensimon]</p>
<p>Changed <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a> to announce a user-agent of "AutoHotkey" to the server rather than a blank string. [thanks jaco0646]</p>
<p>Improved <a href="Scripts.htm#continuation">continuation sections</a> to support semicolon comments inside the section via the option-word <em>Comments</em>.</p>

<h2 id="v1.0.45.02">1.0.45.02 - November 8, 2006</h2>
<p>Fixed <a href="lib/StringLower.htm">StringUpper</a> and <a href="lib/StringLower.htm">StringLower</a> to work when OutputVar is the clipboard (broken by v1.0.45). [thanks songsoverruins]</p>
<p>Fixed the hotkeys ~Alt, ~Control, and ~Shift to fire upon press-down rather than release (broken by v1.0.44).<br>
Background: Without the tilde, Alt/Control/Shift fire upon release to avoid taking over both the left and right key. But a specific left/right hotkey like LAlt or RShift fires upon press-down.</p>

<h2 id="v1.0.45.01">1.0.45.01 - November 7, 2006</h2>
<p>Fixed <a href="lib/FileReadLine.htm">FileReadLine</a> and <a href="lib/FileSelectFile.htm">FileSelectFile</a> not to crash or misbehave when other <a href="misc/Threads.htm">threads</a> interrupt them (broken by v1.0.45). [thanks toralf]</p>
<p>Fixed <a href="lib/RegExMatch.htm">RegExMatch()</a> so that when there's no match, named subpatterns are properly set to "" in the output array. [thanks PhiLho]</p>
<p>Fixed <a href="lib/RegExMatch.htm">RegExMatch()</a>'s "J" option to properly write duplicate named subpatterns to the output array. [thanks PhiLho]</p>
<p>Changed <a href="lib/SetWorkingDir.htm">SetWorkingDir</a> and <a href="lib/_Include.htm">#Include DirName</a> to succeed even for a root directory such as C: that lacks a backslash.</p>
<p>Improved <a href="lib/DllCall.htm">DllCall()</a> to display a warning dialog if the called function writes to a variable of zero capacity.</p>

<h2 id="v1.0.45.00">1.0.45 - November 4, 2006</h2>
<p class="note"><strong>Note:</strong> Although this release has been extensively tested and is not expected to break any existing scripts, several low-level performance enhancements were made. If you have any mission-critical scripts, it is recommended that you retest them and/or wait a few weeks for any bugs to get fixed.</p>
<p>Added support for <a href="misc/RegEx-QuickRef.htm">regular expressions</a> via <a href="lib/RegExMatch.htm">RegExMatch()</a>, <a href="lib/RegExReplace.htm">RegExReplace()</a>, and <a href="lib/SetTitleMatchMode.htm#RegEx">SetTitleMatchMode RegEx</a>. [thanks Philip Hazel &amp; PhiLho]</p>
<p>Improved performance and memory utilization of <a href="lib/StringReplace.htm">StringReplace</a>.</p>
<p>Improved performance of the <a href="lib/SetExpression.htm">colon-equal operator (:=)</a> for expressions and functions involving long strings.</p>
<p>Improved <a href="lib/ControlClick.htm">ControlClick</a> with a new option "NA" that avoids activating the target window (this mode also improves reliability in some cases). In addition, it's been documented that <a href="lib/SetControlDelay.htm">SetControlDelay -1</a> can improve the reliability of ControlClick in some cases. [thanks nnesori]</p>
<p>Changed <a href="lib/GuiControls.htm#Button">GUI buttons</a> to default to <a href="lib/Gui.htm#Wrap">"no word-wrap"</a> when no width, height, or CR/LF characters were specified. This may solve button display issues under some desktop themes.</p>
<p>Fixed "<a href="lib/Transform.htm#HTML">Transform HTML</a>" for the following characters: &amp;`n&gt;&lt;</p>
<p>Fixed misinterpretation of lines starting with "if not is" such as "if not <strong>Is</strong>Done".</p>
<p>Fixed inability of "<a href="lib/Gui.htm#Show">Gui Show</a>" to move a window vertically downward to where its bottommost row of pixels is now.</p>
<p>Fixed inability to use <a href="lib/GroupActivate.htm">GroupActivate</a> as the only line beneath an IF or ELSE.</p>
<p>Fixed inability of the <a href="lib/Input.htm">Input command</a> to differentiate between end keys enclosed in braces and their (un)shifted counterparts; e.g. '{' vs. '['. [thanks Laszlo]</p>

<span id="Older_Changes"></span>
<h2 id="v1.0.44.14">1.0.44.14 - October 2, 2006</h2>
<p class="note"><strong>Note:</strong> Although this release has been extensively tested and is not expected to break any existing scripts, several low-level performance enhancements were made. If you have any mission-critical scripts, it is recommended that you retest them and/or wait a few weeks for any bugs to get fixed.</p>
<p>Fixed <a href="Variables.htm#loop">loop-variables</a> like A_Index when accessed in more than one of a line's parameters. The inaccuracy occurred only when one of those parameters called a <a href="Functions.htm">function</a> that returned directly from the body of a loop. [thanks NumEric]</p>
<p>Changed <a href="lib/ListVars.htm">ListVars</a> to display <a href="Functions.htm#ByRef">ByRef parameters</a> by their own name rather than the caller's.</p>
<p>Changed the <a href="lib/Input.htm">Input command</a> to do nothing on Windows 9x (not even setting ErrorLevel and OutputVar).</p>
<p>Raised the limit on the number of <a href="lib/Gui.htm#Font">GUI fonts</a> from 100 to 200. [thanks philou]</p>
<p>Changed <a href="Functions.htm#StrLen">StrLen()</a>/<a href="lib/StringLen.htm">StringLen</a> and internal string-handling to avoid calculating a string's length when possible. Although this enhances performance (especially for large strings), scripts that use <a href="lib/DllCall.htm">DllCall</a> to pass a string via the <a href="Variables.htm#amp">address operator (&amp;)</a> rather than as a <a href="lib/DllCall.htm#str">str parameter</a> should call <a href="lib/VarSetCapacity.htm#neg1">VarSetCapacity(Var, -1)</a> to correct the internally-stored length (if it changed).</p>
<p>Improved performance slightly (above and beyond the StrLen improvement).</p>

<h2 id="v1.0.44.13">1.0.44.13 - September 20, 2006</h2>
<p>Fixed <a href="lib/ControlGetPos.htm">ControlGetPos</a> and <a href="lib/ControlMove.htm">ControlMove</a> to work with <code class="no-highlight">ahk_id %ControlHWND%</code>. [thanks Hardeep]</p>
<p>Fixed <a href="lib/_CommentFlag.htm">#CommentFlag</a> to affect the line beneath it the same way as other lines. [thanks PhiLho]</p>
<p>Changed <a href="Variables.htm#OSVersion">A_OSVersion</a> to report Windows Vista as "WIN_VISTA" rather than "".</p>
<p>Added options to set <a href="lib/Gui.htm#MinSize">min/max size</a> of GUI windows; for example: <code>Gui +MinSize320x240 +MaxSize640x480</code></p>

<h2 id="v1.0.44.12">1.0.44.12 - September 13, 2006</h2>
<p>Fixed <a href="lib/SetTimer.htm">timers</a> interfering with double-clicks in <a href="lib/FileSelectFile.htm">FileSelectFile</a>. [thanks DJAnonimo]</p>
<p>Fixed <a href="lib/_InstallMouseHook.htm">mouse hook</a> causing a delay when pressing a GUI window's title bar buttons. [thanks Tekl]</p>
<p>Improved <a href="lib/Gui.htm">GUI windows</a> to have CS_DBLCLKS so that <a href="lib/OnMessage.htm">OnMessage()</a> can monitor double clicks via WM_LBUTTONDBLCLK, WM_RBUTTONDBLCLK, and WM_MBUTTONDBLCLK. [thanks Hardeep]</p>
<p>Improved ListViews to support <a href="lib/ListView.htm#Logical">logical sorting</a>, which treats digits as numbers rather than mere characters. [thanks Tekl &amp; Hacker]</p>

<h2 id="v1.0.44.11">1.0.44.11 - September 9, 2006</h2>
<p>Fixed <a href="lib/FileSelectFolder.htm">FileSelectFolder</a> and <a href="lib/TreeView.htm">TreeView</a> to respond properly to mouse clicks when <a href="lib/SetTimer.htm">timers</a> are running.</p>
<p>Fixed inability of <a href="lib/OnMessage.htm">OnMessage()</a> to consistently monitor certain messages such as WM_NOTIFY. [thanks numEric]</p>
<p>Fixed inability of literal/quoted strings to contain <code class="no-highlight">`%</code>.</p>
<p>Fixed <a href="Scripts.htm#continuation">continuation sections</a> to support <a href="lib/_EscapeChar.htm">#EscapeChar</a>, <a href="lib/_EscapeChar.htm#DerefChar">#DerefChar</a>, and <a href="lib/_EscapeChar.htm#Delimiter">#Delimiter</a>. [thanks Laszlo]</p>
<p>Changed <a href="lib/GuiControls.htm#GroupBox">GroupBox</a> to default to "no word-wrapping". This can be overridden via <code class="no-highlight">+Wrap</code>.</p>
<p>Changed/improved the <a href="Variables.htm#pow">** operator</a> and <a href="lib/Transform.htm">Transform Pow</a> to support negative bases when the exponent isn't fractional. [thanks Laszlo]</p>
<p>Improved <a href="lib/Gui.htm">GUI</a> responsiveness during <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a> (especially for slow downloads).</p>

<h2 id="v1.0.44.10">1.0.44.10 - August 27, 2006</h2>
<p>Fixed <a href="lib/OnMessage.htm">OnMessage()</a> when called from inside a monitor function for the purpose of disabling some other monitor. [thanks Hardeep]</p>
<p>Changed/fixed <a href="lib/ImageSearch.htm">ImageSearch</a>'s TransN option to use RGB vs. BGR as documented. [thanks Tom Lorimor]</p>
<p>Changed the installer to omit the "Run" verb for .ahk files. The "Open" verb is now the default (with a new display-name of "Run Script"). [thanks numEric]</p>

<h2 id="v1.0.44.09">1.0.44.09 - August 9, 2006</h2>
<p>Fixed <a href="Hotkeys.htm#prefixdollar">hook hotkeys</a> like $^b not to fire twice when a similar, <a href="Hotkeys.htm#keyup">key-up hotkey</a> exists (like <code>#b up::</code>). [thanks Newbie]</p>
<p>Fixed one too many backspaces in <a href="Hotstrings.htm#Asterisk">asterisk hotstrings</a> whose next-to-last character is a dead key. [thanks Henrique]</p>
<p>Fixed <a href="lib/Gui.htm#Color">Gui Color</a> to work after the background color was previously changed to "default". [thanks Hardeep]</p>
<p>Changed <code>if var <a href="lib/IfIs.htm">is</a> xdigit</code> to tolerate a 0x prefix. [thanks Titan]</p>
<p>Added command <a href="lib/Gui.htm#PlusLabel">Gui +LabelMyGui</a> to support custom label names (e.g. "MyGuiClose" instead of "2GuiClose"). This also allows multiple GUI windows to share the same set of labels. [thanks Tekl]</p>

<h2 id="v1.0.44.08">1.0.44.08 - July 25, 2006</h2>
<p>Fixed <a href="lib/Gui.htm#Show">Gui Show</a> not to unmaximize a window unless the options require it. [thanks foom]</p>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl</a>'s +/-Left/Right for buttons, checkboxes, and radios. [thanks Hardeep]</p>
<p>Fixed <a href="lib/GuiControls.htm#UpDown">UpDown</a> creation to widen its buddy only when the buddy had no explicit width. [thanks Thalon]</p>
<p>Improved <a href="lib/MsgBox.htm">MsgBox</a>/<a href="lib/IfMsgBox.htm">IfMsgBox</a> to support Cancel/Try Again/Continue, as well as a Help button. [thanks jballi]</p>

<h2 id="v1.0.44.07">1.0.44.07 - June 17, 2006</h2>
<p>Fixed stack overflow when a <a href="lib/LoopReg.htm">registry loop</a> traverses deeply nested subkeys. [thanks Eggi]</p>
<p>Fixed <a href="lib/Hotkey.htm">Hotkey command</a> to report ErrorLevel 0 vs. 51 upon success for joystick hotkeys. [thanks Roland]</p>
<p>Changed <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> to exclude formats that cause Outlook's MS Word editor to display error dialogs. [thanks deanhill1971]</p>
<p>Changed and improved <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a> to retrieve the file from the remote server vs. the cache. There is a new option to override this. [thanks olfen]</p>
<p>Improved <a href="misc/Remap.htm">remapping</a> to support destination characters that don't exist on the keyboard (such as <code>F1::ð</code> in English). [thanks DavidT]</p>

<h2 id="v1.0.44.06">1.0.44.06 - June 8, 2006</h2>
<p>Fixed <a href="misc/Remap.htm">remapping-to-modifier</a> such as <code>F1::Control</code> (broken by v1.0.44.05). [thanks formarx]</p>

<h2 id="v1.0.44.05">1.0.44.05 - June 7, 2006</h2>
<p>Fixed mouse movement being off by 1 pixel for coordinates very near 0 (broken by v1.0.43). [thanks numEric]</p>
<p>Changed and improved <a href="misc/Remap.htm">remapping-to-modifier</a> (such as <code>F1::Control</code>) to release the modifier during the script's other uses of <a href="lib/Send.htm">Send</a>.</p>

<h2 id="v1.0.44.04">1.0.44.04 - May 31, 2006</h2>
<p>Fixed double-colon warning dialog appearing upon launch of certain scripts. (broken by v1.0.44.03)</p>
<p>Fixed <a href="Hotkeys.htm#combo">combination hotkeys</a> like <code>a &amp; b::</code> to work even if <code>b &amp; a::</code> and <code>b &amp; a up::</code> are also present.</p>
<p>Fixed buddyless <a href="lib/GuiControls.htm#UpDown">UpDown controls</a> to work even if a <a href="lib/GuiControls.htm#StatusBar">StatusBar</a> is present. [thanks Titan]</p>

<h2 id="v1.0.44.03">1.0.44.03 - May 29, 2006</h2>
<p>Fixed <a href="Functions.htm#FileExist">FileExist()</a> to report "X" rather than "" for files whose attributes are all undefined. [thanks Peter]</p>
<p>Fixed <a href="lib/GuiControls.htm#Tab">Tab controls</a> so that the first <a href="lib/GuiControls.htm#Text">Text control</a> added to a new page is auto-positioned correctly even if the previously added control was a Text control on some other page.</p>
<p>Fixed <a href="lib/ImageSearch.htm">ImageSearch</a> so that a transparent color like TransBlack is as effective in variation mode as non-variation mode. [thanks Troz]</p>
<p>Fixed <a href="lib/GetKeyState.htm">GetKeyState</a> and <a href="lib/KeyWait.htm">KeyWait</a> to accept characters that don't exist in the current keyboard layout (in case the keyboard layout changes after launching the script).</p>
<p>Fixed <a href="Hotkeys.htm">hotkeys</a> that don't exist in the current keyboard layout (such as <code>^!ä::</code> in English) to display a warning and end the <a href="Scripts.htm#auto">auto-execute section</a>. [thanks Androgen Belkin]</p>
<p>Changed and improved <a href="lib/ControlSend.htm">ControlSend</a>, <a href="lib/Send.htm">Send</a>, <a href="Hotstrings.htm">Hotstrings</a>, <a href="lib/Input.htm">Input</a>, and <a href="Hotkeys.htm#AltGr">AltGr</a> handling to use the target window's language rather than the script's. If you use only one keyboard layout on your system, this should not affect anything. [thanks Androgen Belkin]</p>
<p>Improved <a href="lib/VarSetCapacity.htm#neg1">VarSetCapacity()</a> to interpret a capacity of -1 as "update this variable's internally-stored length". This is useful in cases where a variable has been altered indirectly, such as by passing its <a href="Variables.htm#amp">address</a> via <a href="lib/DllCall.htm">DllCall()</a>.</p>

<h2 id="v1.0.44.02">1.0.44.02 - May 20, 2006</h2>
<p>Fixed hotkeys that use <a href="Hotkeys.htm#combo"><code>&amp;</code></a> and <a href="Hotkeys.htm#Tilde"><code>~</code></a> together (e.g. <code>~a &amp; b::</code> and <code>~LButton &amp; RButton::</code>) (broken by v1.0.44). [thanks SlimlinE &amp; Spike]</p>

<h2 id="v1.0.44.01">1.0.44.01 - May 15, 2006</h2>
<p>Fixed <a href="lib/GuiControls.htm#StatusBar">StatusBar</a>'s grabbing of <a href="lib/GuiControls.htm#UpDown">UpDowns</a> that are added after it. [thanks Tekl]</p>
<p>Changed <a href="Functions.htm#Round">Round()</a> to display exactly N decimal places rather than obeying <a href="lib/SetFormat.htm">SetFormat</a>.</p>

<h2 id="v1.0.44.00">1.0.44 - May 14, 2006</h2>
<p>Fixed <a href="misc/Clipboard.htm#OnClipboardChange">OnClipboardChange</a> to work even when the script is displaying a MsgBox or other dialog.</p>
<p>Fixed <a href="lib/FileCreateDir.htm">FileCreateDir</a> not to report ErrorLevel 1 when the specified directory ends in <code class="no-highlight">\</code>. [thanks Wesley]</p>
<p>Fixed <a href="Hotkeys.htm">hotkeys</a> <code>Control::</code>, <code>Shift::</code>, and <code>Alt::</code> to fire on release of the key rather than press-down (broken by v1.0.41).</p>
<p>Fixed <a href="lib/Menu.htm#Icon">loading</a> of icon #1 from nonstandard file types such as .bin.</p>
<p>Fixed <a href="lib/ListView.htm">ListView</a> creation to obey the text color set by <a href="lib/Gui.htm#Font">Gui Font</a>.</p>
<p>Changed and fixed the <a href="Hotkeys.htm#Tilde">hotkey tilde prefix (~)</a> so that hotkeys like ~Esc and Esc are considered duplicates; that is, a script cannot define both ~Esc and Esc unless they are under different <a href="lib/_IfWinActive.htm">#IfWin criteria</a> (in which case ~Esc and Esc have been fixed to work properly). [thanks jballi]</p>
<p>Changed and improved <a href="lib/ListView.htm">ListViews</a>: 1) a new option <a href="lib/ListView.htm#WantF2">WantF2</a> is in effect by default, which causes an F2 keystroke to edit the current row (when not <a href="lib/ListView.htm#ReadOnly">ReadOnly</a>); 2) added <code>LV_Modify(Row, "<a href="lib/ListView.htm#Vis">Vis</a>")</code> to scroll an item into view; 3) <a href="lib/ListView.htm#Drag">drag notifications</a> occur even without AltSubmit; 4) <a href="lib/ListView.htm#ItemChanged">item-change notifications</a> have A_EventInfo set to the row number; 5) ErrorLevel no longer mirrors <a href="Variables.htm#EventInfo">A_EventInfo</a> in cases where it was never documented to do so (same for <a href="lib/Gui.htm#GuiContextMenu">GuiContextMenu</a>).</p>
<p>Improved <a href="lib/GuiControls.htm#Edit">Edit controls</a> to select all text in response to <kbd>Ctrl</kbd>+<kbd>A</kbd>. This can be disabled via <code class="no-highlight">-WantCtrlA</code>.</p>
<p>Added new GUI control types <a href="lib/TreeView.htm">TreeView</a> and <a href="lib/GuiControls.htm#StatusBar">StatusBar</a>.</p>

<h2 id="v1.0.43.11">1.0.43.11 - May 1, 2006</h2>
<p>Fixed <a href="Variables.htm#WorkingDir">%A_WorkingDir%</a> on Windows 9x, which was sometimes blank. [thanks Points]</p>
<p>Improved <a href="lib/BlockInput.htm#MouseMove">BlockInput</a> with a new mode that blocks only physical movement of the mouse, not keystrokes or mouse clicks.</p>

<h2 id="v1.0.43.10">1.0.43.10 - April 28, 2006</h2>
<p>Improved <a href="lib/PixelGetColor.htm">PixelGetColor</a> with two alternate modes that work in a broader variety of windows and full-screen apps. [thanks TDMedia]</p>
<p>Improved <a href="lib/StringMid.htm">StringMid</a> to allow <em>Count</em> to be omitted to retrieve all characters. [thanks kapege.de]</p>
<p>Improved <a href="lib/FileSelectFile.htm">FileSelectFile</a> to support special folders such as My Computer via <a href="misc/CLSID-List.htm">CLSID strings</a> (<a href="lib/FileSelectFolder.htm">FileSelectFolder</a> and <a href="lib/Run.htm">Run</a> already support them).</p>

<h2 id="v1.0.43.09">1.0.43.09 - April 25, 2006</h2>
<p>Fixed <a href="lib/Send.htm#SendInputDetail">SendInput</a> not to revert to <a href="lib/Send.htm#SendEvent">SendEvent</a> merely because another script has a mouse hook. Only another <a href="lib/_InstallKeybdHook.htm">keyboard hook</a> should do that. [thanks baby-luck]</p>
<p>Fixed <a href="lib/ListView.htm#LV_GetCount">LV_GetCount()</a> to work even if the "C" in its name is lowercase.</p>
<p>Changed <a href="lib/FileSelectFile.htm">FileSelectFile</a> to navigate/follow shortcuts (.lnk files) rather than selecting them. There is also a new option to override this. [thanks Veovis &amp; PhiLho]</p>
<p>Added <a href="lib/Gui.htm#LastFoundExist">Gui +LastFoundExist</a> to detect the existence of a GUI window. [thanks Tekl &amp; Evl]</p>
<p>Added built-in variables <a href="Variables.htm#AppData">A_AppData</a>, <a href="Variables.htm#AppDataCommon">A_AppDataCommon</a>, and <a href="Variables.htm#Temp">A_Temp</a> (A_Temp is the folder designated to hold temporary files).</p>

<h2 id="v1.0.43.08">1.0.43.08 - April 17, 2006</h2>
<p>Changed <a href="lib/Send.htm#SendInputDetail">SendInput</a> to use <code><a href="lib/SetKeyDelay.htm">SetKeyDelay</a> -1, 0</code> when it reverts to <a href="lib/Send.htm#SendEvent">SendEvent mode</a> (unless SendEvent's KeyDelay is <code>-1,-1</code>, in which case <code>-1,-1</code> is used).</p>
<p>Added directive <a href="lib/_NoEnv.htm">#NoEnv</a>, which is recommended for all new scripts because:</p>
<ol>
  <li>It significantly improves performance whenever empty variables are used in an expression or command. It also improves <a href="lib/DllCall.htm">DllCall</a>'s performance when unquoted parameter types are used (e.g. Int vs. "Int").</li>
  <li>It prevents script bugs caused by <a href="Concepts.htm#environment-variables">environment variables</a> whose names unexpectedly match variables used by the script.</li>
  <li>A future version of AutoHotkey such as 1.1 might make this behavior the default (though such a change is not expected for at least a year).</li>
</ol>
<p>Added built-in variables <a href="Variables.htm#ComSpec">ComSpec</a> and <a href="Variables.htm#ProgramFiles">ProgramFiles</a> to ease the transition to <a href="lib/_NoEnv.htm">#NoEnv</a>.</p>
<p>Added command <a href="lib/EnvGet.htm">EnvGet</a>, which retrieves an environment variable.</p>

<h2 id="v1.0.43.07">1.0.43.07 - April 12, 2006</h2>
<p>Fixed inability of <code><a href="lib/Menu.htm">Menu</a>, Tray, Icon</code> to load icon #1 from file types cpl/scr/drv/ocx/vbx/acm/bpl (broken by v1.0.43.03). Similarly, all icon-capable features have been improved to support these file types. [thanks Winkie &amp; PhiLho]</p>
<p>Fixed the following legacy commands to accept <a href="Functions.htm">function-calls</a> containing commas: EnvAdd/Sub, LeftClick(Drag), RightClick(Drag). [thanks Titan]</p>

<h2 id="v1.0.43.06">1.0.43.06 - April 9, 2006</h2>
<p>Changed <a href="misc/WinTitle.htm#ahk_id">ahk_id</a> to operate directly on the specified HWND when it's a control (child). Previously, it operated upon the topmost sub-control if that control had any sub-controls.</p>
<p>Improved <a href="lib/PostMessage.htm">Post/SendMessage</a> to fully support strings put into <a href="Variables.htm#amp">address variables</a> by the receiver (e.g. <code>PostMessage, Msg, &amp;MyVar</code>).</p>
<p>Improved support for control HWND as an alternative to control ClassNN: 1) Added a <a href="lib/MouseGetPos.htm">MouseGetPos</a> option to retrieve control HWND; 2) Added <a href="lib/WinGet.htm">WinGet ControlListHwnd</a> to retrieve a list of control HWNDs; 3) Added <a href="lib/ControlGet.htm#Hwnd">ControlGet Hwnd</a> to retrieve the HWND that corresponds to a control's ClassNN or text.</p>
<p>Added <a href="lib/GuiControlGet.htm">GuiControlGet FocusV</a>, which gets the focused control's variable name rather than its ClassNN.</p>

<h2 id="v1.0.43.05">1.0.43.05 - April 7, 2006</h2>
<p>Fixed and improved support for .ICL files (icon libraries), which was broken by v1.0.43.03. [thanks Tekl]</p>
<p>Changed case sensitivity in <a href="Hotkeys.htm">hotkey names</a> back to pre-1.0.43.03 behavior: high ANSI letters like Ä and Ü are treated as different hotkeys than their lowercase counterparts. [thanks copa017]</p>

<h2 id="v1.0.43.04">1.0.43.04 - April 4, 2006</h2>
<p>Fixed crash of characters above Chr(127) in <a href="Hotstrings.htm">hotstring abbreviations</a> and the locale-search-from-right mode of <a href="Functions.htm#InStr">InStr()</a> and <a href="lib/StringGetPos.htm">StringGetPos</a> (broken by v1.0.43.03). [thanks PhiLho &amp; brotherS]</p>

<h2 id="v1.0.43.03">1.0.43.03 - April 3, 2006</h2>
<p>Fixed <a href="lib/Menu.htm#distort">distortion</a> of 16x16 icons loaded via <a href="Scripts.htm#ahk2exe">ahk2exe</a> or <code><a href="lib/Menu.htm">Menu</a>, Tray, Icon</code>. [thanks Tekl]</p>
<p>Fixed the following to ignore <a href="lib/_MaxMem.htm">#MaxMem</a> as documented: <a href="lib/VarSetCapacity.htm">VarSetCapacity()</a>, <a href="lib/FileRead.htm">FileRead</a>, <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a>, and <a href="lib/ControlGet.htm#List">ControlGet (ListView)</a>. [thanks Dippy46]</p>
<p>Changed the following to use <a href="lib/StringCaseSense.htm#Locale">locale case insensitivity</a> vs. "A-Z only" insensitivity: <a href="Hotkeys.htm">hotkey names</a>, <a href="Hotstrings.htm">hotstring abbreviations</a>, <a href="lib/Menu.htm">menu names</a>, <a href="lib/Input.htm">Input's MatchList</a>, and <a href="lib/GuiControls.htm#TabCmd">Gui Tab</a>.</p>
<p>Changed the <a href="Variables.htm#equal">expression equal operator (=)</a> and the case-insensitive <a href="Functions.htm#InStr">InStr()</a> to use locale case insensitivity when <a href="lib/StringCaseSense.htm#Locale">StringCaseSense</a> is Locale or On.</p>
<p>Improved <a href="lib/StringCaseSense.htm">StringCaseSense</a> with a new option Locale that makes string comparisons case-insensitive according to the rules of the current user's locale. For example, most English and Western European locales treat the letters A-Z and ANSI letters like Ä and Ü as identical to their lowercase counterparts. [thanks Boskoop &amp; PhiLho]</p>
<p>Improved the <a href="lib/Sort.htm">Sort command</a> and <a href="lib/ListView.htm#Case">ListView sorting</a> with a locale-case-insensitive option.</p>
<p>Improved mouse wheel hotkeys (WheelDown/Up) to report the number of wheel turns in <a href="Hotkeys.htm#Wheel">A_EventInfo</a>, which allows distinguishing between fast and slow wheel movement. [thanks evl]</p>
<p>Improved <a href="lib/FileRead.htm">FileRead</a> with an option to read only the leading part of a file. [thanks Dippy46]</p>

<h2 id="v1.0.43.02">1.0.43.02 - March 30, 2006</h2>
<p>Fixed <a href="Hotstrings.htm#raw">raw-mode hotstrings</a> not to send the extra string {Raw} (broken by v1.0.43). [thanks stom2006]</p>
<p>Changed <a href="lib/SendMode.htm">SendMode</a>: 1) renamed InputThenEvent to Input; 2) added InputThenPlay, which is the same behavior as the former "Input". This was done because <a href="lib/Send.htm#SendEvent">SendEvent</a> is less likely to cause compatibility problems than <a href="lib/Send.htm#SendPlayDetail">SendPlay</a>.</p>

<h2 id="v1.0.43.01">1.0.43.01 - March 29, 2006</h2>
<p>Fixed mouse clicking at unspecified coordinates in particular apps; e.g. <code>Send {LButton}</code> (broken by v1.0.43). [thanks incith]</p>
<p>Fixed <a href="Hotkeys.htm#Tilde">tilde hotkeys</a> so that if they remove a hook, their own key doesn't get stuck down (e.g. <a href="scripts/MouseGestures.htm">Mouse Gestures script</a> and <code>~LCtrl::Hotkey, RButton, Off</code>). [thanks Stefan Taubenberger]</p>

<h2 id="v1.0.43.00">1.0.43 - March 25, 2006</h2>
<p class="note"><strong>Note:</strong> Although this release has been extensively tested and is not expected to break any existing scripts, several changes were made to the sending of keystrokes and mouse clicks. If you have any mission-critical scripts that rely on such features, it is recommended that they be re-tested or that you wait two weeks for any bugs to get fixed.</p>
<p>Fixed <a href="Hotkeys.htm#AltGr">AltGr hotkeys</a> that use <a href="lib/Send.htm">Send</a>, such as <code>&lt;^&gt;!m::Send ^c</code>. Also fixed AltGr remappings such as <code>F1::RAlt</code> [thanks foxer]</p>
<p>Fixed inability of <a href="lib/VarSetCapacity.htm">VarSetCapacity</a> to free the memory of a <a href="Functions.htm#ByRef">ByRef parameter</a>. [thanks Corrupt]</p>
<p>Fixed hotstring option <a href="Hotstrings.htm#b0">b0</a> to show the ending character where you typed it rather than at the end of the replacement.</p>
<p>Improved the speed and reliability of <a href="Hotstrings.htm#auto">auto-replace hotstrings</a> by defaulting them to <a href="lib/Send.htm#SendInputDetail">SendInput mode</a>. There is also a <a href="Hotstrings.htm#SendMode">new hotstring option</a> to change the sending mode.</p>
<p>Improved the reliability of mouse clicks/drags in cases where the user is physically moving the mouse during the event.</p>
<p>Added commands <a href="lib/Click.htm">Click</a> and <a href="lib/Send.htm#Click">Send {Click}</a>, which are easier to use than MouseClick. They also compensate if the left/right mouse buttons have been swapped via the control panel.</p>
<p>Added command <a href="lib/SendMode.htm">SendMode</a>, which makes <a href="lib/Send.htm">Send</a> synonymous with <a href="lib/Send.htm#SendInputDetail">SendInput</a> or <a href="lib/Send.htm#SendPlayDetail">SendPlay</a> rather than the default (<a href="lib/Send.htm#SendEvent">SendEvent</a>). It also makes <a href="lib/Click.htm">Click</a> and MouseMove/Click/Drag use the specified method.</p>
<p>Added two new methods for sending keystrokes and mouse clicks: <a href="lib/Send.htm#SendInputDetail">SendInput</a> and <a href="lib/Send.htm#SendPlayDetail">SendPlay</a>. These are generally faster and more reliable. Also, <a href="lib/Send.htm#SendPlayDetail">SendPlay</a> allows keystrokes and <a href="Hotstrings.htm">hotstrings</a> to be accepted by a broader variety of games.</p>

<h2 id="v1.0.42.07">1.0.42.07 - March 9, 2006</h2>
<p>Fixed crash of functions that <a href="Functions.htm#recurse">recursively</a> pass ByRef parameters. [thanks PhiLho]</p>

<h2 id="v1.0.42.06">1.0.42.06 - March 7, 2006</h2>
<p>Fixed crash of <a href="Variables.htm#ScriptDir">A_ScriptDir</a> (broken by v1.0.42.01).</p>
<p>Fixed <a href="lib/Run.htm">Run/RunWait</a>'s passing of an extra space character at the end of the parameter list when launching shortcuts. [thanks arbe]</p>

<h2 id="v1.0.42.05">1.0.42.05 - March 6, 2006</h2>
<p>This is functionally identical to the previous release, whose EXE and BIN were about 1% larger than they should have been due to a compiler quirk.</p>

<h2 id="v1.0.42.04">1.0.42.04 - March 6, 2006</h2>
<p>Fixed <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> when used with apps such as Word and Excel (broken by previous version). [thanks Roussi Nikolov]</p>
<p>Fixed <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> to prevent appearance of bookmarks in MS Word. [thanks Laszlo &amp; 02clams]</p>
<p>Fixed <a href="Variables.htm#TimeIdlePhysical">A_TimeIdlePhysical</a> being disrupted by simulated AltGr keystrokes. [thanks skrommel]</p>
<p>Fixed <a href="lib/Send.htm#blind">Send {Blind}</a> causing sticking Win/Ctrl/Alt/Shift when the user released such a key in the middle of a Send.</p>
<p>Improved the <a href="lib/Send.htm">Send command</a> not to press and release the shift key after each uppercase letter (e.g. <code>Send ABC</code>).</p>
<p>Improved <a href="lib/SoundSet.htm">SoundSet</a>/<a href="lib/SoundGet.htm">Get</a> to support ComponentType "Headphones". [thanks Tobias Winkler]</p>

<h2 id="v1.0.42.03">1.0.42.03 - February 20, 2006</h2>
<p>Fixed crash of <a href="lib/WinActivate.htm">WinActivate</a> in certain rare circumstances. [thanks twhyman]</p>
<p>Changed <a href="Hotstrings.htm#NoMouse">hotstrings</a> to require the <a href="lib/_InstallMouseHook.htm">mouse hook</a> by default (see next item). This can be prevented via <a href="lib/_Hotstring.htm">#Hotstring NoMouse</a>.</p>
<p>Improved <a href="Hotstrings.htm#NoMouse">hotstrings</a> to take into account mouse clicks. This allows a hotstring to fire when the user's click focuses a new control or moves the caret.</p>
<p>Improved the <a href="lib/Random.htm">Random</a> command with a means to set a new seed. [thanks Laszlo]</p>
<p>Improved <a href="lib/_ClipboardTimeout.htm">#ClipboardTimeout</a> to reattempt data reading when the first attempt fails. Previously, only the opening of the clipboard was reattempted.</p>
<p>Added built-in variable <a href="Variables.htm#LastError">A_LastError</a> for <a href="lib/DllCall.htm#LastError">DllCall</a> and <a href="lib/Run.htm#LastError">Run/RunWait</a>. It contains the result from the OS's GetLastError().</p>

<h2 id="v1.0.42.02">1.0.42.02 - February 17, 2006</h2>
<p>Fixed <a href="lib/GuiControls.htm#UpDown">UpDown controls</a> to snap onto the right control when inside a <a href="lib/GuiControls.htm#Tab">Tab control</a> that contains a <a href="lib/ListView.htm">ListView</a>. [thanks Thalon]</p>
<p>Improved the <a href="lib/Hotkey.htm">Hotkey command</a> with an "Off" option (typically used to create a hotkey in an initially-disabled state).</p>
<p>Improved <a href="Variables.htm#Cursor">A_Cursor</a> not to interfere with double-clicking. [thanks Shimanov]</p>

<h2 id="v1.0.42.01">1.0.42.01 - February 15, 2006</h2>
<p>Fixed the following variables to work correctly when concatenated onto other strings: <a href="Variables.htm#DetectHiddenWindows">A_DetectHiddenWindows</a>, <a href="Variables.htm#DetectHiddenText">A_DetectHiddenText</a>, <a href="Variables.htm#AutoTrim">A_AutoTrim</a>, and <a href="Variables.htm#StringCaseSense">A_StringCaseSense</a>. [thanks jballi]</p>
<p>Fixed <a href="lib/KeyWait.htm">KeyWait</a> and <a href="lib/GetKeyState.htm">GetKeyState</a> in the subroutines of <a href="Hotkeys.htm#prefixdollar">hook hotkeys</a> (broken by v1.0.39) [thanks Laszlo &amp; TobStro]. For example:</p>
<pre>~LControl::
if not GetKeyState("LControl")
    ToolTip LControl is not down as expected (this bug affected some systems but not others).
return</pre>

<h2 id="v1.0.42.00">1.0.42 - February 10, 2006</h2>
<p>Fixed <a href="Variables.htm#Expressions">expressions</a> such as "If not Installed" not to be misinterpreted as "If not in List". [thanks Toralf]</p>
<p>Fixed certain unusual situations where a hotkey would unnecessarily require the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a>.</p>
<p>Fixed <a href="KeyList.htm#vk">vkNNN hotkeys</a> to be handled by the hook when that VK is also used as a <a href="Hotkeys.htm#prefix">prefix</a> for other hotkeys.</p>
<p>Fixed <a href="lib/_IfWinActive.htm">#IfWin</a>'s automatic disabling of prefix keys to work properly when <a href="lib/Suspend.htm">Suspend</a> is ON.</p>
<p>Fixed minor hotkey issues on Windows 95/98/Me: 1) The <a href="Hotkeys.htm#wildcard">wildcard prefix (*)</a> is ignored and such hotkeys are put into effect rather than being disabled; 2) Non-wildcard hotkeys that are a subset of a wildcard hotkey are put into effect rather than being disabled; 3) A <a href="Hotkeys.htm#LeftRight">left/right hotkey</a> such as <code>&gt;#x::</code> is put into effect as <kbd>Win</kbd>+<kbd>X</kbd> rather than simply <kbd>X</kbd>.</p>
<p>Changed the <a href="lib/Hotkey.htm">Hotkey command</a> to create a new <a href="lib/Hotkey.htm#variant">variant</a> (when appropriate) rather than always updating any existing hotkey of that name. This only affects scripts that use v1.0.41's <a href="lib/_IfWinActive.htm">#IfWin</a> directive.</p>
<p>Changed <a href="Hotkeys.htm">hotkeys</a> to recognize <code>^!c::</code> as being the same as <code>!^c::</code> (different symbol order). This also affects the <a href="lib/Hotkey.htm">Hotkey command</a>.</p>
<p>Improved the Hotkey command to support <a href="lib/Hotkey.htm#UseErrorLevel">UseErrorLevel</a> and context-sensitive hotkeys (via <a href="lib/Hotkey.htm#IfWin">Hotkey IfWinActive/Exist</a>).</p>
<p>Improved <a href="lib/_IfWinActive.htm">#IfWinActive/Exist</a> to support Windows 9x. In addition, the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a> is now avoided whenever possible. Finally, #IfWin now sets the <a href="misc/WinTitle.htm#LastFoundWindow">Last Found Window</a>.</p>
<p>Improved the following commands to support TListBox/TComboBox and possibly others: <a href="lib/Control.htm">Control</a> (Add/Delete/Choose/ChooseString); and <a href="lib/ControlGet.htm">ControlGet</a> (FindString/Choice/List).</p>
<p>Added support for hotkey and hotstring <a href="lib/_IfWinActive.htm#variant">variants</a> (duplicates). Such hotkeys perform a different action (or none at all) depending on the type of window that is active or exists.</p>

<h2 id="v1.0.41.02">1.0.41.02 - February 1, 2006</h2>
<p>Changed <a href="lib/GuiControl.htm#Move">GuiControl Move</a> to reduce flickering when resizing or moving controls [thanks Serenity]. However, this may cause painting artifacts for some control types under certain circumstances. <strong>If so, please update your scripts to use <a href="lib/GuiControl.htm#MoveDraw">GuiControl MoveDraw</a> instead.</strong></p>

<h2 id="v1.0.41.01">1.0.41.01 - January 31, 2006</h2>
<p>Fixed <a href="Hotkeys.htm#AltGr">AltGr hotkeys</a> that send AltGr characters such as <code>&lt;^&gt;!a::Send \</code> in German. [thanks AGU]</p>
<p>Fixed <a href="lib/Gui.htm#Options">Gui +Disable/AlwaysOnTop</a> to work even if other options are present on the same line. [thanks evl]</p>
<p>Improved syntax to support having a command on the same line as an <a href="lib/Block.htm#otb">open-brace</a>. [thanks segfault]</p>

<h2 id="v1.0.41.00">1.0.41 - January 19, 2006</h2>
<p>Fixed <a href="lib/Transform.htm">Transform HTML</a>, which was broken by v1.0.40.02. [thanks Rabiator]</p>
<p>Improved syntax to support <a href="lib/Block.htm#otb">One True Brace (OTB)</a> style with IFs, ELSEs, functions, and normal loops.</p>
<p>Added built-in variable <a href="Variables.htm#AhkPath">A_AhkPath</a>, which contains the full path and name of AutoHotkey.exe (if available).</p>
<p>Added directives <a href="lib/_IfWinActive.htm">#IfWinActive/Exist</a> to make selected hotkeys and hotstrings active only in the windows you specify.</p>

<h2 id="v1.0.40.12">1.0.40.12 - January 11, 2006</h2>
<p>Fixed memory leak when <a href="lib/GuiControl.htm">GuiControl</a> loaded some types of images into a <a href="lib/GuiControls.htm#Picture">Picture control</a>. [thanks beardboy]</p>
<p>Fixed inability of <a href="lib/ToolTip.htm">ToolTip</a> to reappear after it was destroyed externally via <kbd>Alt</kbd>+<kbd>F4</kbd>, <a href="lib/WinClose.htm">WinClose</a>, etc</p>

<h2 id="v1.0.40.11">1.0.40.11 - December 12, 2005</h2>
<p>Fixed <code><a href="lib/GuiControl.htm">GuiControl</a>, %Var%</code> when Var is blank or contains only a window number. It now updates the control's contents rather than doing nothing. [thanks MisterW]</p>
<p>Scripts in UTF-8 format can now be loaded (BOM bytes "EF BB BF" at start of file). [thanks D. J. Rausch]</p>

<h2 id="v1.0.40.10">1.0.40.10 - December 1, 2005</h2>
<p>Improved <a href="lib/ImageSearch.htm">ImageSearch</a> and the <a href="lib/PixelSearch.htm#fast">fast-mode PixelSearch</a> to support 256-color screens (8-bit).</p>

<h2 id="v1.0.40.09">1.0.40.09 - November 21, 2005</h2>
<p>Fixed <a href="Hotkeys.htm">hotkeys</a> such as <code>^q::</code> to trigger the "*q up" hotkey upon release instead of the ^q hotkey a second time.</p>

<h2 id="v1.0.40.08">1.0.40.08 - November 16, 2005</h2>
<p>Fixed <a href="lib/GuiControls.htm#ComboBox">ComboBoxes</a> to yield the proper selection when: 1) <a href="lib/GuiControl.htm">GuiControl</a> altered the Edit field; or 2) the user manually typed a matching item into an AltSubmit ComboBox. [thanks Tekl]</p>

<h2 id="v1.0.40.07">1.0.40.07 - November 16, 2005</h2>
<p>Fixed memory leak when a script called a <a href="Functions.htm">function</a> recursively. [thanks Laszlo]</p>

<h2 id="v1.0.40.06">1.0.40.06 - November 10, 2005</h2>
<p>Fixed crash of <a href="Functions.htm#Abs">Abs()</a> when called with an empty string. [thanks Laszlo]</p>
<p>Fixed the number -0x8000000000000000 in <a href="Variables.htm#Expressions">expressions</a>. [thanks Laszlo]</p>

<h2 id="v1.0.40.05">1.0.40.05 - November 4, 2005</h2>
<p>Fixed <a href="Functions.htm#Ceil">Ceil()</a>, <a href="Functions.htm#Floor">Floor()</a>, and <a href="lib/Transform.htm">Transform Ceil/Floor</a> to give the correct answers for all inputs. [thanks Litmus Red]</p>
<p>Fixed <a href="misc/Remap.htm">remapping</a> so that <kbd>Enter</kbd> can be a destination key. [thanks jocamero]</p>
<p>Changed <a href="misc/WinTitle.htm#ahk_id">ahk_id</a> to work on hidden child windows (controls) without the need for <a href="lib/DetectHiddenWindows.htm">DetectHiddenWindows</a>.</p>
<p>Improved <a href="lib/PostMessage.htm">Post/SendMessage</a> to accept quoted/literal strings for wParam/lParam.</p>

<h2 id="v1.0.40.04">1.0.40.04 - November 2, 2005</h2>
<p>Fixed <a href="lib/WinGetText.htm">WinGetText</a> and <a href="lib/ControlGetText.htm">ControlGetText</a> to work on apps that respond incorrectly to WM_GETTEXT (such as AIM). [thanks Yarbuck]</p>
<p>Changed the program to align all data on 32-bit boundaries, which solves <a href="lib/DllCall.htm#struct">DllCall structure</a> issues. [thanks Shimanov]</p>

<h2 id="v1.0.40.03">1.0.40.03 - October 26, 2005</h2>
<p>Because some other solution is necessary, the 1-pixel increase for <a href="lib/GuiControls.htm#CheckBox">Checkboxes</a> and <a href="lib/GuiControls.htm#Radio">Radio Buttons</a> in v1.0.40.01 has been undone.</p>

<h2 id="v1.0.40.02">1.0.40.02 - October 24, 2005</h2>
<p>Fixed <a href="lib/Transform.htm#Unicode">Transform Unicode</a> to be able to produce a Unicode string whose first byte is zero. [thanks Shimanov &amp; Laudrin]</p>
<p>Reduced the size of <a href="Scripts.htm#ahk2exe">compiled scripts</a> by 20 KB by having the compiler minimize code size in sections that don't affect script performance.</p>

<h2 id="v1.0.40.01">1.0.40.01 - October 21, 2005</h2>
<p>Fixed the title bars of script-owned windows to respond correctly to left and right down-clicks generated by the script's own <a href="Hotkeys.htm">hotkeys</a>. [thanks Shimanov]</p>
<p>Fixed inability of <a href="lib/OnMessage.htm">OnMessage</a> to consistently monitor certain messages such as WM_GETMINMAXINFO.</p>
<p>Changed <a href="lib/Critical.htm">Critical</a> to be temporarily off during MsgBox and other dialogs.</p>
<p>Added sub-command <a href="lib/Thread.htm">Thread NoTimers</a>, which prevents a thread from being interrupted by timers.</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Fixed <a href="lib/Gui.htm#GuiContextMenu">GuiContextMenu</a>'s A_GuiControl to be accurate for Text and Picture controls inside a GroupBox or Tab control.</p>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl</a> to properly redraw Picture controls and transparent Text controls when they are given new contents.</p>
<p>Increased the width of auto-sized <a href="lib/GuiControls.htm#CheckBox">Checkboxes</a> and <a href="lib/GuiControls.htm#Radio">Radio Buttons</a> by 1 pixel to prevent wrapping on certain desktop themes.</p>

<h2 id="v1.0.40.00">1.0.40 - October 11, 2005</h2>
<p>Fixed the v1.0.39 <a href="lib/_InstallMouseHook.htm">mouse</a> and <a href="lib/_InstallKeybdHook.htm">keyboard</a> hooks so that failure to activate them behaves correctly.</p>
<p>Changed the <a href="lib/Send.htm">Send command</a> for Russian and other keyboard layouts to be able to produce more ASCII characters (such as the letters A to Z). This does not affect most Western European and English layouts.</p>
<p>Changed <a href="Hotkeys.htm">hotkeys</a> that are a subset of a wildcard hotkey to take precedence. For example, if *x and ^x are both hotkeys, pressing ^x will now trigger ^x rather than *x.</p>
<p>Improved syntax so that double colons do not need to be <a href="misc/EscapeChar.htm">escaped</a>.</p>
<p>Improved Send and ControlSend with option <a href="lib/Send.htm#blind">{Blind}</a>, which leaves Ctrl/Alt/Shift/Win pressed down if they started that way.</p>
<p>Added a <a href="misc/Remap.htm">new remapping method</a> that is more simple and powerful than the old methods. For example:</p>
<pre>a::b  <em>; Make the "a" key become "b".</em>
CapsLock::Ctrl  <em>; Make CapsLock become a Control key.</em>
XButton1::LButton  <em>; Make the fourth mouse button behave like the left mouse button.</em>
RCtrl::RWin  <em>; Make the right Control key become the right Windows key.</em></pre>

<h2 id="v1.0.39.00">1.0.39 - October 3, 2005</h2>
<p class="note"><strong>Note:</strong> The last change below may impact scripts that use the <a href="lib/_InstallKeybdHook.htm">keyboard</a> or <a href="lib/_InstallMouseHook.htm">mouse</a> hook. If you have any mission-critical scripts that rely on them, it is recommended that they be re-tested or that you wait two weeks for any bugs to get fixed.</p>
<p>Fixed inability to have lines consisting entirely of spaces and tabs in <a href="Scripts.htm#continuation">continuation sections</a>. [thanks JSLover]</p>
<p>Fixed hotkeys such as <code>LButton &amp; LCtrl::</code> to auto-install the <a href="lib/_InstallMouseHook.htm">mouse hook</a>. [thanks JSLover]</p>
<p>Added a dedicated thread to service the <a href="lib/_InstallKeybdHook.htm">keyboard</a> and <a href="lib/_InstallMouseHook.htm">mouse</a> hooks. This eliminates mouse/keyboard lag during long operations such as <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a>. It also prevents keys from getting "stuck down". The new thread consumes only 36 KB of memory and it exists only in scripts that use the hooks.</p>

<h2 id="v1.0.38.06">1.0.38.06 - September 27, 2005</h2>
<p class="note"><strong>Note:</strong> Some optimizations were made to the <a href="lib/_InstallKeybdHook.htm">keyboard</a> and <a href="lib/_InstallMouseHook.htm">mouse</a> hooks. If you have any mission-critical scripts that rely on them, it is recommended that they be re-tested or that you wait two weeks for any bugs to get fixed.</p>
<p>Fixed <a href="Scripts.htm#continuation">continuation lines</a> that start with "AND" and "OR" to work even when the next character is in the set <code>()!~*&amp;-+</code>. [thanks Decarlo110]</p>
<p>Fixed hotkeys/labels such as <code>(::</code> and <code>(MyLabel):</code> not to be misinterpreted as <a href="Scripts.htm#continuation">continuation sections</a>. [thanks whismerhill]</p>

<h2 id="v1.0.38.05">1.0.38.05 - September 23, 2005</h2>
<p>Fixed <a href="lib/Menu.htm#Show">Menu Show</a> (broken in the previous version) to call the selected menu item's subroutine prior to executing the command beneath Menu Show. [thanks Roussi]</p>
<p>Changed <a href="lib/Sleep.htm">Sleep -1</a> and Sleep 0 to check the message queue on Windows 9x as they do on other operating systems.</p>

<h2 id="v1.0.38.04">1.0.38.04 - September 21, 2005</h2>
<p>Fixed <a href="Hotstrings.htm#z">hotstring reset option (Z)</a>, which could crash a script. [thanks arbe]</p>
<p>Improved <a href="misc/Threads.htm">threads</a> to reduce the chance of an interruption occurring before even a single line can execute. [thanks Paul Haines]</p>
<p>Added command <a href="lib/Critical.htm">Critical</a>, which prevents the <a href="misc/Threads.htm">current thread</a> from being interrupted by other threads. It also buffers incoming events until the critical thread ends.</p>

<h2 id="v1.0.38.03">1.0.38.03 - September 12, 2005</h2>
<p>Fixed <a href="Hotkeys.htm#keyup">key-up hotkeys</a> so that having both a wildcard and a non-wildcard version of the same hotkey works even when the non-wildcard down-hotkey is defined before the non-wildcard up-hotkey. [thanks Paul Haines]</p>
<p>Improved <a href="lib/GuiControls.htm#Edit">Edit controls</a> with the option "WantTab", which allows the tab keystroke to produce a tab character.</p>

<h2 id="v1.0.38.02">1.0.38.02 - September 8, 2005</h2>
<p>Fixed inability of <a href="lib/WinSet.htm#Region">WinSet Region</a> to accept a negative X-coordinate.</p>
<p>Fixed <a href="lib/GuiControls.htm#Radio">radio buttons</a> to start a new radio group for each new <a href="lib/GuiControls.htm#Tab">Tab control</a> or page. [thanks Toralf]</p>
<p>Changed <a href="KeyList.htm#vk">VK hotkeys</a> such as <code>^VK24::</code> to avoid the use of the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a> when possible. As a side-effect, such hotkeys are now triggered by any key that has the specified virtual key (e.g. both Home and NumpadHome for VK24). [thanks Orion]</p>
<p>Improved the <a href="lib/Hotkey.htm">Hotkey command</a> with option "On" to change a hotkey's label and enable it in one step. [thanks Toralf]</p>
<p>Improved "<a href="lib/GuiControl.htm">GuiControl</a> Disable/Enable/Hide/Show" to recognize an optional 1 or 0 suffix to simplify scripts. [thanks Toralf]</p>

<h2 id="v1.0.38.01">1.0.38.01 - September 5, 2005</h2>
<p>Fixed <a href="lib/Gui.htm#GuiContextMenu">GuiContextMenu</a>'s A_GuiControl to be non-blank when the user right-clicks a Text, Picture, or Tab control.</p>
<p>Changed <a href="lib/OnMessage.htm">OnMessage()</a> to receive LPARAM as an unsigned vs. signed number.</p>

<h2 id="v1.0.38.00">1.0.38 - September 3, 2005</h2>
<p>Fixed the <a href="lib/Input.htm">Input command</a> to properly capture keystrokes sent by a hotkey or hotstring for which the user is physically holding down <kbd>Shift</kbd>, <kbd>Ctrl</kbd>, <kbd>Alt</kbd>, or <kbd>Win</kbd>. [thanks wildfire]</p>
<p>Changed <a href="lib/GuiControl.htm#Text">GuiControl Text</a> to set the text of a <a href="lib/GuiControls.htm#ComboBox">ComboBox</a>'s Edit control rather than new choices for its drop-list. Please update your scripts accordingly.</p>
<p>Improved <a href="lib/FileMoveDir.htm">FileMoveDir</a> with an option to unconditionally overwrite the target folder.</p>
<p>Added built-in function <a href="Functions.htm#IsLabel">IsLabel()</a>, which verifies that a label exists before you gosub it. [thanks Tekl]</p>
<p>Added built-in function <a href="lib/OnMessage.htm">OnMessage()</a>, which can receive custom messages and monitor system messages.</p>
<p>Added a <a href="scripts/WinLIRC.htm">WinLIRC client script</a> that responds to signals from a hand-held remote control. <a href="https://sourceforge.net/projects/winlirc/">WinLIRC</a> is an open-source utility that captures infrared signals from virtually any brand of remote control.</p>

<h2 id="v1.0.37.07">1.0.37.07 - August 27, 2005</h2>
<p>Fixed disruption of a <a href="lib/Gui.htm">GUI window's</a> custom icon when <code><a href="lib/Menu.htm">Menu</a>, Tray, Icon</code> loads a new icon. [thanks Tekl]</p>
<p>Fixed <a href="Hotstrings.htm">hotstring</a> option "O" (omit end-char) to work even when "B0" (no-backspace) is in effect. [thanks Tekl]</p>
<p>Improved <a href="Hotkeys.htm#alttab">AltTab hotkeys</a> to support <kbd>Esc</kbd> as a means of canceling the operation. [thanks catweazle]</p>

<h2 id="v1.0.37.06">1.0.37.06 - August 21, 2005</h2>
<p>Fixed auto-replace wildcard <a href="Hotstrings.htm">hotstrings</a> whose last character is produced via dead key (e.g. <code>:*:jsá::</code>). [thanks jordi]</p>
<p>Fixed the tray icon to turn green when a paused <a href="misc/Threads.htm">thread</a> is interrupted by a new thread.</p>
<p>Changed and improved the <a href="lib/Pause.htm">Pause command</a>: 1) <code>Pause Off</code> always affects the thread immediately beneath the current thread rather than the nearest paused thread; 2) <code>Pause Toggle</code> and <code>Pause</code> always pauses the current thread if the thread beneath it is unpaused; 3) Added an option to pause the underlying thread rather than the current thread. [thanks Decarlo110]</p>
<p>Improved the "Pause Script" menu item to work even when the script is idle (which prevents <a href="lib/SetTimer.htm">timers</a> from running). [thanks Rajat]</p>
<p>Improved <a href="lib/SoundSet.htm">SoundSet</a> and <a href="lib/SoundGet.htm">SoundGet</a> to support N/A for <em>ComponentType</em> and numeric values for <em>ControlType</em>. There is also an <a href="lib/SoundSet.htm#Ex">example script</a> to discover your soundcard's capabilities.</p>

<h2 id="v1.0.37.05">1.0.37.05 - August 16, 2005</h2>
<p>Fixed hotkeys such as <code>^!a::</code> not to fire twice when <code>a &amp; b::</code> is a hotkey. Also fixed hotkeys such as <code>^!a::</code> to work without a <code class="no-highlight">$</code> when "a" is a prefix key such as <code>a &amp; b::</code>. [thanks t0nyk0]</p>
<p>Fixed hotkeys <code>LButton::</code> and <code>RButton::</code> not to disrupt Edit control context menus. [thanks Tekl]</p>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl ChooseString</a> not to ignore the first two items in each ListBox/ComboBox/DDL. [thanks Tekl]</p>

<h2 id="v1.0.37.04">1.0.37.04 - July 30, 2005</h2>
<p>Fixed serious bugs introduced by the previous version in the <a href="lib/Send.htm">Send command</a> and other keyboard features.</p>

<h2 id="v1.0.37.03">1.0.37.03 - July 30, 2005</h2>
<p>Fixed minor issues when a script's language/layout changes while it's running. This affects <a href="Hotkeys.htm">hotkeys</a>, <a href="Hotstrings.htm">hotstrings</a>, <a href="lib/Send.htm">Send</a>, and possibly other areas.</p>
<p>Fixed the <a href="lib/GuiControls.htm#Hotkey">Hotkey control</a> for NumLock and NumpadDiv (previously it yielded SC145 and SC135).</p>
<p>Improved <a href="lib/GuiControls.htm#Tab">Gui Tab</a> with an exact-match mode. [thanks Tekl]</p>
<p>Improved <a href="Hotkeys.htm">hotkeys</a> to recognize the following symbols as valid key names: <code class="no-highlight">#!^+$&lt;&gt;*~</code> [thanks Tekl]</p>

<h2 id="v1.0.37.02">1.0.37.02 - July 25, 2005</h2>
<p>Fixed <a href="Hotkeys.htm#keyup">key-up hotkeys</a> such as <code>LButton Up::</code> to avoid disruption of non-hotkey events such as <kbd>Shift</kbd>+LeftClick. [thanks Icfu]</p>

<h2 id="v1.0.37.01">1.0.37.01 - July 22, 2005</h2>
<p>Fixed <a href="lib/ControlGet.htm#List">ControlGet List</a> for ListViews in List/Icon view. [thanks Rajat]</p>

<h2 id="v1.0.37.00">1.0.37 - July 21, 2005</h2>
<p>Fixed inability of <a href="lib/WinGetText.htm">WinGetText</a> and <a href="lib/WinGet.htm#ControlList">WinGet ControlList</a> to output to <a href="misc/Clipboard.htm">Clipboard</a>.</p>
<p>Fixed inability to retrieve <a href="misc/Clipboard.htm">Clipboard</a> more than once in the same line.</p>
<p>Fixed <a href="lib/ListView.htm#LV_ModifyCol">LV_ModifyCol()</a> to accept floating point column widths. [thanks Toralf]</p>
<p>Improved <a href="lib/StatusBarWait.htm">StatusBarWait</a> to continue waiting even if the bar becomes temporarily unresponsive.</p>
<p>Improved <a href="lib/ControlGet.htm#List">ControlGet List</a> with the ability to get text and other info from ListViews such as Explorer.</p>

<h2 id="v1.0.36.07">1.0.36.07 - July 18, 2005</h2>
<p>Fixed <a href="Hotkeys.htm#keyup">tilde key-up hotkeys</a> for <kbd>Win</kbd>/<kbd>Alt</kbd> such as <code>~LWin up::</code>.</p>
<p>Fixed bitwise-not of a floating point value such as <code>~1.0</code>.</p>
<p>Improved <a href="lib/VarSetCapacity.htm">VarSetCapacity</a> with the ability to zero-fill a variable's memory.</p>
<p>Improved <a href="lib/DllCall.htm">DllCall</a> by adding Gdi32.dll to the set of default DLLs.</p>
<p>Added <a href="Variables.htm#amp">operators &amp; and *</a> for use with memory addresses and binary data.</p>
<p>Added documentation to DllCall demonstrating how to use <a href="lib/DllCall.htm#struct">structures</a>.</p>

<h2 id="v1.0.36.06">1.0.36.06 - July 12, 2005</h2>
<p>Fixed AltGr issues: 1) Inability of <a href="lib/Send.htm">Send command</a> to produce uppercase AltGr characters (introduced in v1.0.35); 2) Sticking control key for hotkeys such as <code>^!t::Send a</code> when fired via AltGr; 3) Possibly other AltGr issues. [thanks Henrique Peron]</p>
<p>Fixed <a href="lib/ListView.htm">ListView</a> drawing problems when inside a <a href="lib/GuiControls.htm#Tab">Tab control</a>. [thanks beardboy]</p>

<h2 id="v1.0.36.05">1.0.36.05 - July 9, 2005</h2>
<p>Fixed <a href="lib/ToolTip.htm">ToolTip</a>, which was broken in v1.0.36.03 for operating systems older than XP.</p>

<h2 id="v1.0.36.04">1.0.36.04 - July 7, 2005</h2>
<p>For <a href="lib/ListView.htm">ListViews</a>: 1) Fixed the inability to switch out of tile mode; 2) The "H" (HotTrack) event is no longer received because its high frequency interfered with a script's processing of more important <a href="lib/ListView.htm#notify">events</a>. [thanks Toralf]</p>

<h2 id="v1.0.36.03">1.0.36.03 - July 6, 2005</h2>
<p>Improved <a href="lib/FileSelectFolder.htm">FileSelectFolder</a> to support a starting folder that doesn't restrict upward navigation.</p>
<p>Improved <a href="lib/SetTimer.htm">SetTimer</a> to support an interval of up to 49.7 days rather than the previous 24.8. [thanks MIchael]</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Fixed <a href="lib/ListView.htm#AltSubmit">AltSubmit ListView's</a> disruption of <a href="lib/Gui.htm#GuiContextMenu">context menu</a>.</p>
<p>Fixed <a href="lib/ListView.htm#LV_ModifyCol">LV_ModifyCol()</a>'s auto-sizing to have no effect when not in report view (avoids traumatizing the ListView). [thanks Toralf]</p>
<p>Improved <a href="lib/ListView.htm">ListViews</a>: 1) A_EventInfo contains the focused row for more types of <a href="lib/ListView.htm#notify">events</a>; 2) <code><a href="lib/ListView.htm#LV_GetCount">LV_GetCount</a>("Col")</code> retrieves the number of columns; 3) Added "Tile" as a large-icon viewing mode (XP only). [thanks Toralf]</p>

<h2 id="v1.0.36.02">1.0.36.02 - July 3, 2005</h2>
<p>Fixed <a href="Hotstrings.htm">hotstrings</a> to work when the script is displaying an input box.</p>
<p>Fixed <a href="Hotkeys.htm#keyup">tilde key-up hotkeys</a> such as <code>~5 up::</code> to avoid double-character output.</p>
<p>Disallowed linefeeds (`n) and other invisible characters in variable names.</p>
<p>Increased the stack limit from 1 to 4 MB, which allows functions and subroutines to recurse more deeply. Note: This does not increase the memory used by a typical script. [thanks Rubens]</p>
<p>Doubled the speed of accessing empty variables (which are slow due to the need to check if they're <a href="Concepts.htm#environment-variables">environment variables</a>).</p>
<p>Improved all windowing commands to support <a href="misc/WinTitle.htm#multi">multiple criteria</a> (such as title+class) to narrow down the search.</p>
<p>Added built-in variable <a href="lib/LoopFile.htm#LoopFileExt">A_LoopFileExt</a>, which contains the loop file's extension.</p>

<h2 id="v1.0.36.01">1.0.36.01 - June 28, 2005</h2>
<p>Fixed <a href="lib/FileCopy.htm">FileCopy</a> and <a href="lib/FileMove.htm">FileMove</a> to avoid deleting a file that is copied/moved onto itself. In such a case, FileCopy still counts it as a failure but FileMove now counts it as a success. [thanks mario_a]</p>
<p>Fixed <a href="Scripts.htm#continuation">continuation sections</a> so that accents and commas after the word Join don't change the behavior of accents and commas in the section. [thanks Nemroth]</p>
<p>Added <a href="lib/WinSet.htm#Top">WinSet Top</a>, which attempts to bring a window to the top of the stack without activating it. [thanks catweazle]</p>

<h2 id="v1.0.36.00">1.0.36 - June 27, 2005</h2>
<p>Fixed double syntax error for a bad <a href="Functions.htm">function call</a> in a <a href="lib/Block.htm">block</a>.</p>
<p>Improved <a href="lib/Process.htm#Exist">Process Exist</a> to fetch the script's own PID when no other parameters are given. [thanks Junyx]</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Added <a href="lib/Gui.htm#GuiContextMenu">GuiContextMenu</a>, which facilitates the display of custom Gui context menus.</p>
<p>Added <a href="lib/Gui.htm#Delimiter">Gui +Delimiter`n</a> as a means to change the separator between fields.</p>
<p>Added <a href="Variables.htm#EventInfo">A_EventInfo</a> for use by <a href="misc/Clipboard.htm#OnClipboardChange">OnClipboardChange</a>, <a href="lib/GuiControls.htm#ListBox">ListBox</a>, <a href="lib/Gui.htm#GuiSize">GuiSize</a>, and <a href="lib/Gui.htm#GuiDropFiles">GuiDropFiles</a>.</p>
<p>Added <a href="Variables.htm#GuiEvent">A_GuiEvent</a> as a synonym for A_GuiControlEvent.</p>
<p>Added <a href="lib/GuiControls.htm#LBRedraw">+/-Redraw</a> as a means to accelerate the filling of a ListBox.</p>
<p>Added new control type <a href="lib/ListView.htm">ListView</a>, which is a tabular view of rows and columns. It features built-in sorting and support for displaying icons.</p>

<h2 id="v1.0.35.16">1.0.35.16 - June 20, 2005</h2>
<p>Fixed inability of <a href="lib/_Include.htm">#Include</a> to recognize escaped semicolons in <a href="Scripts.htm#ahk2exe">compiled scripts</a>.</p>
<p>Improved <a href="lib/Menu.htm">popup menus</a> to reactivate the previously active window before allowing the menu thread to start. [thanks thomasl]</p>

<h2 id="v1.0.35.15">1.0.35.15 - June 20, 2005</h2>
<p>Improved <a href="lib/Menu.htm">popup menus</a> to reactivate the previously active window when the menu is dismissed. [thanks thomasl]</p>

<h2 id="v1.0.35.14">1.0.35.14 - June 20, 2005</h2>
<p>Fixed inability of <a href="lib/Menu.htm">popup menus</a> to be dismissed via <kbd>Esc</kbd> or clicking outside the menu (new bug in v1.0.35.12). [thanks Paulo]</p>

<h2 id="v1.0.35.13">1.0.35.13 - June 19, 2005</h2>
<p>Fixed crash if a <a href="Scripts.htm#ahk2exe">compiled script</a> contained certain unusual hotkeys such as <code>End &amp; a::</code>. [thanks TheLeO]</p>

<h2 id="v1.0.35.12">1.0.35.12 - June 18, 2005</h2>
<p>Fixed script crash when it overrode a <a href="Functions.htm#BuiltIn">built-in function</a> (new bug in v1.0.35.11). [thanks B_fisher]</p>
<p>Fixed <a href="lib/IfExist.htm">IfExist</a> and <a href="Functions.htm#FileExist">FileExist()</a> to work on volume names in <code class="no-highlight">\\?\Volume{...}</code> format.</p>
<p>Changed <a href="lib/Menu.htm">popup menus</a> other than TRAY so that they avoid activating the script's main window.</p>

<h2 id="v1.0.35.11">1.0.35.11 - June 16, 2005</h2>
<p>Improved <a href="lib/_Include.htm">#Include</a> to be able to set a new working directory for subsequent uses of #Include and <a href="lib/FileInstall.htm">FileInstall</a>. In addition, #Include is now able to resolve <a href="Variables.htm#ScriptDir">%A_ScriptDir%</a>. [thanks Dmitry]</p>
<p>Improved <a href="lib/FileInstall.htm">FileInstall</a> to always get the file from <a href="Variables.htm#ScriptDir">A_ScriptDir</a> vs. <a href="Variables.htm#WorkingDir">A_WorkingDir</a> when no absolute path is specified.</p>

<h2 id="v1.0.35.10">1.0.35.10 - June 12, 2005</h2>
<p>Fixed <a href="Hotstrings.htm">Hotstrings</a> and <a href="lib/Input.htm">Input</a> so that the user's press of <kbd>Ctrl</kbd>+<kbd>Alt</kbd> as a substitute for <kbd>AltGr</kbd> is not disrupted. [thanks Laszlo]</p>
<p>Fixed <a href="Variables.htm#TimeSinceThisHotkey">A_TimeSinceThisHotkey</a> to not be altered by <a href="lib/Gui.htm#DefaultWin">GUI threads</a>.</p>
<p>Added <a href="misc/Clipboard.htm#OnClipboardChange">OnClipboardChange</a>, which is a label launched automatically whenever the clipboard changes. [thanks ApplePie]</p>

<h2 id="v1.0.35.09">1.0.35.09 - June 10, 2005</h2>
<p>Fixed <a href="lib/GuiControls.htm#MonthCal">MonthCal</a> and <a href="lib/GuiControls.htm#DateTime">DateTime</a> controls so that a g-label does not interfere with the calendar's arrow buttons. [thanks guivho]</p>
<p>Fixed the sending of AltGr characters so that AltGr's automatic LControl events don't trigger hotkeys. [thanks Laszlo]</p>
<p>Changed the behavior of AltSubmit <a href="lib/GuiControls.htm#MonthCal">MonthCal</a> controls to address deficiencies. Please adjust your scripts accordingly.</p>

<h2 id="v1.0.35.08">1.0.35.08 - June 9, 2005</h2>
<p>Fixed the inability of a script's first line to be <code>/*</code> (broken in 1.0.35.06). [thanks Harmless]</p>

<h2 id="v1.0.35.07">1.0.35.07 - June 8, 2005</h2>
<p>Fixed Control (^) hotkeys that send AltGr characters such as <code>{</code> in German. (broken in v1.0.35). [thanks Hajos]</p>

<h2 id="v1.0.35.06">1.0.35.06 - June 8, 2005</h2>
<p>Fixed <a href="lib/Send.htm">Send</a> on <strong>NT4</strong> so that AltGr keys such as <code class="no-highlight">\</code> in French are sent properly (broken in v1.0.35). [thanks Nemroth]</p>
<p>Fixed <code><a href="lib/SetNumScrollCapsLockState.htm">SetCapsLockState</a> Off</code> when the OS allows <kbd>CapsLock</kbd> to be turned off only via <kbd>Shift</kbd>. [thanks Teddy]</p>
<p>Improved <a href="Scripts.htm#continuation">line merging</a>: 1) A line starting with <code>.</code> is automatically appended to the line above it; 2) Comments and blank lines may exist between continuation lines without affecting the merger.</p>
<p>Added directive <a href="Scripts.htm#LTrim">#LTrim</a> as a means to make multiple continuation sections use the LTrim setting.</p>

<h2 id="v1.0.35.05">1.0.35.05 - June 6, 2005</h2>
<p>Fixed <a href="lib/Gui.htm#OwnDialogs">Gui +OwnDialogs</a> to not get turned off by Gui Show and other sub-commands.</p>
<p>Fixed <a href="Scripts.htm#ahk2exe">ahk2exe</a>'s ignoring of last parameter when /out, /icon, and /pass were all specified. [thanks Rajat]</p>

<h2 id="v1.0.35.04">1.0.35.04 - June 5, 2005</h2>
<p>Fixed <a href="Variables.htm#Expressions">expressions</a> so that operators without spaces around them, such as <code>x*y*z</code>, always produce correct answers. [thanks Mark Kantor]</p>

<h2 id="v1.0.35.03">1.0.35.03 - June 4, 2005</h2>
<p>Fixed the inability to create <a href="lib/GuiControls.htm#DateTime">DateTime</a> and <a href="lib/GuiControls.htm#MonthCal">MonthCal</a> controls on an OS older than XP.</p>
<p>Added a new method of <a href="Scripts.htm#continuation">breaking up long lines</a>: A line that starts with "and", "or", ||, &amp;&amp;, or a comma is automatically merged with the line directly above it.</p>

<h2 id="v1.0.35.02">1.0.35.02 - June 3, 2005</h2>
<p>Fixed Break/Continue syntax errors and other <a href="Scripts.htm#ahk2exe">compiled script</a> bugs introduced in v1.0.35.01. [thanks ranomore]</p>

<h2 id="v1.0.35.01">1.0.35.01 - June 3, 2005</h2>
<p>Fixed <code><a href="lib/GuiControl.htm">GuiControl</a>,, MyRadio|MyCheckbox, NewText</code>, which was broken in v1.0.35. [thanks ranomore]</p>
<p>Fixed shorthand style <code>if not VarName</code> so that VarName may start with B, C, I, or N.</p>
<p>Reduced the size of each <a href="Scripts.htm#ahk2exe">compiled script</a> by about 5 KB (by means of omitting non-essential syntax checking).</p>
<p>Improved <a href="lib/GuiControls.htm#Hotkey">GUI Hotkey control</a> to notify the script of changes via g-label.</p>
<p>Added <a href="lib/Gui.htm#OwnDialogs">modal/owned dialogs</a> for GUI windows: MsgBox, InputBox, FileSelectFile, and FileSelectFolder.</p>

<h2 id="v1.0.35.00">1.0.35 - June 1, 2005</h2>
<p class="note"><strong>Note:</strong> Some internal changes were made to the <a href="lib/Send.htm">Send command</a>. If any of your scripts rely on the subtle differences between the left, right, and neutral modifiers keys (Control, Alt, Shift, and Win), it is recommended that they be retested prior to adopting this version.</p>
<p>Fixed the <a href="lib/Send.htm">Send command</a>'s inability to send AltGr characters (such as <code class="no-highlight">\</code> and <code class="no-highlight">{</code> on the German keyboard) to apps that don't allow <kbd>Ctrl</kbd>+<kbd>Alt</kbd> as a substitute for <kbd>AltGr</kbd>. [thanks xrat]</p>
<p>Improved functions to support <a href="Functions.htm#optional">optional parameters</a>.</p>
<p><strong>GUI:</strong></p>
<p>Fixed <a href="lib/GuiControls.htm#Tab">Tab controls</a>' g-label to launch when the page is changed via keyboard navigation. Also, controls added to a Tab control while the window is visible are drawn correctly.</p>
<p>Improved <a href="lib/GuiControls.htm#Edit">Edit controls</a> to support g-labels, which notify the script when an Edit's contents have changed.</p>
<p>Added control types <a href="lib/GuiControls.htm#DateTime">DateTime</a> and <a href="lib/GuiControls.htm#MonthCal">MonthCal</a>, which allow a date and/or time to be entered in various formats.</p>
<p>Added control type <a href="lib/GuiControls.htm#UpDown">UpDown</a>, which is a pair of arrow buttons that can be clicked to increase or decrease a value.</p>

<h2 id="v1.0.34.00">1.0.34 - May 25, 2005</h2>
<p>Fixed the <a href="lib/Suspend.htm">Suspend</a> and <a href="lib/Hotkey.htm">Hotkey</a> commands' inability to disable joystick hotkeys, as well as the inability to enable them in the <a href="Scripts.htm#auto">auto-execute section</a>. [thanks matt911]</p>
<p>Fixed <a href="lib/Transform.htm#Deref">Transform Deref</a> to support a built-in or environment variable that isn't directly referenced elsewhere in the script. [thanks toralf]</p>
<p>Fixed inability to launch the program on Windows 95/NT systems that lack MSIE 3 or later.</p>
<p>Fixed <a href="lib/ListLines.htm">ListLines</a>, which sometimes terminated the listing prematurely.</p>
<p>Fixed multi-line <a href="lib/GuiControls.htm#Edit">Edit controls</a> so that pressing <kbd>Esc</kbd> in them does not close a <a href="lib/Gui.htm#GuiEscape">non-GuiEscape window</a>. [thanks Rajat]</p>
<p>Fixed the hotkeys <code>#LAlt::</code> and <code>#RAlt::</code> to prevent appearance of the Start Menu. [thanks Dmitry Lyudmirsky]</p>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl</a> so that reloading a <a href="lib/GuiControls.htm#Picture">Picture control</a> inside a <a href="lib/GuiControls.htm#Tab">Tab control</a> redraws properly. [thanks hanspeter]</p>
<p>Fixed <a href="lib/VarSetCapacity.htm">VarSetCapacity()</a> when called inside an <a href="Variables.htm#Expressions">expression</a>.</p>
<p>Improved <a href="lib/DllCall.htm">DllCall</a> so that the "A" suffix on something like MessageBoxA can be omitted even when the DLL name is explicitly specified. In addition, the letter P may be used in place of * so that the quotes can be omitted around all types. [thanks Jerry]</p>
<p>Added <a href="Variables.htm#divide">floor division operator <code>//</code></a> for high performance integer division.</p>
<p>Added <a href="Functions.htm#BuiltIn">built-in functions</a> Abs, ACos, Asc, ASin, ATan, Ceil, Chr, Cos, Exp, FileExist, Floor, GetKeyState, InStr, Ln, Log, Mod, Round, Sin, Sqrt, Tan, and StrLen.</p>

<h2 id="v1.0.33.01">1.0.33.01 - May 17, 2005</h2>
<p>Fixed sporadic inability of <a href="lib/GuiControl.htm">GuiControl</a> to change the default button or a button's style. Also fixed a possible crash when GuiControl established a default button when there wasn't one previously. [thanks hanspeter]</p>
<p>Improved <a href="lib/DllCall.htm">DllCall</a> so that arg types that don't contain an asterisk/space don't need to be enclosed in quotes.</p>
<p>Added sub-command <a href="lib/Gui.htm#Margin">Gui Margin</a> to override a window's default margin.</p>

<h2 id="v1.0.33.00">1.0.33 - May 13, 2005</h2>
<p>Fixed inability of <a href="lib/IfMsgBox.htm">IfMsgBox</a> to detect a timeout for a <a href="lib/MsgBox.htm">MsgBox</a> that contains only an OK button. [thanks Mats]</p>
<p>Added function <a href="lib/VarSetCapacity.htm">VarSetCapacity()</a>, which enlarges or shrinks a variable.</p>
<p>Added function <a href="lib/DllCall.htm">DllCall()</a>, which calls a function inside a DLL. [code by Marcus Sonntag (Ultra)]</p>

<h2 id="v1.0.32.00">1.0.32 - May 5, 2005</h2>
<p>Improved <a href="lib/_Include.htm">#Include</a>: The file name may be preceded by <code class="no-highlight">*i</code> and a single space to ignore any file errors. [thanks Tekl]</p>
<p>Added +/-Theme as a per-control option (<a href="lib/Gui.htm">GUI</a>). This can also be used to create a themed Tab control. [thanks Titan]</p>
<p>Added a method to break up long lines into several smaller ones. This is especially useful for <a href="Hotstrings.htm">hotstrings</a> and <a href="lib/FileAppend.htm">FileAppend</a>. See <a href="Scripts.htm#continuation">line continuation</a>. [thanks various]</p>

<h2 id="v1.0.31.07">1.0.31.07 - April 29, 2005</h2>
<p>Fixed the inability of <a href="lib/WinSet.htm#region">WinSet Region</a> to properly restore the original region, which prevented maximize from working. [thanks AntonyB &amp; Skrommel]</p>

<h2 id="v1.0.31.06">1.0.31.06 - April 27, 2005</h2>
<p><a href="lib/ImageSearch.htm">ImageSearch</a> is now much more useful: 1) Icons are supported (even ones containing transparent sections); 2) PNG, TIF, ICO, and other image formats are supported; 3) Approximate images may be found by allowing the image's colors to vary by a specified amount; 4) Matching is a little more lenient because the mystery-byte of each pixel color is ignored. [thanks Aurelian Maga]</p>

<h2 id="v1.0.31.05">1.0.31.05 - April 19, 2005</h2>
<p>Fixed <a href="Variables.htm#Index">A_Index</a>, <a href="lib/LoopFile.htm">A_LoopFileName</a>, and similar variables when used in more than one parameter of a command that calls functions. In addition, a function may now access the caller's contents of these variables. [thanks corrupt]</p>
<p>Fixed inaccurate line numbers of <a href="Functions.htm">function calls</a>. This affects <a href="Variables.htm#LineNumber">A_LineNumber</a>, <a href="lib/ListLines.htm">ListLines</a>, and error dialogs. [thanks Laszlo]</p>

<h2 id="v1.0.31.04">1.0.31.04 - April 15, 2005</h2>
<p>Fixed various ways in which normal lines were being falsely detected as <a href="Functions.htm">function calls</a>. [thanks Payam &amp; Jon]</p>

<h2 id="v1.0.31.03">1.0.31.03 - April 14, 2005</h2>
<p>Fixed <a href="lib/ImageSearch.htm">ImageSearch</a> so that partial matches at the edges of the search region are not considered complete matches. [thanks Invalid User]</p>
<p>Fixed the inability of labels to contain parentheses, a bug introduced in v1.0.31. [thanks Jon]</p>

<h2 id="v1.0.31.02">1.0.31.02 - April 13, 2005</h2>
<p>Fixed the <a href="misc/Clipboard.htm">Clipboard variable</a> to avoid producing an error when a set of zero files was copied onto the clipboard. [thanks Serenity &amp; Tekl]</p>
<p>Fixed <a href="lib/Gui.htm#GuiDropFiles">GuiDropFiles</a> and <a href="lib/Gui.htm#Options">Gui +/-Options</a> so that they don't remove window <a href="lib/WinSet.htm">transparency</a> and other effects. [thanks toralf]</p>

<h2 id="v1.0.31.01">1.0.31.01 - April 11, 2005</h2>
<p>Fixed sub-expressions in <a href="Functions.htm">function</a> parameters yielding incorrect result; e.g. <code>Add(2*3,3)</code>. [thanks Laszlo]</p>
<p>Fixed open-parenthesis being seen as a syntax error if used after a command that lacks a first comma; e.g. <code>MsgBox ()</code>. [thanks Laszlo]</p>

<h2 id="v1.0.31.00">1.0.31 - April 8, 2005</h2>
<p class="note"><strong>Note:</strong> Although this release has been extensively tested, quite a few low-level changes were made. It is recommended that mission-critical scripts be re-tested -- or that you wait two weeks for any bugs to get fixed -- prior to adopting this version.</p>
<p>Fixed the inability of a <a href="lib/SetTimer.htm">timer</a> to reset itself. For example, if <code>SetTimer, MyTimer</code> is done within the MyTimer subroutine, the timer will begin waiting for an entirely new interval to expire before running again.</p>
<p>Fixed syntax checker reporting parentheses inside quoted strings as unbalanced.</p>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl</a> to be able to change the ReadOnly attribute of an <a href="lib/GuiControls.htm#Edit">Edit control</a>. [thanks Bahri]</p>
<p>Changed <a href="Variables.htm#Expressions">expressions</a> so that references to invalid <a href="misc/Arrays.htm">dynamic variables</a> such as <code>Array%VarContainingSpaces%</code> produces a runtime warning.</p>
<p>Lowered the precedence of string concatenation in expressions. Although this is unlikely to affect any scripts, if you have any doubt please consult the <a href="Variables.htm#Operators">operator precedence table</a>.</p>
<p>Improved <a href="Variables.htm#Operators">string concatenation</a> in expressions to work on anything (e.g. <a href="misc/Arrays.htm">arrays</a> and sub-expressions). In addition, a period can be used as a concatenation operator to improve readability.</p>
<p><a href="misc/Arrays.htm">Dynamic variables</a> such as <code>Array%i%</code> are up to 1000 times faster. A script may now have several million variables without a large slow-down. [thanks Laszlo]</p>
<p>Improved the performance of <a href="lib/GuiControl.htm">GuiControl</a> and <a href="lib/GuiControlGet.htm">GuiControlGet</a> when used on a window that has hundreds of controls.</p>
<p><a href="Variables.htm#Expressions">Expressions</a> that use a lot of ANDs and ORs are faster due to <a href="Functions.htm#ShortCircuit">short-circuit boolean evaluation</a>.</p>
<p>Improved memory conservation in scripts that use thousands of variables by adding two new variable capacities: 1 and 6. Formerly, the smallest capacity (other than zero) was 63.</p>
<p>Added built-in variables <a href="Variables.htm#LineNumber">A_LineNumber</a> and <a href="Variables.htm#LineFile">A_LineFile</a>, which contain the currently executing line number and the file name to which it belongs. [thanks toralf]</p>
<p>Added directive <a href="lib/_ClipboardTimeout.htm">#ClipboardTimeout</a>, which changes how long the script persists in trying to open the <a href="misc/Clipboard.htm">clipboard</a> (default 1000 ms). [thanks Tekl &amp; Jason Payam Ahdoot]</p>
<p>Added the ability to pass parameters and receive return values from functions. Functions also support local variables. In addition, <a href="lib/ListVars.htm">ListVars</a> can show the contents of local variables to help debugging. See <a href="Functions.htm">functions</a> for details.</p>

<h2 id="v1.0.30.04">1.0.30.04 - March 14, 2005</h2>
<p>Fixed crash when a <a href="lib/Gui.htm">GUI window</a> was destroyed and recreated within the same <a href="misc/Threads.htm">thread</a>. [thanks corrupt]</p>

<h2 id="v1.0.30.03">1.0.30.03 - March 12, 2005</h2>
<p class="note"><strong>Note:</strong> This release consists entirely of minor changes.</p>
<p>Changed the tray icon menu to open only after the right mouse button has been released. This allows a <a href="misc/Remap.htm">remapped</a> right mouse button to open the menu correctly. [thanks eamat]</p>
<p>Changed <a href="lib/WinGet.htm#Count">WinGet Count</a> to retrieve all windows on the system rather than the <a href="misc/WinTitle.htm#LastFoundWindow">Last Found Window</a> when all four window parameters are blank.</p>
<p>Improved <a href="Scripts.htm#ahk2exe">compiled scripts</a> to conceal the script's source code when a runtime error occurs (such as trying to launch a nonexistent file). This concealment can be disabled via <code><a href="lib/Menu.htm">Menu</a>, Tray, MainWindow</code>. [thanks Rajat]</p>
<p>Improved <a href="lib/StringGetPos.htm">StringGetPos</a> to optionally skip over a certain number of characters on the leftmost or rightmost sides. [thanks Tekl]</p>
<p>Improved <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> to omit any redundant CF_METAFILEPICT data that is present, which saves space.</p>
<p>Improved <a href="lib/GuiControls.htm#ListBox">ListBoxes</a> so that the tab character is always expanded rather than shown as an empty square. In addition, tab-stops can now be added or changed after the control is created.</p>
<p>Improved the following commands to support expressions for their numeric parameters: <a href="lib/Transform.htm">Transform</a>, <a href="lib/FileReadLine.htm">FileReadLine</a>, <a href="lib/FileSelectFolder.htm">FileSelectFolder</a>, <a href="lib/FileSetAttrib.htm">FileSetAttrib</a>, and <a href="lib/FileSetTime.htm">FileSetTime</a>.</p>

<h2 id="v1.0.30.02">1.0.30.02 - March 8, 2005</h2>
<p>Fixed <a href="lib/WinGet.htm#List">WinGet List</a>, which was partially broken by v1.0.30. [thanks twwilliams]</p>
<p>Changed <a href="lib/WinGet.htm#List">WinGet List</a> to retrieve all windows on the system rather than the <a href="misc/WinTitle.htm#LastFoundWindow">Last Found Window</a> when all four window parameters are blank.</p>
<p>Improved "<a href="lib/ListLines.htm">lines most recently executed</a>" so that when a waiting thread is resumed after being interrupted, the waiting command (e.g. <a href="lib/WinWait.htm">WinWait</a>) will be shown at the bottom of the list, which helps reveal "hung" <a href="misc/Threads.htm">threads</a>. In addition, "lines most recently executed" now shows 400 lines rather than 200.</p>

<h2 id="v1.0.30.01">1.0.30.01 - March 7, 2005</h2>
<p>Fixed <a href="lib/GroupDeactivate.htm">GroupDeactivate</a>, which was partially broken by v1.0.30.</p>
<p>Fixed the lack of an error message when <a href="lib/Menu.htm#Delete">Menu Delete/DeleteAll</a> failed on the submenu of a <a href="lib/Gui.htm#Menu">menu bar</a>. [thanks Landvermesser]</p>

<h2 id="v1.0.30.00">1.0.30 - March 5, 2005</h2>
<p>Fixed mouse hotkeys that use <kbd>Win</kbd>+<kbd>Ctrl</kbd> or <kbd>Win</kbd>+<kbd>Shift</kbd> as <a href="Hotkeys.htm">modifiers</a> so that the Start Menu does not appear. [thanks Mythos]</p>
<p>Fixed <a href="lib/WinSet.htm#Style">WinSet Style|ExStyle</a> to set <a href="misc/ErrorLevel.htm">ErrorLevel</a> to 1 if the target window does not exist.</p>
<p>Changed "<a href="lib/GroupClose.htm">GroupClose</a> All" to close hidden windows if <a href="lib/DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>
<p>Improved <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> so that variables to which it has been assigned can be compared to each other as in this example [thanks Jerry]:</p>
<pre>if ClipSaved1 &lt;&gt; %ClipSaved2% <em>; This must be an old-style IF statement, not an <a href="Variables.htm#Expressions">expression</a>.</em></pre>
<p>Improved <a href="lib/GuiControls.htm#ListBox">GUI ListBoxes</a> with an option to set custom tab stops. [thanks jonny]</p>
<p>Improved <a href="lib/Progress.htm">Progress</a> and <a href="lib/Progress.htm">SplashImage</a> with a "Hide" option to have the window start off hidden. Use "Progress Show" or "SplashImage Show" to show it later.</p>
<p>Improved <a href="Hotstrings.htm">hotstrings</a> with option letter "Z", which resets the hotstring recognizer after each triggering of the hotstring. The script will begin waiting for an entirely new hotstring, eliminating from consideration anything you previously typed. [thanks dennisbgoode]</p>
<p>Added <a href="lib/WinSet.htm#Disable">WinSet Disable/Enable</a>, which disables or enables a window.</p>
<p>Added ahk_group as a way to find window(s) matching any of the specifications in a <a href="lib/GroupAdd.htm">window group</a>. Example: <code>IfWinExist ahk_group %MyGroup%</code>. In addition, an entire group of windows can be minimized, maximized, restored, hidden, shown, or closed (e.g. <code>WinMinimize ahk_group MyGroup</code>). [thanks Rajat]</p>
<p>Added <a href="lib/WinSet.htm#Region">WinSet Region</a>, which changes the display area of a window to be the specified ellipse, rectangle, or polygon. This allows parts of a window to be rendered invisible. [thanks skrommel]</p>

<h2 id="v1.0.29.00">1.0.29 - February 28, 2005</h2>
<p>Fixed things like <code>Sleep %Seconds%000</code>, which stopped working in v1.0.25+. [thanks Mayhem]</p>
<p>Fixed the <a href="lib/Input.htm">Input</a> command to correctly capture uppercase and control characters when not in "visible" mode.</p>
<p>Fixed <a href="Hotkeys.htm">key-up hotkeys</a> to work on the neutral keys <kbd>Ctrl</kbd>, <kbd>Shift</kbd>, and <kbd>Alt</kbd>. [thanks jonny]</p>
<p>Changed <a href="Scripts.htm#ahk2exe">compiled scripts</a> to always have their .exe file extension at the end of their names for the purpose of <a href="Variables.htm#ScriptFullPath">A_ScriptFullPath</a> and default window titles. This also allows <a href="lib/_SingleInstance.htm">#SingleInstance</a> to work even when the script is launched from the command line without its extension. [thanks Mythos]</p>
<p>Improved <a href="lib/ClipWait.htm">ClipWait</a> to optionally wait for any data rather than just text and files.</p>
<p>An <a href="Variables.htm#Expressions">expression</a> can be used in a parameter that does not directly support it by preceding it with a percent sign and a space or tab. This is most commonly used to access <a href="misc/Arrays.htm">arrays</a> [thanks JSLover]. Examples:</p>
<pre>FileAppend, % MyArray%i%, My File.txt
MsgBox % "The variable MyVar contains " MyVar "."
Control, Choose, % CurrentSelection - 1</pre>
<p>Added built-in variable <a href="Variables.htm#MSec">A_MSec</a>, which is the current time's millisecond. [thanks JSLover]</p>
<p>Added built-in variable <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a>, which contains all data on the clipboard (such as pictures and formatting). This can be used to save and restore the clipboard to memory or a file as in these examples:</p>
<pre>ClipSaved = %ClipboardAll%
Clipboard = %ClipSaved%  <em>; Done at a later time to restore the original contents.</em>
FileAppend, %ClipboardAll%, C:\Saved clipboard.bin  <em>; Write the entire clipboard to a file.</em>
FileRead, Clipboard, *c C:\Saved clipboard.bin  <em>; Restore from a file via the *c option.</em></pre>

<h2 id="v1.0.28.01">1.0.28.01 - February 23, 2005</h2>
<p>Improved <a href="lib/FileAppend.htm">FileAppend</a> and <a href="lib/LoopReadFile.htm">file-reading loops</a> to be able to write text to standard output (stdout) by using an asterisk as the filename. Although such text can be redirected to a file, piped to another EXE, or captured by <a href="lib/_ErrorStdOut.htm">fancy text editors</a>, it will not appear at the command prompt it was launched from (there is a workaround described at <a href="lib/FileAppend.htm">FileAppend</a>). For example, the following would be valid if typed at a command prompt:</p>
<pre class="no-highlight">"%ProgramFiles%\AutoHotkey\AutoHotkey.exe" "My Script.ahk" &gt;"Error Log.txt"</pre>

<h2 id="v1.0.28.00">1.0.28 - February 22, 2005</h2>
<p><a href="lib/FileAppend.htm">FileAppend</a>'s text parameter may be omitted to create an empty file or update the timestamp of an existing file. [thanks JSLover]</p>
<p>The following fix from v1.0.26 was undone because it is not needed: "Fixed <a href="Hotkeys.htm">hotkeys</a> such as <code>a &amp; b::</code> to be seen as <code>~a &amp; b::</code> if <code>~a::</code> also exists as a hotkey, and vice versa." In such a case, the hotkey <code>~a::</code> causes an A keystroke to be sent whenever A wasn't held down to modify another key such as B.</p>
<p>Improved <a href="lib/SoundPlay.htm">SoundPlay</a> to play standard system sounds (hand, question, exclamation, and asterisk). [thanks Mythos]</p>
<p>Improved the tray icon to optionally be unaffected by <a href="lib/Pause.htm">Pause</a> and <a href="lib/Suspend.htm">Suspend</a>. The icon can be "frozen" by specifying 1 as the last parameter of the <a href="lib/Menu.htm">Menu</a> command. Example: <code>Menu, Tray, Icon, C:\My Icon.ico, , 1</code></p>
<p>Added ahk_pid as a way to find window(s) matching a <a href="lib/Process.htm">process identifier (PID)</a>. Example: <code>WinClose ahk_pid %VarContainingPID% <em>; Closes only the first matching window.</em></code></p>
<p>Added command <a href="lib/SoundBeep.htm">SoundBeep</a>, which emits a tone from the PC speaker. [thanks Tekl]</p>
<p>Added support for <a href="Hotkeys.htm">hotkeys</a> that fire upon release of a key. Examples:</p>
<pre>*LWin::Send {LControl down}
*LWin Up::Send {LControl up}
^!r Up::MsgBox You pressed and released Ctrl+Alt+R.</pre>

<h2 id="v1.0.27.01">1.0.27.01 - February 17, 2005</h2>
<p>Fixed <a href="lib/Gui.htm#Options">Gui -Caption</a> (and perhaps others) to work even if the window is visible. [thanks Watcher]</p>
<p>Fixed <a href="lib/GuiControls.htm#Progress">GUI progress bars</a> so that a starting position outside the range 0-100 is possible upon creation. [thanks kapege.de]</p>

<h2 id="v1.0.27.00">1.0.27 - February 15, 2005</h2>
<p>Changed <a href="Variables.htm#OSVersion">A_OSVersion</a> to recognize Windows Server 2003 (as WIN_2003).</p>
<p><a href="lib/PostMessage.htm">Post/SendMessage</a> can broadcast to ALL windows via <code class="no-highlight">ahk_id 0xFFFF</code>, as intended. [thanks Mythos]</p>
<p>If you're using <a href="lib/PostMessage.htm">Post/SendMessage</a> to trigger menu items created via the <a href="lib/Menu.htm">Menu</a> command, each ID is now 10,000 higher than it was before.</p>
<p>Improved <a href="lib/Run.htm">RunWait</a> to support <em>OutputVarPID</em> (like the Run command).</p>
<p>Added built-in variables <a href="Variables.htm#IsCompiled">A_IsCompiled</a> and <a href="Variables.htm#IsSuspended">A_IsSuspended</a>, which contain 1 if the script is running as a compiled EXE or is suspended, respectively. [thanks Mythos]</p>
<p>Added command <a href="lib/OutputDebug.htm">OutputDebug</a>, which sends a string to the debugger (if any) for display. [thanks procyon]</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Fixed windows containing <a href="lib/GuiControls.htm#Tab">Tab controls</a>: previously, controls outside the Tab control were sometimes invisible when the window was first shown. [thanks ranomore]</p>
<p>Changed <a href="lib/GuiControl.htm#options">GuiControl +/-Options</a> to set ErrorLevel to 1 (failure) if none of the specified styles are allowed to be applied.</p>
<p>Increased the maximum number of GUI windows from 10 to 99, and the maximum number of controls per window from 1000 to 11000.</p>

<h2 id="v1.0.26.01">1.0.26.01 - February 11, 2005</h2>
<p>Fixed the PSPad (editor) installation script to create the AutoHotkey.ini file in PSPad's syntax vs. context folder (and two other minor fixes). [thanks RobOtter &amp; beardboy]</p>
<p>Added <a href="lib/_KeyHistory.htm">#KeyHistory</a>, which sets the maximum number of keyboard and mouse events displayed by the <a href="lib/KeyHistory.htm">KeyHistory</a> window. You can set it to 0 to disable key history. [thanks Mythos]</p>

<h2 id="v1.0.26.00">1.0.26 - February 10, 2005</h2>
<p>Fixed <a href="lib/LoopFile.htm#LoopFileLongPath">A_LoopFileLongPath</a>, which was truncating long filenames produced from short ones. [thanks deXter &amp; jonny]</p>
<p>Fixed <a href="lib/EnvDiv.htm">EnvDiv</a> and <a href="lib/Transform.htm#Mod">Transform Mod</a> to allow values between -1.0 and 1.0. [thanks Mythos]</p>
<p>Fixed <a href="Hotkeys.htm">hotkeys</a> such as <code>a &amp; b::</code> to be seen as <code>~a &amp; b::</code> if <code>~a::</code> also exists as a hotkey, and vice versa. [thanks jonny]</p>
<p>Fixed unwanted interaction between <a href="Hotkeys.htm">hotkeys</a>. For example, when using the hotkeys <code>CapsLock &amp; A::</code> and <code>MButton::</code>, clicking the middle button while holding down <kbd>CapsLock</kbd> will turn <kbd>CapsLock</kbd> on/off as expected.</p>
<p>Changed <code><a href="lib/MouseClick.htm">MouseClick</a> WheelUp|WheelDown</code> to ignore <a href="lib/SetMouseDelay.htm">SetMouseDelay</a>. This was done to avoid a slow-down of mouse wheel hotkeys, and also because a delay is undesirable in the vast majority of cases.</p>
<p>Improved PSPad's (editor) syntax and clip files in the Extras folder. [provided by GoGoGadgetScott &amp; beardboy]</p>
<p>Improved <a href="lib/PostMessage.htm">SendMessage</a> and <a href="lib/PostMessage.htm">PostMessage</a> to support <code class="no-highlight">ahk_id 0xFFFF</code>, which is can be used to send HWND_BROADCAST messages to all windows in the system. [thanks Mythos]</p>
<p>Added a "fast" option to <a href="lib/PixelSearch.htm">PixelSearch</a>, which is up to 100 times faster for large search areas such as the entire screen. [code by Aurelian Maga]</p>
<p>Added command <a href="lib/ImageSearch.htm">ImageSearch</a>, which searches the screen for an image. [code by Aurelian Maga]</p>
<p>Added <a href="lib/WinGet.htm#Transparent">WinGet Transparent</a> and <a href="lib/WinGet.htm#TransColor">WinGet TransColor</a>. Also added <a href="lib/WinSet.htm#Redraw">WinSet Redraw</a>, which refreshes a window by repainting it. [thanks Mythos]</p>
<p>Added <a href="lib/WinSet.htm#Style">WinSet Style|ExStyle</a> and <a href="lib/Control.htm#Style">Control Style|ExStyle</a> to change the styles of windows and controls not owned by the script.</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Fixed Gui +/-Disabled and Gui +/-AlwaysOnTop. In addition, it is no longer necessary to do <a href="lib/Gui.htm#Show">Gui Show</a> afterward. [thanks beardboy]</p>
<p>Fixed the inability to set a <a href="lib/GuiControls.htm#Progress">progress bar</a> back to the default color. [thanks toralf]</p>
<p>Improved "Checked", "Disabled", and "Hidden" to recognize an optional 1 or 0 suffix. Example: <code>Gui, Add, Checkbox, Disabled%Disabled?% Checked%Checked?%</code>. [thanks MikeG]</p>

<h2 id="v1.0.25.14">1.0.25.14 - February 5, 2005</h2>
<p>Fixed <a href="Hotstrings.htm">hotstrings</a> so that they don't interfere with AltGr dead keys (diacritics) such as tilde (~). [thanks zorglups &amp; /Torben]</p>
<p>Added built-in variable <a href="lib/LoopFile.htm#LoopFileLongPath">A_LoopFileLongPath</a>, which overcomes the limitations of A_LoopFileFullPath. [thanks Hugo]</p>
<p>Applying +AlwaysOnTop works even if the <a href="lib/Gui.htm">GUI window</a> already exists. [thanks kmel]</p>
<p><a href="lib/Gui.htm#Show">Gui Show</a> has been changed slightly to give more consistent results, especially for windows containing Tab controls.</p>

<h2 id="v1.0.25.13">1.0.25.13 - February 4, 2005</h2>
<p>Applying <a href="lib/Gui.htm#Options">options or styles</a> to an existing GUI window avoids showing the window if it is hidden or minimized.</p>
<p>Added the following options to <a href="lib/Gui.htm#Show">Gui Show</a>: Minimize, Maximize, Restore, NoActivate, NA, and Hide. [thanks kmel]</p>
<p>Added the following Gui window <a href="lib/Gui.htm#Options">options</a>: +/-Disabled, +/-AlwaysOnTop, and +/-LastFound. The LastFound option sets the window to be the Last Found Window, allowing commands such as <a href="lib/WinSet.htm">WinSet</a> to operate on it even if it is hidden.</p>

<h2 id="v1.0.25.12">1.0.25.12 - February 2, 2005</h2>
<p>Fixed <a href="lib/RunAs.htm">RunAs</a> so that it can be used more than once. [thanks MikeG]</p>
<p>Fixed <code><a href="lib/Menu.htm">Menu</a>, MyMenu, Standard</code> to create the menu if it doesn't yet exist. [thanks Mythos]</p>
<p>Fixed <code>if Var</code> and <code><a href="lib/IfExpression.htm">if</a> (expression)</code> to consider non-numeric strings to be "true", as documented. [thanks Mythos]</p>
<p>Fixed <a href="Variables.htm#BuiltIn">built-in variables</a> so that they can be referenced dynamically even if never referenced directly. Example: <code>A_IPAddress%A_Index%</code></p>
<p>Changed <a href="misc/ErrorLevel.htm">ErrorLevel</a> so that its previous value is available to commands that give it a new value. Example: <code>StringReplace, OutputVar, ErrorLevel, EndKey:</code></p>
<p>Changed the linefeed character (`n) to be sent as <kbd>Enter</kbd> rather than <kbd>Ctrl</kbd>+<kbd>Enter</kbd>. This also causes <code>SendRaw <a href="Variables.htm#EndChar">%A_EndChar%</a></code> to work correctly when the user presses <kbd>Enter</kbd> to complete a <a href="Hotstrings.htm">hotstring</a>. [thanks Andreas Borutta]</p>

<h2 id="v1.0.25.11">1.0.25.11 - January 31, 2005</h2>
<p>Fixed <a href="lib/StringReplace.htm">StringReplace</a> (broken by v1.0.25) to work properly on large strings requiring more than 20 replacements. [thanks jordi]</p>
<p>Fixed GUI <a href="lib/GuiControls.htm#Picture">Picture controls</a> containing icons so that it is possible to change their options and styles via <a href="lib/GuiControl.htm">GuiControl</a>. [thanks toralf]</p>

<h2 id="v1.0.25.10">1.0.25.10 - January 30, 2005</h2>
<p>Fixed the <a href="lib/Input.htm">Input</a> command to correctly capture uppercase characters from the <a href="lib/Send.htm">Send command</a> and <a href="Hotstrings.htm">Hotstring</a> replacements.</p>
<p>Increased the maximum number of controls per <a href="lib/Gui.htm">GUI window</a> from 500 to 1000.</p>
<p>Improved <a href="lib/MouseGetPos.htm">MouseGetPos</a> with an optional mode that better supports MDI child windows. [thanks unnamed.ahk]</p>

<h2 id="v1.0.25.09">1.0.25.09 - January 28, 2005</h2>
<p>Launching a script should no longer switch you out of a full-screen application such as a game. In addition, there should be less disturbance/redrawing of the taskbar. [thanks Tekl]</p>
<p>Improved <a href="lib/Control.htm#Choose">Control Choose/ChooseString</a> to work on multi-select ListBoxes.</p>
<p>Added <a href="lib/ControlGet.htm#List">ControlGet List</a> to retrieve the contents of a ListBox or ComboBox. [thanks Rajat &amp; mallow]</p>

<h2 id="v1.0.25.08">1.0.25.08 - January 25, 2005</h2>
<p>Fixed <a href="Hotstrings.htm">hotstrings</a>: Previously, when you pressed <kbd>Enter</kbd> to trigger a replacement, <kbd>Ctrl</kbd>+<kbd>Enter</kbd> was sent instead of <kbd>Enter</kbd>. [thanks Trinity &amp; h67o]</p>
<p>Fixed <a href="lib/GuiControls.htm#Slider">Slider controls</a> so that a starting position outside the range 0-100 is possible upon creation. [thanks bahri]</p>

<h2 id="v1.0.25.07">1.0.25.07 - January 24, 2005</h2>
<p>Changed SplitPath to better support URLs. See <a href="lib/SplitPath.htm">SplitPath</a> for details.</p>
<p>Added built-in variables true and false, which contain 1 and 0. They can be used to make a script more readable. Example: <code>CaseSensitive := true</code></p>

<h2 id="v1.0.25.06">1.0.25.06 - January 23, 2005</h2>
<p>Fixed <a href="lib/FileSelectFile.htm">FileSelectFile</a>'s new multi-select option so that selecting a single file in a root folder such as C: will include a backslash after the folder name.</p>
<p>Fixed the fact that an <a href="Variables.htm#Expressions">expression</a> such as <code>Var:=" string "</code> would obey <a href="lib/AutoTrim.htm">AutoTrim</a> while a more complex expression would not. By design, AutoTrim should never affect expressions. [thanks Ya-Cha]</p>
<p>Fixed <a href="Variables.htm#Expressions">expressions</a> so that concatenating a reference such as <code>Array%i%</code> always treats <code>Array%i%</code> as an empty string, as documented. [thanks Ya-Cha]</p>
<p>Changed <a href="Variables.htm#Expressions">expressions</a> so that performing an invalid operation -- such as dividing by zero or subtracting a string from a number -- causes only the affected portion to evaluate to a blank string rather than the entire expression.</p>
<p>Changed the installer to preserve the editor associated with scripts (rather than changing it to Notepad). Also, the open/run/compile context menu items for .ahk files have been corrected to work on a broader range of systems. [thanks corrupt]</p>
<p>Improved <a href="lib/PixelSearch.htm">PixelSearch</a> to optionally sort from right to left rather than left to right. If any of your scripts rely on PixelSearch always reporting "not found" for an inverted search rectangle, please adjust them accordingly. [thanks BoBo &amp; SD2K]</p>
<p>Improved <a href="lib/SplitPath.htm">SplitPath</a> to support URLs. [thanks BoBo]</p>

<h2 id="v1.0.25.05">1.0.25.05 - January 19, 2005</h2>
<p>Fixed crash when an <a href="Variables.htm#Expressions">expression</a> compared a non-numeric string to the numeric result of an operation. [thanks unnamed.ahk]</p>
<p>Fixed <a href="lib/SetExpression.htm"><code>:=</code></a> so that it's not necessary to have a space to its left. [thanks unnamed.ahk]</p>
<p>Fixed string concatenation such as <code>Var = %Var% Test</code>, which was partially broken by v1.0.25. This affected only concatenations that required one or more spaces to be trimmed from the left side due to <a href="lib/AutoTrim.htm">AutoTrim</a> being on. [thanks namazu(catfish)]</p>
<p>Fixed mouse button hotkeys that use only <kbd>Win</kbd> or <kbd>Alt</kbd> as a modifier so that they do not display the Start Menu or activate the active window's menu bar, respectively. This problem occurred only in scripts that were not using the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a>. [thanks Kijuto Riddle]</p>
<p>Fixed scripts that assign the mouse to be AltTab, ShiftAltTab, and other alt-tab actions so that they activate the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a>, which is required for their proper operation. [thanks jonny]</p>
<p>Improved <a href="lib/FileSelectFile.htm">FileSelectFile</a> with an easier multi-select option. Although the old multi-select option will continue to function as before, it has been marked obsolete in the help file due to the difficulty of parsing its results. [thanks 3tones]</p>
<p>Improved <a href="lib/StringReplace.htm">StringReplace</a> with an option to store the number of replacements in ErrorLevel.</p>

<h2 id="v1.0.25.00">1.0.25 - January 12, 2005</h2>
<p class="note"><strong>Note:</strong> Although this release has been extensively tested, quite a few low-level changes were made. It is recommended that mission-critical scripts be re-tested prior to adopting this version.</p>
<p>Fixed <a href="lib/LoopFile.htm">file-pattern loops</a> on Windows 95/98/Me so that A_LoopFileTimeModified/Created/Accessed are not blank. [thanks 3tones]</p>
<p>Fixed the following keys on Windows 95/98/Me to allow them to part of hotkey combinations: <kbd>Del</kbd>, <kbd>Ins</kbd>, <kbd>Home</kbd>, <kbd>End</kbd>, <kbd>PgUp</kbd>, <kbd>PgDn</kbd>, and the arrow keys.</p>
<p>Fixed lines such as <code>If x = 5, Exit</code> so that the item after the comma is not recognized as a command. By contrast, <code>IfEqual, x, 5, Exit</code> will still recognize "Exit" as a command.</p>
<p>Changed <a href="lib/Transform.htm#Pow">Transform Pow</a> to yield a blank string rather than 0.00 when zero is raised to a negative power.</p>
<p>Changed <a href="Scripts.htm#ahk2exe">compiled scripts</a> so that the version resource shows the version number rather than being entirely blank. [thanks g4]</p>
<p>Changed <a href="lib/FileAppend.htm">FileAppend</a> so that the file is automatically opened in binary mode if the text to be written contains any carriage return and linefeed pairs (<code class="no-highlight">`r`n</code>). In other words, the asterisk option is put into effect automatically. However, specifying the asterisk when appropriate improves performance because the program does not need to scan for <code class="no-highlight">`r`n</code>.</p>
<p>Changed <a href="lib/LoopReadFile.htm">file-reading loops</a> so that the output file is not opened if nothing is ever written to it. This happens if the loop performs zero iterations or if it never uses the <a href="lib/FileAppend.htm">FileAppend</a> command. In addition, the file is automatically opened in binary mode if the loop's first use of FileAppend writes any carriage return and linefeed pairs (<code class="no-highlight">`r`n</code>). In other words, the asterisk option is put into effect automatically. These changes might break existing scripts that rely upon: 1) a zero-length file being created by the loop; or 2) the file's modification time being changed by the loop even if it didn't write any text to the file.</p>
<p>Removed runtime validation of numeric parameters (to help performance). Formerly, a command such as <code>SetKeyDelay %Var%</code> would produce a runtime error if Var contained something non-numeric. Most commands now treat non-numeric parameters as zero.</p>
<p>Improved the <a href="lib/Progress.htm">Progress</a> command with options for starting position and having a range other than 0 to 100. [thanks ranomore]</p>
<p>Improved the <a href="lib/Send.htm">Send</a> command so that mouse buttons can be held down or released as in this example: <code>Send {LButton down}</code></p>
<p>Improved the <a href="lib/Sort.htm">Sort</a> command with an option to eliminate duplicates from the list. Also, the numeric option now treats items as floating point numbers rather than integers. [thanks Rajat]</p>
<p>Improved WIN and ALT <a href="Hotkeys.htm">hotkeys</a> that use the <a href="lib/Send.htm">Send</a> command:</p>
<ul>
  <li>Fixed some situations that resulted in an unwanted appearance of the Start Menu.</li>
  <li>The language bar's hotkey (<kbd>LAlt</kbd>+<kbd>Shift</kbd>) should no longer get triggered as an unwanted side-effect of the Send command. However, it can still be triggered intentionally with <code>Send {LAlt down}{Shift}{LAlt up}</code>.</li>
  <li>ALT hotkeys should no longer activate the menu bar of the active window. If you're using <code class="no-highlight">{AltUp}{Alt}</code> anywhere in your scripts to make ALT hotkeys work better, those hotkeys should still work. However, they can be made to behave more consistently by removing <code class="no-highlight">{AltUp}{Alt}</code>.</li>
</ul>
<p>Improved performance of the following: 1) StringReplace "All" uses temporary memory (when appropriate) to greatly speed up the operation. See <a href="lib/StringReplace.htm">StringReplace</a> for details and options. 2) Variable concatenation, such as <code>Var = %Var%String</code>, is at least 100 times faster. 3) Assigning to variables when <a href="lib/AutoTrim.htm">AutoTrim</a> is "On" is faster. 4) <a href="lib/StringCaseSense.htm">Case-insensitive</a> string searching is much faster, which affects <a href="lib/StringGetPos.htm">StringGetPos</a>, <a href="lib/IfInString.htm">IfInString</a>, <code>if var <a href="lib/IfIn.htm">in</a> &lt;list&gt;</code>, <a href="lib/StringReplace.htm">StringReplace</a>, and <a href="lib/Input.htm">Input</a>.</p>
<p>Added built-in variable A_LoopFileShortPath to <a href="lib/LoopFile.htm">file-pattern loops</a>, which allows the 8.3 short path and name of a file to be retrieved. [thanks Rajat]</p>
<p>Added command <a href="lib/FileRead.htm">FileRead</a>, which reads all of a file's text into a variable (performs better than a file-reading loop).</p>
<p>Added support for expressions in commands that have numeric parameters, such as <a href="lib/StringLeft.htm">StringLeft</a>. In addition, <a href="lib/IfExpression.htm">IF-statements</a> may use complex expressions by including a parenthesis as the first character, e.g. <code>if (X &lt; Y + 10) and (Color = "Blue")</code>. Finally, <a href="lib/SetExpression.htm">Var:=expression</a> has been added to assign the result of an expression to a variable, e.g. <code>Var := 100*X + 1/3</code>. See <a href="Variables.htm#Expressions">Expressions</a> for details about operators, string concatenation, and easier access to arrays. [thanks Joost Mulders]</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Changed <a href="lib/Gui.htm#Show">Gui Show</a> to launch the <a href="lib/Gui.htm#GuiSize">GuiSize</a> label only after showing the window and updating its title. [thanks ranomore]</p>
<p>Improved <a href="lib/Gui.htm#GuiDropFiles">drag-and-drop</a> to report (via <a href="misc/ErrorLevel.htm">ErrorLevel</a>) the number of dropped files.</p>

<h2 id="v1.0.24.00">1.0.24 - December 9, 2004</h2>
<p> Fixed <a href="lib/StatusBarGetText.htm">StatusBarGetText</a> and <a href="lib/StatusBarWait.htm">StatusBarWait</a>: If the system was under heavy load, sometimes they would give up too soon and set ErrorLevel. [thanks Anatoly Larkin]</p>
<p>Fixed <a href="Scripts.htm#ahk2exe">compiled scripts</a> so that the version resource is blank as intended. [thanks Titan]</p>
<p>Improved <a href="lib/ControlClick.htm">ControlClick</a> to optionally click at a set of coordinates rather than a specific control.</p>
<p>Improved memory conservation: If a script requires its temporary memory area to be greater than 4 MB for an operation such as <code>StringReplace, Huge_Var, Huge_Var, `n, `r`n</code>, that memory will be freed automatically when it has been unused for 10 seconds. The 10-second delay avoids the performance penalty of frequently freeing and reallocating memory. For example, a loop with thousands of iterations might need the memory for its entire duration.</p>
<p>Improved behavior of <a href="Scripts.htm#cmd">command line parameters</a> on Windows NT/2k/XP so that: 1) more than 8 files can be dragged and dropped onto a .ahk script (if the drag-and-drop option was enabled during installation); and 2) .ahk files launched directly via shortcut or command line can receive parameters containing spaces if they are enclosed in double quotes. [thanks Tekl]</p>
<p>Improved <a href="lib/FileCreateShortcut.htm">FileCreateShortcut</a> with options for: 1) using an icon other than the first; and 2) setting the launch state to minimized or maximized. If you have any scripts that use FileCreateShortcut with the <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>,</kbd> shortcut key, please ensure the comma is escaped. [thanks Holger]</p>
<p>Added command <a href="lib/FileGetShortcut.htm">FileGetShortcut</a>, which retrieves information about a shortcut (.lnk) file, such as its target file. [thanks Holger]</p>
<p>Added Rajat's syntax and keyword lists to the Extras\Editors\Syntax folder in the AutoHotkey folder. These files make it easier to create and maintain syntax definitions and clip libraries for various editors.</p>
<p>Added sub-command <a href="lib/Menu.htm#Click">Menu Click</a>, which allows a single-click on the tray icon to activate the default menu item (normally a double-click is required). [thanks CarlosTheTackle]</p>
<p>Added sub-commands <a href="lib/Drive.htm#Lock">Drive Lock</a> and <a href="lib/Drive.htm#Unlock">Drive Unlock</a>. Locking a drive prevents its eject feature from working. [thanks RG]</p>
<p>Added the ability to <a href="lib/Sort.htm">sort</a> a variable's contents in random order. [thanks GBeam]</p>
<p>Added support for Unicode text on the clipboard and in variables. See <a href="lib/Transform.htm#Unicode">Transform Unicode</a> for details. [thanks Tekl]</p>
<p>Added built-in variable <a href="Variables.htm#YWeek">A_YWeek</a>, which is the current ISO 8601 year and week number. [thanks various]</p>
<p>Added the following built-in variables: <a href="Variables.htm#Language">A_Language</a>, <a href="Variables.htm#ComputerName">A_ComputerName</a>, <a href="Variables.htm#UserName">A_UserName</a>, <a href="Variables.htm#Desktop">A_Desktop</a>, <a href="Variables.htm#DesktopCommon">A_DesktopCommon</a>, <a href="Variables.htm#StartMenu">A_StartMenu</a>, <a href="Variables.htm#StartMenuCommon">A_StartMenuCommon</a>, <a href="Variables.htm#Programs">A_Programs</a>, <a href="Variables.htm#ProgramsCommon">A_ProgramsCommon</a>, <a href="Variables.htm#Startup">A_Startup</a>, <a href="Variables.htm#StartupCommon">A_StartupCommon</a>, and <a href="Variables.htm#MyDocuments">A_MyDocuments</a>.</p>
<p>Added command <a href="lib/FormatTime.htm">FormatTime</a>, which transforms a YYYYMMDDHH24MISS timestamp into the specified date/time format.</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Fixed <a href="lib/GuiControls.htm#Radio">radio buttons</a> so that: 1) the g-label won't be launched just because the button receives keyboard focus; 2) the g-label is launched once rather than twice when navigating via the arrow keys; 3) focus is on the correct button when a radio group receives keyboard focus; and 4) back-to-back radio groups give their first radio button a tabstop. [thanks Gre &amp; Jacques Bensimon]</p>
<p>Fixed <a href="lib/GuiControls.htm#Tab">Tab controls</a> so that keyboard focus always lands on the first control rather than the second one when the user clicks on a new tab. In addition, the <kbd>Ctrl</kbd>+<kbd>PgDn</kbd>/<kbd>PgUp</kbd>/<kbd>Tab</kbd> navigation keys will now work when focus is on a ComboBox. [thanks wkueting]</p>
<p>Fixed the "Limit" option for <a href="lib/GuiControls.htm#Edit">Edit controls</a>, which was broken by v1.0.23. [thanks ranomore]</p>
<p>Fixed <a href="lib/GuiControl.htm#options">GuiControl +/-Options</a> to allow the Check3 style to be added or removed on <a href="lib/GuiControls.htm#CheckBox">Checkboxes</a>. Also, controls are always redrawn when their styles change. [thanks beardboy]</p>
<p>Changed <a href="lib/GuiControls.htm#ComboBox">ComboBoxes</a> so that their g-labels (if any) are launched whenever the user changes the text in the edit portion of the control.</p>
<p>Improved <a href="lib/GuiControls.htm#Picture">Picture controls</a> so that: 1) Icons and cursors can be loaded from .cur, .ani, .ico, .dll, and .exe files; and 2) Width and height can be specified when loading a new image via <a href="lib/GuiControl.htm">GuiControl</a>. If any of your scripts use BackgroundTrans to make an icon transparent, add the word AltSubmit to that control's options. [thanks Rajat]</p>
<p>Added a method to set custom tab stops inside <a href="lib/GuiControls.htm#Edit">Edit controls</a>. [thanks Jason Payam Ahdoot]</p>
<p>Added an "Invert" option for <a href="lib/GuiControls.htm#Slider">Slider</a>, which reverses the low and high ends of the control. [thanks beardboy]</p>
<p>Added sub-command <a href="lib/Gui.htm#Default">Gui N:Default</a>, which changes the default GUI window number of the current thread to N.</p>
<p>Added the <a href="lib/Gui.htm#GuiSize">GuiSize label</a>, which is launched whenever a GUI window is resized, minimized, maximized, or restored.</p>
<p>Added support for drag-and-drop via the <a href="lib/Gui.htm#GuiDropFiles">GuiDropFiles label</a>.</p>

<h2 id="v1.0.23.00">1.0.23 - November 9, 2004</h2>
<p> Changed <a href="Scripts.htm#ahk2exe">compiled scripts</a> to include a blank version info resource. To customize the version info of your compiled scripts, use a utility such as Resource Hacker (freeware) to edit the AutoHotkeySC.bin file. Note that ResHacker will corrupt compiled scripts, which is why only the AutoHotkeySC.bin file should be edited. [thanks Larl]</p>
<p>Improved the $ <a href="Hotkeys.htm#Symbols">hotkey prefix</a> to work on Windows 95/98/Me. It allows a hotkey to send itself, which makes it possible for a hotkey to conditionally perform its original/native-OS function.</p>
<p>Improved <a href="lib/PixelGetColor.htm">PixelGetColor</a> and <a href="lib/PixelSearch.htm">PixelSearch</a> with an option to retrieve colors in RGB vs. BGR format.</p>
<p>Improved <a href="lib/Menu.htm#Show">Menu Show</a> to accept an optional position for the menu. [thanks compuboy_r]</p>
<p>Improved the performance of the <a href="lib/Hotkey.htm">Hotkey</a> command when it turns on/off a hotkey that is already in the right state. [thanks deguix]</p>
<p>Added sub-commands Style and ExStyle to <a href="lib/WinGet.htm">WinGet</a>, which retrieve a window's style and extended style. [thanks ranomore]</p>
<p>Added built-in variables <a href="Variables.htm#ProgramFiles">A_ProgramFiles</a> and <a href="Variables.htm#WinDir">A_WinDir</a> for operating systems that might lack the corresponding environment variables.</p>
<p>Added sub-command <a href="lib/WinSet.htm#Bottom">WinSet Bottom</a>, which sends a window to the bottom of the stack; that is, beneath all other windows. [thanks AntonyB]</p>
<p>Added <code><a href="lib/WinSet.htm">WinSet</a>, Transparent, Off</code>, which completely turns off transparency on a window that was previously transparent. This may help performance. [thanks dijiyd]</p>
<p>Added sub-command <a href="lib/WinSet.htm#TransColor">WinSet TransColor</a>, which can make a window's background transparent on Windows 2000/XP+. This allows the creation of on-screen displays and other visual effects.</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Fixed <a href="lib/Gui.htm#Show">Gui Show</a>: Sometimes the window wouldn't be shown until after the command that followed Gui Show. [thanks Tekl]</p>
<p>Fixed Picture controls that have a border so that the size of the control doesn't increase slightly each time GuiControl is used to load a new picture. [thanks ILL.1]</p>
<p>Fixed Tab control so that when it is hidden or shown, the controls on its current page are also hidden/shown. In addition, some minor keyboard navigation issues were fixed. [thanks Nemroth]</p>
<p>Changed Tab controls so that enabling or disabling them will also enable/disable their sub-controls.</p>
<p>Changed Tab controls to use Classic Theme appearance on Windows XP or later, which makes their background color match that of their sub-controls. [thanks Gre]</p>
<p>Removed the 32 KB limit on the amount of text that can be contained in an Edit control. Windows 9x will be limited to 64 KB and other operating systems to as much as 4 GB. [thanks Bahri]</p>
<p>Improved screen drawing performance when switching pages in a Tab control.</p>
<p>Improved overall GUI performance, especially for windows with a large number of controls.</p>
<p>Added wp+n and hp+n control positioning options, which use the width and height of the previous control.</p>
<p>Added BackgroundTrans option for Text, Picture, and GroupBox controls. It allows other controls behind them to show through.</p>
<p>Added built-in variables <a href="Variables.htm#Gui">A_Gui</a> and <a href="Variables.htm#GuiControl">A_GuiControl</a>, which contain the GUI window number and Control ID responsible for launching the <a href="misc/Threads.htm">current thread</a>. [thanks Rajat]</p>
<p>Added sub-command <a href="lib/GuiControl.htm#Font">GuiControl Font</a>, which changes a control's font.</p>
<p>Added control type <a href="lib/GuiControls.htm#Slider">Slider</a>, which is a sliding bar that the user can move along a vertical or horizontal track.</p>
<p>Added control type <a href="lib/GuiControls.htm#Progress">Progress</a>, which is a dual-color bar typically used to indicate how much progress has been made toward the completion of an operation.</p>
<p>Added control type <a href="lib/GuiControls.htm#Hotkey">Hotkey</a>, which is a box that looks like a single-line edit control but instead accepts a keyboard combination pressed by the user.</p>

<h2 id="v1.0.22.00">1.0.22 - October 26, 2004</h2>
<p> Fixed <a href="lib/ToolTip.htm">ToolTip</a> failing to appear on Windows XP. [thanks Phi and /Torben]</p>
<p>Fixed the left mouse button when it is used as a hotkey: if it displayed a <a href="lib/Menu.htm">pop-up menu</a>, the foreground window was seeing the button as stuck-down after the menu was dismissed. [thanks umek]</p>
<p>Improved <a href="lib/SetKeyDelay.htm">SetKeyDelay</a> with an optional delay between the down-event and up-event of each keystroke.</p>
<p>Improved <a href="lib/GetKeyState.htm">GetKeyState</a>, <a href="lib/KeyWait.htm">KeyWait</a>, <a href="lib/Input.htm">Input</a>, and <a href="Hotkeys.htm">hotkeys</a> to support an explicit virtual key such as vkFF. This is useful for keys that have no name and that produce no visible character when pressed. Unfortunately, all such keys tend to share the same virtual key code (FF); so if you have more than one of them, this method will not be able to tell them apart (except hotkeys, which should use the scNNN method described at the bottom of the <a href="KeyList.htm">key list page</a>).</p>
<p>Improved <a href="lib/FileMoveDir.htm">FileMoveDir</a> to support an optional rename mode, which provides "all or none" behavior. [thanks Tekl].</p>
<p>Added sub-command <a href="lib/WinGet.htm#MinMax">WinGet MinMax</a>, which retrieves -1 if the window is minimized, 1 if it is maximized, or 0 if it is neither.</p>
<p>Added <a href="lib/WinGet.htm#ProcessName">WinGet ProcessName</a>, which retrieves a window's process name. [thanks Wademan]</p>
<p>Added command <a href="lib/Drive.htm">Drive</a>, which ejects/retracts the tray in a CD or DVD drive, or sets a drive's volume label.</p>
<p>Added sub-command <a href="lib/DriveGet.htm#StatusCD">DriveGet StatusCD</a>, which retrieves the media status of a CD or DVD drive.</p>
<p>Added built-in variables <a href="Variables.htm#Screen">A_ScreenWidth</a> and <a href="Variables.htm#Screen">A_ScreenHeight</a>, which contain the width and height of the primary monitor, in pixels.</p>
<p>Added built-in variable <a href="Variables.htm#AhkVersion">A_AhkVersion</a>, which contains the AutoHotkey version number.</p>
<p>Added command <a href="lib/SysGet.htm">SysGet</a>, which retrieves screen resolution, multi-monitor info, the dimensions of system objects, and other system properties. [thanks Gregory F. Hogg of Hogg&rsquo;s Software]</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Fixed Edit controls that have an explicit height (H) that is tall enough to be multi-line: word-wrapping is ON by default, as intended. [thanks Alfredo]</p>
<p>Fixed possible crash (never actually observed) when a window destroys itself, such as via a Quit button.</p>
<p>Fixed <a href="lib/Gui.htm#Show">Gui Show</a> so that the window's previous dimensions are retained if unspecified. [thanks lingoist]</p>
<p>Fixed <a href="lib/Gui.htm#Show">Gui Show</a> so that when called from the tray menu (and perhaps other times), the window will have keyboard focus. [thanks Tekl]</p>
<p>Slightly changed the height of a GroupBox when height is omitted or a row-count is specified. It should now conform better to the current font size. In addition, if no width is specified for a GroupBox, it will be slightly narrower.</p>
<p>Changed <a href="lib/GuiControl.htm#Choose">GuiControl Choose</a> to automatically revert to the ChooseString method if the item-parameter is not numeric.</p>
<p>Improved ListBox to support an optional horizontal scroll bar via the word HScroll in its options.</p>
<p>Improved Picture controls to support many additional image formats such as PNG, TIF, and ICO if the OS supports them. If your OS is older than XP (except Windows 95), you can add support by downloading the free GDI+ extension from <a href="https://www.microsoft.com">Microsoft</a>.</p>
<p>Added sub-command <a href="lib/GuiControl.htm#Text">GuiControl Text</a>, which is the same as the set-contents method except for radio buttons and checkboxes, in which case Param3 is treated as the new text/caption even if it is -1, 0, or 1. [thanks Rajat]</p>
<p>Added new control type: Tab (SysTabControl32), which is a relatively large control containing multiple pages, each of which contains other controls.</p>

<h2 id="v1.0.21.00">1.0.21 - October 12, 2004</h2>
<p> Fixed <a href="Hotstrings.htm">hotstrings</a>: occasionally and randomly they would fail to activate. [thanks Jack Horsfield]</p>
<p>Fixed <a href="lib/Progress.htm">Progress</a> command so that a custom bar color is obeyed on Windows XP+ rather than being overridden by the user's current theme [thanks Gre]. To instead use the current theme's appearance, leave the bar color unspecified.</p>
<p>Fixed <a href="lib/ControlSend.htm">ControlSend</a> of modifier keys (e.g. capital letters and <code class="no-highlight">^{end}</code>) when a script targets one of its own GUI windows or when the keyboard hook is installed. [thanks beardboy &amp; Gregory Punshon]</p>
<p>Fixed <a href="lib/Send.htm">Send</a> command when sending mouse clicks so that the correct CTRL/ALT/SHIFT/WIN key state is in effect. Also, <a href="lib/ControlSend.htm">ControlSend</a> can no longer send mouse clicks since otherwise they would take effect in the window under the mouse cursor.</p>
<p>Fixed <a href="lib/ToolTip.htm">ToolTip</a> so that the tip window can be displayed on non-primary monitors in a multi-monitor system. [thanks Jack Horsfield] </p>
<p>Changed <a href="lib/PixelGetColor.htm">PixelGetColor</a> and Window Spy to retrieve colors in hexadecimal rather than decimal format, which makes it easier to visualize a color based on its blue, green, and red components. This change should not affect existing scripts. [thanks Bobo]</p>
<p>Improved Window Spy with a more useful layout and to show the text of the control under the mouse.</p>
<p>Improved the <a href="lib/Input.htm">Input</a> command to optionally recognize and transcribe modified keystrokes such as <kbd>Ctrl</kbd>+<kbd>A</kbd> through <kbd>Ctrl</kbd>+<kbd>Z</kbd> if they correspond to real ASCII characters. The following example recognizes <kbd>Ctrl</kbd>+<kbd>C</kbd>:</p>
<pre>Transform, CtrlC, Chr, 3  <em>; Store the character for Ctrl-C in the CtrlC var.</em>
Input, OutputVar, L1 M
IfEqual, OutputVar, %CtrlC%, MsgBox, You pressed Control-C.</pre>
<p>Improved <a href="lib/ControlSend.htm">ControlSend</a> so that if a script explicitly specifies modifier up and down events, such as <code class="no-highlight">{Alt down}f{Alt up}</code> rather than <code class="no-highlight">!f</code>, those events will be sent in a way less likely to interfere with the active window. Note: In prior versions, ControlSend did not correctly handle explicit modifier up and down events such as <code class="no-highlight">{Ctrl down}</code> and <code class="no-highlight">{Ctrl up}</code>.</p>
<p>Added Style and ExStyle (extended style) sub-commands to <a href="lib/ControlGet.htm">ControlGet</a>.</p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p>Fixed checkboxes and radio buttons so that they will obey the specified text color even if an overriding Windows XP theme is in effect. However, as a side-effect the controls will revert to the classic-theme appearance whenever a custom text color is specified.</p>
<p>Fixed <a href="lib/GuiControl.htm">GuiControl</a> so that it is possible to make the contents of a control blank. [thanks Rajat]</p>
<p>Fixed cosmetic appearance of the default button. Previously, it sometimes took on the appearance of a normal button.</p>
<p>Changed the appearance of controls and windows throughout the application to use Windows XP visual styles if the current display theme allows them. [thanks Titan]</p>
<p>Changed DropDownList and ComboBox on Windows XP so that if the height is unspecified, the control's drop-list height will take advantage of the amount of desktop height available.</p>
<p>The recognition of the option words and letters for <a href="lib/Gui.htm#Add">Gui Add</a> is now stricter (but 99% of GUI scripts should be unaffected): options must be separated from each other by at least one space or tab, and any options that accept an argument (such as x30 for the x-coordinate) must be followed immediately by that argument, that is, with no whitespace in between.</p>
<p>Reduced the frame thickness around some control types (e.g. Edit) to a more traditional size.</p>
<p>All control types may now have an associated variable. This makes it easier to uniquely identify a control when using <a href="lib/GuiControl.htm">GuiControl</a> and <a href="lib/GuiControlGet.htm">GuiControlGet</a>.</p>
<p>Improved DropDownList, ComboBox, and ListBox to optionally store the position rather than the text of the selected item upon <a href="lib/Gui.htm#Submit">Gui Submit</a> or <a href="lib/GuiControlGet.htm">GuiControlGet</a>.</p>
<p>Added sub-command <a href="lib/Gui.htm#Flash">Gui Flash</a>, which blinks the window's title bar and/or taskbar button. [thanks beardboy]</p>
<p>Added <a href="lib/Gui.htm#Theme">Gui +/-Theme</a>, which allows controls to be created with Classic Theme appearance on Windows XP+.</p>
<p>Added the ability to change an existing control's options and styles via <a href="lib/GuiControl.htm">GuiControl</a>.</p>
<p>Added multi-select option for ListBox via the word Multi in its options.</p>
<p>Added many additional control options and named styles. In addition, any unnamed numerical style may be applied, such as the ones in the <a href="misc/Styles.htm">styles table</a>.</p>

<h2 id="v1.0.20.00">1.0.20 - September 30, 2004</h2>
<p>Fixed commands "<a href="lib/IfIn.htm">if var between/in/contains</a>" so that the second item in the MatchList is not misinterpreted as a command if it happens to match one. [thanks Rajat]</p>
<p>Fixed the hotkey <code>$Tab::</code> (TAB as an unmodified hook hotkey) so that it doesn't: 1) fire when <kbd>Alt</kbd>+<kbd>Tab</kbd> is pressed; 2) prevent <kbd>Alt</kbd>+<kbd>Tab</kbd> from working. [thanks antonyb]</p>
<p>Fixed <a href="lib/MsgBox.htm">MsgBox</a> so that the Timeout parameter can be contained in a variable. [thanks jordi]</p>
<p>Fixed <a href="lib/SetTimer.htm">SetTimer</a> so that 10ms timers will be able to run every 10ms (rather than every 20ms) when SetBatchLines is at its default setting of 10ms.</p>
<p>Fixed <a href="lib/Loop.htm">A_Index</a> so that it doesn't get periodically reset to 1 inside <a href="lib/LoopFile.htm">file-pattern</a> and <a href="lib/LoopReg.htm">registry</a> loops that recurse into subfolders/subkeys.</p>
<p>For anyone using <a href="lib/PostMessage.htm">Post/SendMessage</a> to automate AutoHotkey itself: The IDs of the standard menu items in the tray and main window have been changed: they now begin at 65300 vs. 32789. Please adjust your scripts accordingly.</p>
<p>Version info (which can be seen in Explorer's file-properties dialog) is now omitted from <a href="Scripts.htm#ahk2exe">compiled scripts</a>. This change reflects the fact that scripts are owned by their authors and thus should have as little AutoHotkey association and branding as possible. An author can add custom version info by using a free utility such as ResHacker. [thanks Bobo &amp; Titan]</p>
<p>Increased maximum length of <a href="lib/Menu.htm">menu</a> names and menu items names from 100 to 260. In addition, menus should use slightly less memory now.</p>
<p>Improved the speed of the <a href="lib/Menu.htm#Add">Menu Add</a> command: Scripts whose menus collectively contain thousands of items should now be able to create new menu items at least 100 times faster.</p>
<p>Improved the <a href="lib/Send.htm">Send</a> command to support mouse button and mouse wheel [thanks Wolfgang Reszel (Tekl)]. If any of your scripts use <code>Send {LButton}</code> or similar (probably without effect), please adjust them accordingly.</p>
<p>Added configuration files for EmEditor and MED (contained in the Extras folder). [thanks Wolfgang Reszel (Tekl)]</p>
<p>Added a method to retrieve a list of all controls in a window. Example: <code><a href="lib/WinGet.htm">WinGet</a>, OutputVar, ControlList, A</code></p>
<p><strong>Changes for <a href="lib/Gui.htm">GUI</a>:</strong></p>
<p> Fixed cosmetic appearance of buttons when they are clicked rapidly. [thanks Rajat]</p>
<p>Fixed Picture controls that are used as background for other controls: They will no longer steal mouse clicks unless they have an associated g-label. [thanks Rajat]</p>
<p>Fixed the <a href="lib/Menu.htm">Menu</a> command: if it makes changes to a menu bar, those changes become visible immediately if the GUI window is visible. Also, changing a menu's color back to the default color should now work properly.</p>
<p>Increased maximum number of windows from 5 to 10.</p>
<p>(Might break existing scripts): If a radio group has multiple buttons but only one variable, that variable will assigned the number of the selected radio button (0 if none, 1 for the first, 2 for the second, etc.) [thanks Rajat] If you have any radio groups whose buttons do not all have variables, please adjust them accordingly.</p>
<p>(Might break existing scripts): By default, threads launched as a result of GUI action will now operate upon the window number where the action occurred. Previously, the <a href="lib/Gui.htm">GUI</a> command would assume the number 1 if the window number was not specified. If you have any scripts that use multiple windows, please change them accordingly.</p>
<p>(Might break existing scripts): Scripts that contain the <a href="lib/Gui.htm">GUI</a> command anywhere are automatically single-instance unless the <a href="lib/_SingleInstance.htm">#SingleInstance</a> directive has been used to override that. In addition, GUI scripts are now instantly <a href="lib/_Persistent.htm">persistent</a> rather than becoming so only after a GUI window is created.</p>
<p>Added "underline" option to the <a href="lib/Gui.htm#Font">Gui Font</a> command.</p>
<p>Added +/-Resize as an option to make a window resizable. Example: <code>Gui, +owner +resize</code></p>
<p>Added XS, YS, and Section as options for <a href="lib/Gui.htm#Add">Gui Add</a>. These options allow a window to be divided into sections, each of which can have its own rows and columns of controls. Note: when using a layout editor such as SmartGUI Creator, these options are typically of no use. [thanks Jack Horsfield]</p>
<p>Added built-in variable <a href="Variables.htm#GuiControlEvent">A_GuiControlEvent</a>, which allows double-clicks to be detected for ListBox, Radio, Picture, and Text controls.</p>
<p>Added commands <a href="lib/GuiControl.htm">GuiControl</a> and <a href="lib/GuiControlGet.htm">GuiControlGet</a>, which perform various operations upon individual controls.</p>

<h2 id="v1.0.19.00">1.0.19 - September 16, 2004</h2>
<p>Fixed <a href="Hotstrings.htm">hotstrings</a> and the <a href="lib/Input.htm">Input</a> command to recognize characters produced with <kbd>AltGr</kbd> (<kbd>Ctrl</kbd>+<kbd>Alt</kbd>), such as the @ symbol. [thanks Tekl, jordi, and /Torben]</p>
<p>Fixed <a href="Hotstrings.htm">hotstrings</a> so that caseless characters such as digits do not disqualify an abbreviation from being considered uppercase. For example, if <code>::pt1::pteranodon</code> is a hotstring and you type PT1 (all caps) the replacement will now be in all caps as it should. In addition, other minor changes to the "case conform" mode have been made.</p>
<p>Fixed the <a href="lib/Menu.htm#DeleteAll">Menu DeleteAll</a> sub-command so that it doesn't permanently disable any "sub-sub-menus" indirectly owned by a menu. [thanks compuboy_r]</p>
<p>Fixed sub-command <a href="lib/Process.htm#Priority">Process Priority</a> so that the priority level can be contained in a variable. [thanks Rajat]</p>
<p>Fixed commands that turn on the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a> (such as <a href="lib/Input.htm">Input</a>) so that they will not re-enable suspended hotkeys. [thanks jordi]</p>
<p>Fixed auto-centering of <a href="lib/InputBox.htm">InputBox</a>, <a href="lib/Progress.htm">SplashImage</a>, <a href="lib/Progress.htm">Progress</a>, and <a href="lib/SplashTextOn.htm">SplashTextOn</a>: If the task bar was anchored on the left or top side of the screen, the centering was off by the thickness of the taskbar.</p>
<p>Fixed <a href="lib/WinGetText.htm">WinGetText</a> and <a href="lib/ControlGetText.htm">ControlGetText</a> so that the retrieved text is limited to the maximum size of a variable, which defaults to 64 MB. [thanks hermitress]</p>
<p>Changed <a href="lib/BlockInput.htm">BlockInput</a> so that input blocking is momentarily disabled whenever the <a href="lib/Send.htm">Send</a> command needs to simulate an ALT keystroke. Since there is a slight chance this will break existing scripts that attempt to send ALT while BlockInput is ON, please check and adjust accordingly.</p>
<p>Improved <a href="lib/BlockInput.htm">BlockInput</a> to optionally come on automatically during any of the following commands: <a href="lib/Send.htm">Send</a>, <a href="lib/Send.htm">SendRaw</a>, <a href="lib/MouseMove.htm">MouseMove</a>, <a href="lib/MouseClick.htm">MouseClick</a>, and <a href="lib/MouseClickDrag.htm">MouseClickDrag</a>. [thanks beardboy]</p>
<p>Slightly improved the monitoring and buffering of <a href="Hotkeys.htm">hotkeys</a> (especially joystick) during times when the script is displaying a dialog or is uninterruptible.</p>
<p>Added directive <a href="lib/_MaxMem.htm">#MaxMem</a>, which allows the maximum capacity of each variable to be changed from its default of 64 MB.</p>
<p>Added an option to <a href="lib/Run.htm">Run/RunWait</a> that avoids the display of the warning dialog and the termination of the current thread. [thanks compuboy_r and others who have asked]</p>
<p>Added an option to change the background color of a menu via <code><a href="lib/Menu.htm">Menu</a>, MenuName, Color, ColorValue</code> (has no effect on Windows 95/NT).</p>
<p>Added command <a href="lib/KeyWait.htm">KeyWait</a>, which waits for a key or mouse/joystick button to be released or pressed down.</p>
<p>Added command "<a href="lib/IfIn.htm">if var [not] contains MatchList</a>", which is the same as using <a href="lib/IfInString.htm">IfInString/IfNotInString</a> except that multiple search strings are supported (any one of which will cause a match). [thanks whynot]</p>
<p>Added command <a href="lib/Gui.htm">GUI</a>, which creates and manages windows and controls. Such windows can be used as data entry forms or custom user interfaces. </p>

<h2 id="v1.0.18.00">1.0.18 - August 19, 2004</h2>
<p>Fixed sticking modifier keys (Ctrl, Alt, Shift, and Win) -- at least in some cases. This should help prevent <a href="lib/_UseHook.htm">hook hotkeys</a> from unexpectedly firing when the user isn't even holding down any modifier keys. The fix operates by correcting the hook's modifier state whenever it disagrees with what the OS says it should be.</p>
<p>Fixed mouse button hotkeys: If a script defines LButton as a hotkey, the script's own menus should now operate correctly. Similarly, if a script defines RButton as a hotkey and its subroutine uses <code>MouseClick, right</code>, the tray icon should now respond correctly to a right-click as long as <a href="lib/SetMouseDelay.htm">SetMouseDelay</a> is at the default setting or lower.</p>
<p>Fixed support for diacritic and other characters, which was broken in v1.0.16/17. [thanks jordi]</p>
<p>Fixed some problems with neutral modifier keys (Shift, Control, Alt) that are used as both a prefix and suffix as in this example:</p>
<pre>Shift &amp; CapsLock::MsgBox You pressed CapsLock while holding down a Shift key.
Shift::MsgBox You released a Shift key without having used it to modify another key.</pre>
<p>Fixed <code><a href="lib/CoordMode.htm">CoordMode</a> Caret</code> so that it uses its own setting rather than that of <code>CoordMode ToolTip</code>.</p>
<p>Fixed <a href="Variables.htm#Caret">A_CaretX/Y</a> so that they are always both blank if there is no active window or the caret position could not be determined.</p>
<p>Changed the <a href="lib/Input.htm">Input</a> command so that the user can toggle <kbd>CapsLock</kbd>, <kbd>NumLock</kbd> and <kbd>ScrollLock</kbd> during an invisible Input.</p>
<p>Improved the <a href="lib/_InstallKeybdHook.htm">hook</a>'s handling of neutral modifier keys (Alt, Ctrl, and Shift) to make them more specific to which key (left or right) was actually pressed. This is most likely to affect Windows NT4.</p>
<p>Added command "<a href="lib/IfBetween.htm">if var [not] between value1 and value2</a>", which checks whether a variable's contents are numerically or alphabetically between two values.</p>
<p>Added command "<a href="lib/IfIn.htm">if var [not] in value1,value2,...</a>", which checks whether a variable's contents match one of the items in a list.</p>
<p>Added built-in variable <a href="Variables.htm#ThisMenuItemPos">A_ThisMenuItemPos</a>, which is a number indicating the current position of A_ThisMenuItem within A_ThisMenu.</p>
<p>Added command <a href="lib/Process.htm">Process</a>, which performs one of the following operations on a process: checks if it exists; changes its priority; closes it; waits for it to close. [thanks AutoIt Team] In conjunction with this, the <a href="lib/Run.htm">Run</a> command has been enhanced to optionally retrieve the Process ID of a newly launched program. Also, a window's Process ID can be retrieved with <a href="lib/WinGet.htm">WinGet</a>.</p>

<h2 id="v1.0.17.00">1.0.17 - August 9, 2004</h2>
<p>Fixed <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> security screen and <kbd>Win</kbd>+<kbd>L</kbd> (lock the computer) to prevent sticking keys. Both were partly broken by v1.0.16. [thanks frk]</p>
<p>Fixed <a href="Hotstrings.htm">hotstrings</a> for keyboard layouts that use dead keys -- such as acute (<code class="no-highlight">&acute;</code>), circumflex (<code class="no-highlight">^</code>), and grave (<code class="no-highlight">`</code>) -- so that the keyboard will continue to function properly. [thanks /Torben &amp; Jordi] </p>
<p>Fixed auto-replace <a href="Hotstrings.htm">hotstrings</a> so that end-chars reserved by the <a href="lib/Send.htm">Send</a> command, such as <code class="no-highlight">!{}</code>, are sent as part of the replacement.</p>
<p>Fixed <a href="lib/LoopReg.htm">registry loops</a> so that an entire root key can be recursively searched. [thanks sleepyy35]</p>
<p>Fixed command <a href="lib/Suspend.htm">Suspend</a>, which sometimes permanently disabled all <a href="Hotstrings.htm">hotstrings</a>. [thanks Loneaussie]</p>
<p>Fixed commands <a href="lib/Suspend.htm">Suspend</a> and <a href="lib/Hotkey.htm">Hotkey</a> so that they avoid resetting the state of hotkeys that the user is holding down. [thanks WhiteCloud]</p>
<p>Fixed the <a href="lib/Input.htm">Input</a> command so that a match-list contained in a variable will not be ignored if its first character is a comma. [thanks Rajat]</p>
<p>Changed the <a href="lib/Input.htm">Input</a> command's <em>MatchList</em> so that two consecutive commas results in a single literal comma. For example, the following would produce a single literal comma at the end of string1: <code class="no-highlight">string1,,,string2</code>.</p>
<p>Added sub-command <a href="lib/Transform.htm#Deref">Transform Deref</a>, which expands variable references and escape sequences contained inside other variables. [thanks various]</p>
<p>Added built-in variable <a href="Variables.htm#EndChar">A_EndChar</a>, which is the ending character pressed by the user to trigger the most recent non-auto-replace <a href="Hotstrings.htm">hotstring</a>. If no ending character was required (due to the <a href="Hotstrings.htm#Asterisk">* option</a>), this variable will be blank.</p>
<p>Added built-in variables <a href="Variables.htm#Caret">A_CaretX</a> and <a href="Variables.htm#Caret">A_CaretY</a>, which are the current X and Y coordinates of the caret (text insertion point).</p>

<h2 id="v1.0.16.00">1.0.16 - July 15, 2004</h2>
<p><span style="color: #FF0000">Possible script-breaking changes:</span> Although 99% of scripts should be unaffected, this top section lists all the changes that might be a problem. I tried to get as many of them into this release as possible to minimize the need for this in the future.</p>
<p>Changed default <a href="lib/SetBatchLines.htm">BatchLines</a> from 10 to 10ms, which makes lengthy operations -- such as <a href="lib/Loop.htm">loops</a> that have many iterations -- run much faster. The large majority of scripts should continue to function properly. However, if you want 100% compatibility with the prior version of AutoHotkey, add <code>SetBatchLines 10</code> to the top of any script that does not already use the <a href="lib/SetBatchLines.htm">SetBatchLines</a> command.</p>
<p>Changed scripts that use hotkeys, hotstrings, or <a href="lib/_Persistent.htm">#Persistent</a> so that <a href="lib/_SingleInstance.htm">#SingleInstance</a> is automatically implied. Use <code>#SingleInstance Off</code> to override this.</p>
<p>Changed the <a href="lib/Input.htm">Input</a> command so that <kbd>Enter</kbd> is seen as the more-appropriate linefeed (`n) rather than carriage return (`r). This affects the contents of <em>OutputVar</em> and <em>MatchList</em>. Please change your scripts accordingly.</p>
<p>Changed <a href="lib/Run.htm">Run/RunWait</a> so that they will launch non-EXE files (such as documents), using the default verb rather than "open". Since the default verb is usually "open", this shouldn't affect most existing scripts.</p>
<p><span style="color: #FF0000">(normal changes below this point)</span></p>
<p>Fixed <a href="lib/Run.htm">Run/RunWait</a> of .lnk files (shortcuts). [thanks ealerner]</p>
<p>Fixed <a href="lib/StringLower.htm">StringUpper/StringLower</a> so that they work on accented letters and other letters whose ASCII value is above 127.</p>
<p>Fixed <a href="lib/Progress.htm">Progress</a> so that the W (window width) option works again.</p>
<p>Fixed <kbd>Shift</kbd>+<kbd>Win</kbd> hotkeys that used the <a href="lib/Send.htm">Send</a> command: In some cases, extra <kbd>Shift</kbd> events were being generated, which interfered with the ability to use a hotkey two or more times in a row. [thanks Jabberwock]</p>
<p>Fixed ambiguity with <code>`::</code> when it's used as part of a <a href="Hotkeys.htm">hotkey</a> rather than literally in a command. [thanks Rajat]</p>
<p>Fixed InputVars that dynamically resolve to the names of environment variables. Sometimes the value was not being fetched from the environment [thanks Samlii]. Example:</p>
<pre>EnvVar = SystemRoot
StringTrimLeft, OutputVar, %EnvVar%, 0</pre>
<p>Fixed <kbd>Alt</kbd> so that if it is itself a hotkey that fires on key-down, keys sent by the <a href="lib/Send.htm">Send</a> command will not be modified by <kbd>Alt</kbd>. [thanks Wade]</p>
<p>Fixed <a href="lib/LoopFile.htm">A_LoopFileDir</a> to be blank for files contained in the root folder of a relative-path search.</p>
<p>Fixed the <a href="lib/Input.htm">Input</a> command so that having more than 1024 items in the match-list does not cause a memory problem. In addition, activating the <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> security screen no longer causes it to think that <kbd>Ctrl</kbd> and <kbd>Alt</kbd> are stuck down. [thanks frk and beardboy]</p>
<p>Changed the <a href="lib/Input.htm">Input</a> command so that <kbd>Ctrl</kbd>+<kbd>Backspace</kbd> and other modified backspaces are ignored. Only plain backspace is used as an "undo" keystroke.</p>
<p>Changed <a href="lib/Menu.htm">custom menu items</a> so that they cannot interrupt the <a href="lib/OnExit.htm">OnExit</a> subroutine (as documented). In addition, custom menu items now behave more like hotkeys in terms of buffering and their ability to interrupt other <a href="misc/Threads.htm">threads</a>.</p>
<p>Increased max size of each <a href="Variables.htm">variable</a> from 16 to 64 MB (this does not increase the memory used by scripts). This can be made a configurable option if anyone needs it.</p>
<p>It is now possible to use a literal pair of colons by <a href="misc/EscapeChar.htm">escaping</a> it, e.g. <code class="no-highlight">`::</code>.</p>
<p><a href="KeyList.htm#SpecialKeys">Scan code prefix keys</a> are now possible, e.g. <code>SC118 &amp; Enter::MsgBox</code>. [thanks Rajat]</p>
<p>Improved <a href="lib/Progress.htm">SplashImage</a>:</p>
<ul>
  <li>"Keep aspect ratio" can be achieved by specifying -1 for either ZW (object width) or ZH (object height). [thanks MikeG]</li>
  <li>The image is fully redrawn when you drag another window across it (prevents artifacts).</li>
  <li>The image does not "flash" while the user is resizing the window.</li>
</ul>
<p>Improved <a href="lib/ControlClick.htm">ControlClick</a> so that a specific X and Y coordinate within the control can be clicked. [thanks Beastmaster]</p>
<p>Added support for the AutoIt v2 command HideAutoItWin, which does the same thing as <code><a href="lib/Menu.htm">Menu</a>, Tray, Icon|NoIcon</code>.</p>
<p>Added support for <a href="misc/Threads.htm">thread priority</a>, which determines whether a thread can interrupt (or be interrupted by) other threads. The following commands support setting the priority: <a href="lib/Hotkey.htm">Hotkey</a>, <a href="lib/Menu.htm">Menu</a>, <a href="lib/SetTimer.htm">SetTimer</a>, <a href="lib/_Hotstring.htm">#Hotstring</a>, and <a href="lib/Thread.htm">Thread</a> (sets the current thread's priority). In addition, <a href="Hotstrings.htm">hotstrings</a> can be individually assigned a priority when they are defined. </p>
<p>Added commands <a href="lib/Send.htm">SendRaw</a> and <a href="lib/ControlSend.htm">ControlSendRaw</a>, which send keystrokes exactly as they appear rather than translating {Enter} to <kbd>Enter</kbd>, ^c to <kbd>Ctrl</kbd>+<kbd>C</kbd>, etc.</p>
<p>Added <a href="Variables.htm#BuiltIn">built-in variables</a> for month name (A_MMMM and A_MMM) and day name (A_DDDD and A_DDD). In addition, A_Year may now be optionally referred to as A_YYYY, A_Mon as A_MM, and A_MDay as A_DD.</p>
<p>Added built-in <a href="Hotstrings.htm">hotstrings and auto-replace</a>. This is a fairly major feature and due to its variety of uses, it will probably be refined in the coming weeks based on your ideas and feedback.</p>

<h2 id="v1.0.15.00">1.0.15 - June 29, 2004</h2>
<p>Fixed <code><a href="lib/Menu.htm">Menu</a>, MyMenu, Show</code> so that the menu can always be canceled by clicking outside of it. [thanks Rajat]</p>
<p>Fixed the <a href="lib/Progress.htm">Progress</a> command so that a window will be created even if no options are specified.</p>
<p>Fixed <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> on Windows XP systems that have been configured to show the security screen instead of the task manager: <kbd>Ctrl</kbd> and <kbd>Alt</kbd> should never be stuck down upon returning. [thanks frk]</p>
<p>Fixed auto-centering of <a href="lib/InputBox.htm">InputBox</a> window, which was off slightly due to not taking the task bar into account.</p>
<p>Relaxed the restrictions on the following commands so that they can run in their simplified parameter mode even when used in a subroutine called from their parent loop's body: RegRead/Write/Delete, FileAppend, FileGet/SetAttrib, FileGet/SetTime, FileGetSize/Version.</p>
<p>A compiled script can now be decompiled (if you know the password) via Exe2Ahk. [thanks Jon Bennett]</p>
<p>Renamed two options in the <a href="lib/Progress.htm">Progress</a> command: In your scripts, rename ZC (bar color) to CB, and ZB (bar height) to ZH.</p>
<p>Improved the <a href="lib/Progress.htm">Progress</a> command:</p>
<ul>
  <li>Specify font name, size, weight, and color.</li>
  <li>Specify window background color. [thanks Rajat &amp; beardboy]</li>
  <li>Specify bar thickness and color.</li>
  <li>Automatic window height (if unspecified).</li>
  <li>Better control over margins, border, and layout. [thanks Rajat]</li>
  <li>Have just a naked progress bar with no window visible around it.</li>
  <li>Omit the bar entirely to display text-only in a chosen font/color/size (a good alternative to <a href="lib/SplashTextOn.htm">SplashText</a>).</li>
</ul>
<p>Improved <a href="lib/SplashTextOn.htm">SplashTextOn</a> and <a href="lib/Progress.htm">Progress</a> so that their windows are not hidden when the main window is minimized.</p>
<p>Improved <a href="lib/ToolTip.htm">ToolTip</a> so that more than one tooltip window can be created. [thanks Rajat]</p>
<p>Improved <a href="lib/FileGetTime.htm">FileGetTime</a> and <a href="lib/FileGetSize.htm">FileGetSize</a> so that they work on files that are in use, and so that they don't change the file's last access time.</p>
<p>Improved <a href="lib/StringMid.htm">StringMid</a> to optionally extract characters to the left of the specified position. [thanks Rajat]</p>
<p>Added text-to-HTML conversion via <a href="lib/Transform.htm#HTML">Transform HTML</a>. It translates characters whose ASCII values are above 127 to their HTML names (e.g. <code class="no-highlight">&pound;</code> becomes <code class="no-highlight">&amp;pound;</code>). In addition, the four characters <code class="no-highlight">"&amp;&lt;&gt;</code> are translated to <code class="no-highlight">&amp;quot;&amp;amp;&amp;lt;&amp;gt;</code>. Finally, each linefeed (<code class="no-highlight">`n</code>) is translated to <code class="no-highlight">&lt;br&gt;`n</code> (i.e. <code class="no-highlight">&lt;br&gt;</code> followed by a linefeed).</p>
<p>Added command <a href="lib/ControlGetPos.htm">ControlGetPos</a>. [thanks Jerry]</p>
<p>Added command <a href="lib/SplitPath.htm">SplitPath</a>, which separates a file name into its name, directory, extension, and drive.</p>
<p>Added command <a href="lib/Progress.htm">SplashImage</a>, which displays a GIF, JPG, or BMP image with optional accompanying text.</p>

<h2 id="v1.0.14.00">1.0.14 - June 17, 2004</h2>
<p>Improved Window Spy so that it always reports the correct control names in multi-pane (tabbed) dialogs. In addition, the control whose center is closest to the cursor will now take precedence when there are overlapping controls.</p>
<p>Improved <a href="lib/MouseGetPos.htm">MouseGetPos</a> to optionally retrieve the name of the control under the cursor. [thanks jamestr]</p>
<p>Improved <a href="lib/FileSelectFile.htm">FileSelectFile</a> to optionally present a Save button instead of an Open button.</p>
<p>Improved <a href="lib/ToolTip.htm">ToolTip</a> so that it never blocks the mouse cursor when its coordinates are unspecified.</p>
<p>Improved the <a href="lib/Input.htm">Input</a> command to support shifted end-keys (typically punctuation marks such as <code class="no-highlight">:!?@</code>). If you have any scripts that specify non-alphabetic end-keys that have shifted counterparts (e.g. semicolon and colon), they may need to be adjusted slightly.</p>
<p>Improved "<a href="lib/IfIs.htm">if var is [not] type</a>" to support the following types: lower, upper, and xdigit.</p>
<p>Added <a href="Scripts.htm#cmd">command line parameter</a> /ErrorStdOut, which sends any syntax error that prevents a script from launching to stdout rather than displaying a dialog. This allows fancy editors such as Scite and EditPlus to jump to the offending line. The new command <a href="lib/_ErrorStdOut.htm">#ErrorStdOut</a> does the same thing, but since it would have to be added to every script, it's usually better to set up your editor to use the command line parameter. [thanks Jack Horsfield &amp; JdeB]</p>
<p>Added support for sending keys that have non-standard scan codes. Use <a href="lib/Send.htm#vk">Send {vkXXscYYY}</a>. [thanks various]</p>
<p>Added command <a href="lib/Progress.htm">Progress</a>, which displays one or more progress bar windows. [thanks AutoIt3 team]</p>

<h2 id="v1.0.13.00">1.0.13 - June 10, 2004</h2>
<p>Fixed <a href="lib/_InstallKeybdHook.htm">hook hotkeys</a> that used a keyboard prefix but a mouse button suffix when the prefix was also a suffix [broken in v1.0.12 -- thanks jamestr]. Example:<br></p>
<pre>$a::Send, a
a &amp; LButton::Send, b</pre>
<p>Fixed interference among multiple scripts using the <a href="lib/_InstallKeybdHook.htm">hooks</a> simultaneously.</p>
<p>Fixed <a href="lib/Send.htm#asc">Send {Asc nnnnn}</a> so that it allows codes beyond 255 (Unicode) to be sent. [thanks Aj]</p>
<p>Changed: A script will only assume <kbd>Ctrl</kbd>/<kbd>Alt</kbd>/<kbd>Shift</kbd>/<kbd>Win</kbd> are permanently down if it put them that way. [thanks jamestr &amp; Jon]</p>
<p>Improved <a href="lib/SplashTextOn.htm">SplashTextOn</a> so that its text is updated more quickly. [thanks Sds]</p>
<p>Improved the <a href="lib/Send.htm">Send</a> command's support for non-English letters, symbols, and keyboards. If this applies to you and you notice any problems with this version, please let me know. The following are some of the characters supported: <code class="no-highlight">&euro;&#129;&sbquo;&fnof;&bdquo;&hellip;&dagger;&Dagger;&circ;&permil;&Scaron;&lsaquo;&OElig;&#141;&#381;&#143;&#144;&lsquo;&rsquo;&ldquo;&rdquo;&bull;&ndash;&mdash;&tilde;&trade;&scaron;&rsaquo;&oelig;&#157;&#382;&Yuml;&nbsp;&iexcl;&cent;&pound;&curren;&yen;&brvbar;&sect;&uml;&copy;&ordf;&laquo;&not;&shy;&reg;&macr;&deg;&plusmn;&sup2;&sup3;&acute;&micro;&para;&middot;&cedil;&sup1;&ordm;&raquo;&frac14;&frac12;&frac34;&iquest;&Agrave;&Aacute;&Acirc;&Atilde;&Auml;&Aring;&AElig;&Ccedil;&Egrave;&Eacute;&Ecirc;&Euml;&Igrave;&Iacute;&Icirc;&Iuml;&ETH;&Ntilde;&Ograve;&Oacute;&Ocirc;&Otilde;&Ouml;&times;&Oslash;&Ugrave;&Uacute;&Ucirc;&Uuml;&Yacute;&THORN;&szlig;&agrave;&aacute;&acirc;&atilde;&auml;&aring;&aelig;&ccedil;&egrave;&eacute;&ecirc;&euml;&igrave;&iacute;&icirc;&iuml;&eth;&ntilde;&ograve;&oacute;&ocirc;&otilde;&ouml;&divide;&oslash;&ugrave;&uacute;&ucirc;&uuml;&yacute;&thorn;&yuml;</code><br>
(Use <a href="lib/Send.htm#asc">Send {Asc nnnnn}</a> to create Unicode characters whose ANSI values are greater than 255)</p>
<p>Improved the <a href="lib/Send.htm">Send</a> command by further limiting its ability to interfere with hotkeys that are being held down by the user to auto-repeat them (only helps <a href="lib/_UseHook.htm">hook hotkeys</a>). [thanks jamestr &amp; Jon]</p>
<p>Improved the <a href="lib/Menu.htm">Menu</a> command to optionally use <a href="misc/ErrorLevel.htm">ErrorLevel</a> instead of displaying runtime errors.</p>
<p>Added the ability to change the script's icon while it's running. This affects both the tray and <a href="lib/InputBox.htm">InputBox</a> icons. Use <code class="no-highlight"><a href="lib/Menu.htm">Menu</a>, Tray, Icon, FileName [, IconNumber]</code>.</p>
<p>Added the ability to change the tray icon's tooltip via <code class="no-highlight"><a href="lib/Menu.htm">Menu</a>, Tray, Tip [, NewText]</code> [thanks beardboy]</p>
<p>Added built-in variables <a href="Variables.htm#ThisMenuItem">A_ThisMenuItem</a> and <a href="Variables.htm#ThisMenu">A_ThisMenu</a>, which correspond to the most recently launched custom menu item.</p>
<p>Added built-in variables <a href="Variables.htm#Now">A_Now</a> and <a href="Variables.htm#NowUTC">A_NowUTC</a>, which contain the current time in <a href="lib/FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a> format.</p>
<p>Added the following <a href="Variables.htm#BuiltIn">built-in variables</a>, which contain the current states of their associated commands: A_TitleMatchMode, A_TitleMatchModeSpeed, A_DetectHiddenWindows, A_DetectHiddenText, A_AutoTrim, A_StringCaseSense, A_FormatInteger, A_FormatFloat, A_KeyDelay, A_WinDelay, A_ControlDelay, A_MouseDelay, A_DefaultMouseSpeed, A_IconHidden, A_IconTip, A_IconFile, and A_IconNumber.</p>
<p>Added command <a href="lib/OnExit.htm">OnExit</a>, which specifies a subroutine to run when the script exits. In addition, the built-in variable <a href="Variables.htm#ExitReason">A_ExitReason</a> has been added, which contains the reason the script is being asked to terminate (e.g. Logoff). [thanks beardboy]</p>
<p>Added command <a href="lib/Sort.htm">Sort</a>, which arranges a variable's contents in alphabetical or numerical order.</p>
<p>Added the following <a href="lib/Menu.htm">menu</a> features:</p>
<ul>
  <li>Any number of custom menus can be created.</li>
  <li>Such menus can be shown as a popup at the position of the mouse cursor (e.g. via hotkey).</li>
  <li>Such menus can be a submenu inside another menu, including the tray menu.</li>
</ul>

<h2 id="v1.0.12.00">1.0.12 - June 1, 2004</h2>
<p>Fixed the script compiler (<a href="Scripts.htm#ahk2exe">ahk2exe</a>) so that it will see <a href="lib/FileInstall.htm">FileInstall</a> commands even if they are on the same line as an IF command as in this example: <code>IfMsgBox, Yes, FileInstall, ...</code> [thanks Rajat]</p>
<p>Fixed the ExcludeText parameter of all windowing commands. Previously, it didn't do much at all.</p>
<p>Fixed some problems involving rare usages of a key/button as both a hotkey prefix and suffix. In the following example, <kbd>A</kbd> did not repeat when held down. In addition, the <code>$^a::</code> hotkey would fire on key-up when it should have fired on key-down:</p>
<pre>~a &amp; b::MsgBox "B" was pressed while "A" was held down.
$^a::MsgBox ^a</pre>
<p>Fixed non-suppressed prefix keys that are also used as modified suffixes (rare): their up-events were being incorrectly suppressed as in this example: [thanks Rajat]</p>
<pre>~!LButton::ToolTip, clicked
~LButton &amp; RButton::MsgBox The right button was clicked while the left button was held down.</pre>
<p>Fixed composite hotkeys that use a neutral (non-left/right specific) prefix such as <code>Control &amp; LShift::</code>. In addition, neutral suffixes are now supported, e.g. <code>AppsKey &amp; Control::</code>.</p>
<p>Fixed the wrong hotkey firing when a key was physically pressed or held down during a <a href="lib/Send.htm">Send</a> operation (very rare even then). This fix only works for <a href="lib/_InstallKeybdHook.htm">hook hotkeys</a>.</p>
<p>Changed for Windows NT4 only: <kbd>Ctrl</kbd>/<kbd>Alt</kbd>/<kbd>Win</kbd>/<kbd>Shift</kbd> are handled more specifically as left or right rather than neutral, which may improve support for some types of <a href="lib/_InstallKeybdHook.htm">hook hotkeys</a>.</p>
<p>Improved the <a href="lib/Hotkey.htm">Hotkey</a> command to optionally toggle a hotkey to its opposite state (enabled or disabled). Some optimizations were also done to this command. [thanks beardboy]</p>
<p>Improved <a href="lib/MouseGetPos.htm">MouseGetPos</a> to optionally retrieve the unique ID number of the window under the mouse cursor. This ID number can be used in the WinTitle parameter of all windowing commands by preceding it with the string <code class="no-highlight">ahk_id</code>.</p>
<p>Added command <a href="lib/WinGet.htm">WinGet</a>, which retrieves the unique ID number for a window, or finds all the windows that match the specified criteria.</p>

<h2 id="v1.0.11.00">1.0.11 - May 25, 2004</h2>
<p>Fixed <a href="lib/FileSelectFile.htm">FileSelectFile</a> so that it doesn't change the script's working directory (<a href="Variables.htm#WorkingDir">%A_WorkingDir%</a>). [thanks Jon]</p>
<p>Fixed <a href="lib/SoundPlay.htm">SoundPlay</a>, which was sometimes causing a script to hang during <a href="lib/Exit.htm">Exit</a> or <a href="lib/Reload.htm">Reload</a> [thanks jamestr &amp; Larry Keys]</p>
<p>Fixed the fact that numbers with a leading zero would sometimes be interpreted as octal (base-8).</p>
<p>Fixed a rare sticking of <kbd>Win</kbd> and <kbd>Alt</kbd> when more than one script was using the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a> simultaneously.</p>
<p>Fixed a bug in <a href="lib/LoopParse.htm">parsing loops</a> that occurred only when the delimiter list was empty but the omit-list was not. [thanks Beastmaster]</p>
<p>Fixed <u>for Windows NT only</u>: <a href="lib/GetKeyState.htm">GetKeyState</a> and the fact that the <a href="lib/Send.htm">Send</a> command wasn't releasing the hotkey's own modifiers when it should. [thanks beardboy]</p>
<p>Changed <a href="lib/Loop.htm">Loops</a> so that a variable containing a floating point number can be used. Example: <code>Loop, %MyFloat%</code></p>
<p>Updated the help file to indicate that the various control commands are affected by <a href="lib/SetTitleMatchMode.htm">SetTitleMatchMode</a> when searching by the control's name rather than its class + sequence number.</p>
<p>Improved <a href="lib/MouseMove.htm">MouseMove</a>, <a href="lib/MouseClick.htm">MouseClick</a>, and <a href="lib/MouseClickDrag.htm">MouseClickDrag</a> to optionally move the cursor relative to its current position. [thanks Rajat]</p>
<p>Added mode 3 (exact match) to <a href="lib/SetTitleMatchMode.htm">SetTitleMatchMode</a>. [thanks Jack Horsfield]</p>
<p>Added command <a href="lib/SetWorkingDir.htm">SetWorkingDir</a>, which changes the script's working directory (<a href="Variables.htm#WorkingDir">%A_WorkingDir%</a>).</p>
<p>Added command <a href="lib/WinGetClass.htm">WinGetClass</a>, which retrieves a window's class name. [thanks compuboy_r]</p>
<p>Added command <a href="lib/Transform.htm">Transform</a>, which performs miscellaneous math functions and tasks such as ASCII conversion and bitwise operations. [thanks Rajat]</p>
<p>Added command <a href="lib/Hotkey.htm">Hotkey</a>, which creates, modifies, enables, or disables a hotkey while the script is running. [thanks various]</p>

<h2 id="v1.0.10.00">1.0.10 - May 11, 2004</h2>
<p>Fixed all the windowing commands so that they can act upon windows that lack a title. [thanks Rajat]</p>
<p>Fixed: If a script had exactly one <a href="lib/SetTimer.htm">timer</a>, and it turned itself off during a <a href="lib/Sleep.htm">Sleep</a> or other delay, the script would sleep forever. [thanks beardboy]</p>
<p>Fixed ambiguity between variables and commands. The first word of a line such as the following will now be interpreted as a variable rather than a command: <code>Input = String</code></p>
<p>Fixed <a href="lib/_Persistent.htm">#Persistent</a> so that it works on all types of scripts.</p>
<p>Fixed <code><a href="lib/ControlGet.htm">ControlGet</a>, OutputVar, Line, 1</code> and <code><a href="lib/Control.htm">Control</a>, Choose, 1</code>.</p>
<p>Fixed some problems with mouse hotkeys in scripts that don't use the keyboard hook.</p>
<p>Fixed delays of length 0 to be as long as they were in v1.0.08. This affects commands such as <a href="lib/SetWinDelay.htm">SetWinDelay</a> and <a href="lib/SetControlDelay.htm">SetControlDelay</a>.</p>
<p>Fixed <a href="lib/ControlSetText.htm">ControlSetText</a> so that the Control parameter can be left blank.</p>
<p>Customized AutoScriptWriter for AutoHotkey. It now uses <a href="lib/MouseClick.htm">MouseClick</a> vs. LeftClick, uses accent vs. backslash as its escape character, and saves files with the .ahk extension. [thanks Larry Keys]</p>
<p>Improved the tilde (~) hotkey modifier so that it works with prefix keys. For example, if <code>~RButton &amp; C::Run, Calc</code> is a hotkey, the right mouse button will exhibit its normal function rather than doing nothing. [thanks Riccardo]</p>
<p>Improved <a href="lib/IniDelete.htm">IniDelete</a> so that the Key can be omitted to delete an entire section. [thanks beardboy &amp; Atomhrt]</p>
<p>Improved <a href="lib/_SingleInstance.htm">#SingleInstance</a> to optionally ignore attempts to launch a script that is already running. [thanks Rajat]</p>
<p>Improved <a href="lib/ListLines.htm">ListLines</a> to show 200 vs. 50 lines and to show the elapsed time between lines. [thanks beardboy]</p>
<p>Improved <a href="lib/MouseClick.htm">MouseClick</a>, <a href="lib/MouseClickDrag.htm">MouseClickDrag</a>, and <a href="lib/ControlClick.htm">ControlClick</a> to support the 4th and 5th mouse buttons and the turning of the mouse wheel. [thanks skrommel]</p>
<p>Added built-in variable <a href="Variables.htm#Cursor">A_Cursor</a>, which contains the name of the mouse cursor currently being displayed. [thanks AutoIt3 team &amp; mgetlik]</p>
<p>Added built-in variable <a href="Variables.htm#IsAdmin">A_IsAdmin</a>, which contains 1 if the current user has admin privileges or 0 otherwise. [thanks AutoIt3 team &amp; jpk]</p>
<p>Added built-in variables <a href="Variables.htm#IPAddress">A_IPAddress1, 2, 3, and 4</a>, which contain the IP addresses of the computer's first four network adapters. [thanks AutoIt3 team &amp; Rajat]</p>
<p>Added command <a href="lib/CoordMode.htm">CoordMode</a>, which allows screen (absolute) vs. relative coordinates to be used for any of following groups of commands: Mouse (<a href="lib/MouseMove.htm">Move</a>, <a href="lib/MouseClick.htm">Click</a>, <a href="lib/MouseClickDrag.htm">Drag</a>, <a href="lib/MouseGetPos.htm">GetPos</a>), Pixel (<a href="lib/PixelGetColor.htm">GetColor</a>, <a href="lib/PixelSearch.htm">Search</a>), and <a href="lib/ToolTip.htm">ToolTip</a>. Also, Window Spy now shows both relative and screen coordinates. [thanks to various]</p>
<p>Added command <a href="lib/DriveGet.htm">DriveGet</a>, which retrieves various information about the computer's drives. [thanks AutoIt3 team &amp; Rajat]</p>
<p>Added command <a href="lib/TrayTip.htm">TrayTip</a>, which displays a balloon message window near the tray icon.</p>
<p>Added command <a href="lib/Input.htm">Input</a>, which waits for the user to type a string. [thanks to various]</p>
<p>Added support for joystick hotkeys. In addition, <a href="lib/GetKeyState.htm">GetKeyState</a> can retrieve the state of joystick buttons, axis positions, and other info. See the <a href="KeyList.htm">key list</a> for details. [thanks compuboy_r &amp; Rajat]</p>

<h2 id="v1.0.09.00">1.0.09 - April 27, 2004</h2>
<p>Fixed <a href="lib/FileSelectFile.htm">FileSelectFile</a> on Windows 95/98/Me/NT (it didn't work at all). [thanks Mike Griffin]</p>
<p>Fixed <a href="lib/Run.htm">Run</a> &amp; <a href="lib/Run.htm">RunWait</a> on Windows 95/98/Me: They would sometimes incorrectly report a failure.</p>
<p>Fixed <a href="Scripts.htm#ahk2exe">compiled scripts</a> having their custom icons overridden in the tray on Windows 95/98/NT/2000. [thanks beardboy]</p>
<p>Fixed the tray menu checkmarks for Pause and Suspend, which didn't work in <a href="Scripts.htm#ahk2exe">compiled scripts</a>.</p>
<p>Fixed <a href="lib/PostMessage.htm">PostMessage/SendMessage</a> so that they send to the specified control rather than always to the parent window.</p>
<p>Fixed <a href="Hotkeys.htm">hotkey subroutines</a> that cause a runtime error so that they aren't disabled after the error.</p>
<p>Fixed a few specific types of scripts: they would sometimes halt without cause. [thanks Beastmaster]</p>
<p>Fixed <a href="lib/InputBox.htm">InputBox</a> so that <a href="misc/ErrorLevel.htm">ErrorLevel</a> is correctly set even if multiple input boxes exist simultaneously and are dismissed out of order (rare).</p>
<p>Changed <a href="lib/InputBox.htm">InputBox</a> so that the buttons are the same size, which makes the window resize more evenly. [thanks beardboy &amp; Rajat]</p>
<p>Removed the "Hook is already installed" and "Hook is not supported (Win9x)" warning messages because the <a href="lib/_InstallKeybdHook.htm">hooks</a> can be installed by more than one script without a problem.</p>
<p>Improved <a href="lib/_SingleInstance.htm">#SingleInstance</a> with an optional FORCE parameter that skips the warning dialog. [thanks beardboy]</p>
<p>Improved <a href="lib/Send.htm">Send</a> so that:</p>
<ul>
  <li>it obeys <a href="lib/_HotkeyModifierTimeout.htm">#HotkeyModifierTimeout</a> even when not called from a <a href="Hotkeys.htm">hotkey subroutine</a> (e.g. called from a <a href="lib/SetTimer.htm">timer</a>);</li>
  <li>sending a modifier key such as <code class="no-highlight">{Ctrl}</code> avoids temporarily adjusting the state of other modifier keys;</li>
  <li>sending a modifier key that is left/right specific such as <code class="no-highlight">{RCtrl}</code> better conforms to expected behavior;</li>
  <li>modifier keys such as <code class="no-highlight">{LShift down}</code> and <code class="no-highlight">{Alt down}</code> cause the key to stay down even after the <a href="lib/Send.htm">send</a> is over.</li>
</ul>
<p>Improved the <a href="lib/MouseClick.htm">mouse click</a> commands to accept just the first letter of the button name (L/R/M). [thanks Rajat]</p>
<p>Improved the tray icon by having it recreated whenever Explorer crashes.</p>
<p>Improved <a href="lib/InputBox.htm">InputBox</a> with an optional timeout as well as a default string for the dialog's edit field. [thanks Beastmaster]</p>
<p>Improved <a href="lib/FileSelectFile.htm">FileSelectFile</a> to optionally provide a default filename in the dialog's edit field. [thanks Beastmaster]</p>
<p>Improved <a href="lib/FileSelectFolder.htm">FileSelectFolder</a> to optionally provide an edit field for the user to type the name of a folder.</p>
<p>Improved <a href="lib/LoopParse.htm">parsing loops</a> with built-in handling for CSV (comma separated value) format. [thanks Robert Yaklin]</p>
<p>Improved the security of <a href="Scripts.htm#ahk2exe">compiled scripts</a>, which closes some loopholes that allowed the source code to be viewed. [thanks Rajat]</p>
<p>Improved <a href="lib/StringGetPos.htm">StringGetPos</a> so that it is able to find a match other than the first. [thanks Robert Yaklin]</p>
<p>Added an index to the help file. [thanks Rajat]</p>
<p>Added syntax and cliptext files for EditPlus to the Extras folder. [thanks Mike Griffin]</p>
<p>Added directive <a href="lib/_Persistent.htm">#Persistent</a>, which keeps a non-hotkey script running until <a href="lib/ExitApp.htm">ExitApp</a> is encountered (useful for scripts that contain only <a href="lib/SetTimer.htm">timers</a> or <a href="lib/Menu.htm">custom menus</a>).</p>
<p>Added the ability to show/hide the tray icon <a href="lib/Menu.htm">while the script is running</a>. [thanks beardboy]</p>
<p>Added an <a href="lib/Menu.htm">option</a> that allows the main window of a <a href="Scripts.htm#ahk2exe">compiled script</a> to become accessible. [thanks beardboy]</p>
<p>Added support for window class names to all windowing commands. Window Spy now reports the WinTitle you should specify to use a window's class. [thanks Rajat]</p>
<p>Added commands <a href="lib/ControlMove.htm">ControlMove</a>, <a href="lib/Control.htm">Control</a>, and <a href="lib/ControlGet.htm">ControlGet</a>, which retrieve and change various attributes of a control. [thanks AutoIt3 Team &amp; Rajat]</p>
<p>Added commands <a href="lib/FileRecycle.htm">FileRecycle</a> and <a href="lib/FileRecycleEmpty.htm">FileRecycleEmpty</a>. [thanks AutoIt3 Team &amp; Rajat]</p>
<p>Added command <a href="lib/ToolTip.htm">ToolTip</a>. [thanks AutoIt3 Team &amp; Rajat]</p>

<h2 id="v1.0.08.00">1.0.08 - April 15, 2004</h2>
<p>Fixed a small memory leak in <a href="lib/Run.htm">Run</a> and <a href="lib/Run.htm">RunWait</a>.</p>
<p>Fixed the Start Menu's launch of the main program: with older versions, it's possible that your AutoHotkey.ini script file (if you have one) was placed in the ShellNew folder of your Windows folder. If so, move it from there into the AutoHotkey directory in Program Files (or wherever you installed it).</p>
<p>Fixed the "Edit This Script" menu item, which disabled hotkeys if the script was already open for editing.</p>
<p>Fixed the fact that <a href="lib/SetTimer.htm">timers</a> would sometimes make the tray menu and main menu slow to respond.</p>
<p>Fixed <a href="lib/GetKeyState.htm">GetKeyState</a> when retrieving the physical state of the mouse buttons: it was wrong whenever the <a href="lib/_InstallMouseHook.htm">mouse hook</a> was installed without the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a>. [thanks skrommel]</p>
<p>Fixed the tilde (~) <a href="Hotkeys.htm">hotkey prefix</a> so that it works on all keys. [thanks Rajat]</p>
<p>Fixed the fact that the script would silently exit if a blank dynamic <a href="Variables.htm">variable</a> was used, such as in this example: <code>%EmptyVar% = 100 <em>; [thanks Rajat]</em></code></p>
<p>Changed the tray icon to be closer to the intended green color on Windows 95/98/NT/2000.</p>
<p>Changed one of the types of buffering that was introduced in version 1.0.06 to default to OFF because it does more harm than good in most cases. See <a href="lib/_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a> for how to re-enable this type of buffering and for an explanation. [thanks jamestr]</p>
<p>Improved <a href="lib/_InstallKeybdHook.htm">#InstallKeybdHook</a> and <a href="lib/_InstallMouseHook.htm">#InstallMouseHook</a> to accept the optional word FORCE, which avoids the warning dialog that is normally displayed when the hook is already installed by another script. [thanks Rajat]</p>
<p>Improved <a href="lib/ControlSend.htm">ControlSend</a> to optionally send directly to the parent window of a control. This is useful for programs such as Winamp 2.x (see <a href="misc/Winamp.htm">Automating Winamp</a> for an example). [thanks Rajat]</p>
<p>Added support for keyboards that have special keys not found on the <a href="KeyList.htm">key list</a>. If your keyboard has such keys, you might be able to make them into hotkeys by using <a href="KeyList.htm#SpecialKeys">these steps</a> (XP/2000/NT only). [thanks Rajat]</p>
<p>Added NumpadEnter to the <a href="KeyList.htm">key list</a> since it can be made a hotkey on XP/2000/NT. [thanks Rajat]</p>
<p>Added support for hexadecimal integers. Use a 0x prefix to indicate that a number is hex (e.g. <code>0xF9</code>). Hex integers can be used anywhere that a decimal integer is expected; for example, <code>Sleep, 0xFF</code> is equivalent to <code>Sleep, 255</code>. You can also use <a href="lib/SetFormat.htm">SetFormat</a> to make math operations store their results as hex, and to convert between decimal and hex. [thanks Rajat]</p>
<p>Added an option to the Installer that enables drag &amp; drop onto script files. This option is disabled by default since it can lead to accidental launches. [thanks Rajat]</p>
<p>Added Rajat's TextPad syntax file and clip library to the Extras folder, which is accessible via the Start Menu. Use the included script to install these features. Hopefully, similar add-ons for other editors will be developed in the coming months (volunteers are welcome).</p>
<p>Added sub-command <a href="lib/Menu.htm#Rename">Menu Rename</a>.</p>
<p>Added commands <a href="lib/PostMessage.htm">PostMessage/SendMessage</a>.</p>
<p>Added command <a href="lib/RunAs.htm">RunAs</a>, which allows processes to be created under the permissions of a different user. [thanks Jonathan Bennett &amp; Robert Yaklin]</p>
<p>Added command <a href="lib/WinSet.htm">WinSet</a>, which can make a window "always on top" or transparent.</p>

<h2 id="v1.0.07.00">1.0.07 - April 2, 2004</h2>
<p>Fixed the <a href="lib/Send.htm">Send</a> command on Windows 95/98/Me so that keys such as <code class="no-highlight">{Down}</code>, <code class="no-highlight">{Home}</code>, and <code class="no-highlight">{PgUp}</code> work properly. [thanks S_R]</p>
<p>Fixed the built-in variable A_ScriptDir so that .aut scripts see it as containing a final backslash (for compatibility). Also changed the .aut to .ahk converter so that this adjustment is made during the conversion. [thanks Rajat]</p>
<p>Fixed <code>Send, {}}</code> (send a literal right-brace). [thanks Rajat]</p>
<p>Fixed silent exit when a shifted reserved symbol such as <code class="no-highlight">#</code> or <code class="no-highlight">^</code> was defined as a hotkey. [thanks Rajat]</p>
<p>Fixed <a href="Hotkeys.htm#alttab">ShiftAltTab</a> when it was assigned to a Numpad key. [thanks Rajat]</p>
<p>Changed the following commands so that they don't report runtime errors when given negative parameters: <a href="lib/StringLeft.htm">StringLeft</a>, <a href="lib/StringLeft.htm">StringRight</a>, <a href="lib/StringMid.htm">StringMid</a>, <a href="lib/StringTrimLeft.htm">StringTrimLeft</a>, <a href="lib/StringTrimLeft.htm">StringTrimRight</a>, <a href="lib/ControlClick.htm">ControlClick</a>, and <a href="lib/MouseClick.htm">MouseClick</a>. [thanks Rajat]</p>
<p>Changed the <a href="lib/Suspend.htm">Suspend</a> command so that hotkey subroutines whose first line is <code>Suspend, On</code> are not exempt from suspension. [thanks Jay D. Novak]</p>
<p>Changed <a href="lib/MsgBox.htm">MsgBox</a> so that it will default to displaying "Press OK to continue" only when called explicitly with zero parameters. [thanks Rajat]</p>
<p>Changed the program's icons to the stylish ones provided by Rajat. It's hard to please everyone with a change like this, but hopefully most of you will consider them to be improvements over the drab originals (which basically just involved me drawing a big purple H).</p>
<p>Improved <a href="lib/RegRead.htm">RegRead</a>, <a href="lib/RegWrite.htm">RegWrite</a>, and <a href="lib/RegDelete.htm">RegDelete</a> so that they support a key's default value, which is displayed by RegEdit as "(Default)". Also, the root key names can now be abbreviated (e.g. HKLM). [thanks Rajat]</p>
<p>Added command <a href="lib/Menu.htm">Menu</a>, which allows you to customize the script's tray icon menu by removing existing items or adding new items. [thanks beardboy &amp; Rajat]</p>

<h2 id="v1.0.06.00">1.0.06 - March 25, 2004</h2>
<p>Fixed the following issues <strong>specific to Windows 95/98/Me </strong> [thanks Jay D. Novak]:</p>
<ul>
  <li>The <a href="lib/Send.htm">Send</a> command will now release <kbd>Ctrl</kbd>, <kbd>Alt</kbd>, <kbd>Shift</kbd>, and <kbd>Win</kbd> when it should. Previously, a hotkey such as <code>#+a::Send, hello</code> would incorrectly send HELLO in uppercase.</li>
  <li><a href="lib/SetNumScrollCapsLockState.htm">SetNumLockState</a> and <code>Send, {NumLock}</code> should now work more reliably.</li>
  <li><a href="lib/GetKeyState.htm">GetKeyState</a> should now work more reliably.</li>
  <li>The delays caused by the following commands and settings are now much more accurate, at least on Windows 98SE: <a href="lib/Sleep.htm">Sleep</a>, <a href="lib/SetKeyDelay.htm">SetKeyDelay</a>, <a href="lib/SetMouseDelay.htm">SetMouseDelay</a>, <a href="lib/SetWinDelay.htm">SetWinDelay</a>, <a href="lib/SetControlDelay.htm">SetControlDelay</a>. If you use Win9x, you might have to increase the delay values in some of your scripts if you want the delays to be as long as they were in the prior version.</li>
</ul>
<p>Fixed the tray icon so that it doesn't stay black when a new <a href="Hotkeys.htm">hotkey subroutine</a> is launched while the <a href="misc/Threads.htm">current thread</a> is paused. But it will go back to being black when the new subroutine finishes.</p>
<p>Fixed <a href="lib/Gosub.htm">Gosub</a> and <a href="lib/Goto.htm">Goto</a> that jump to a label whose name is contained in a variable reference. In this example, the variable will now be resolved each time the line is run rather than only the first time: <code>Gosub, %MyLabel%</code></p>
<p>Fixed the keyboard hook so that it is always auto-installed in response to <a href="lib/_InstallKeybdHook.htm">#InstallKeybdHook</a> and for scripts that contain only non-standard hotkeys such as <code>CapsLock &amp; e::</code>. [thanks bobhurt]</p>
<p>Changed the Installer to: 1) register the EXEs that come with the program so that you don't need to specify a full path when running them directly; 2) create its program group in All Users rather than the current user; 3) correctly remember the last installation directory (if you're installing on top of an older version).</p>
<p>Changed program startup for scripts that use the <a href="lib/_InstallKeybdHook.htm">keyboard hook</a> so that the current state of <kbd>Ctrl</kbd>/<kbd>Alt</kbd>/<kbd>Shift</kbd>/<kbd>Win</kbd> is taken into account.</p>
<p>Changed the <a href="Scripts.htm#auto">auto-execute</a> section so that if it takes a long time to complete (or never completes), the default values for settings such as <a href="lib/SetKeyDelay.htm">SetKeyDelay</a> are put into effect after 100 milliseconds. Thus, it's usually best to make any desired changes to the default values at the top of the script. This is only important for scripts that contain <a href="Hotkeys.htm">hotkeys</a> or <a href="lib/SetTimer.htm">timers</a>. </p>
<p>Improved <a href="lib/SetBatchLines.htm">SetBatchLines</a> to optionally accept a number of milliseconds rather than a number of lines. The millisecond method is recommended for scripts whenever speed and cooperation are important. For example, on most systems a setting of 10ms will prevent the script from using any more than 50&nbsp;% of an idle CPU's time. This allows scripts to run quickly while still maintaining a high level of cooperation with CPU sensitive tasks such as games and video capture/playback.</p>
<p>Improved hotkey buffering during critical operations (such as <a href="lib/Send.htm">Send</a>), and when a hotkey's <a href="lib/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> setting has been reached. In other words, in most cases, the program will save up hotkey presses until they can be executed. As a side-effect, this makes holding down a hotkey (to auto-repeat it) more responsive. [thanks Jay D. Novak]</p>
<p>Improved the performance of <a href="lib/_InstallKeybdHook.htm">hook scripts</a> that have high or infinite <a href="lib/SetBatchLines.htm">BatchLines</a>.</p>
<p>Added the AutoScriptWriter (macro recorder) to the main installer. I think there's a problem with the save button (which will hopefully be fixed soon) but it seems to work fine otherwise. [thanks Larry Keys]</p>
<p>Added command <a href="lib/SetTimer.htm">SetTimer</a>, which is where most of the development time was spent over the past 10 days. Timers are useful because they run asynchronously, meaning that they will run at the specified frequency (interval) even when the script is waiting for a window, displaying a dialog, or busy with another task. Possible uses for timers include taking some action when the user becomes idle (as reflected by <a href="Variables.htm#TimeIdle">%A_TimeIdle%</a>) or closing unwanted windows the moment they appear. There are many other potential uses.</p>

<h2 id="v1.0.05.00">1.0.05 - March 15, 2004</h2>
<p>Fixed possible crash of the <a href="lib/Exit.htm">Exit</a> and <a href="lib/ExitApp.htm">ExitApp</a> commands.</p>
<p>Fixed <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> on Windows 2000/NT so that <kbd>Ctrl</kbd> and <kbd>Alt</kbd> aren't thought to be down upon returning. [thanks Julian Doak]</p>
<p>Fixed <a href="lib/GetKeyState.htm">GetKeyState</a> so that the <em>physical</em> state of the mouse buttons is properly reported when the <a href="lib/_InstallMouseHook.htm">mouse hook</a> is installed.</p>
<p>Fixed <a href="lib/StringLower.htm">StringLower</a> so that it accepts the optional T (title case) parameter as intended. [thanks beardboy]</p>
<p>Changed <a href="misc/Clipboard.htm">clipboard</a> handling so that the program will keep trying to open the clipboard for 800 rather than 400 milliseconds before giving up and displaying a warning dialog. [thanks Jason Payam Ahdoot]</p>
<p>Changed: Variable names are now <a href="lib/ListVars.htm">listed</a> in alphabetical order in the main window. As a side-effect, performance of <a href="misc/Arrays.htm">arrays</a> is now better.</p>
<p>Changed <a href="lib/FileAppend.htm">FileAppend</a> so that it optionally allows the file to be written in binary vs. text mode. As far as I know, the only consequence of this is that newline (`n) will be written as an isolated linefeed (LF) rather than a carriage return + linefeed (CR+LF).</p>
<p>Improved <a href="lib/InputBox.htm">InputBox</a> to allow a custom size and position to be specified. In addition, the window can now be resized by dragging its borders. [thanks David Nuttall &amp; beardboy]</p>
<p>Added support for <code class="no-highlight">{Sleep}</code> to the <a href="lib/Send.htm">Send</a> command. Also added Sleep as an allowed hotkey, though <kbd>Sleep</kbd> on some keyboards might not be compatible with this.</p>
<p>Added built-in variable %A_Index%, which is the number of the current <a href="lib/Loop.htm">loop</a> iteration. The first iteration is 1, the second is 2, etc.</p>
<p>Added built-in variable <a href="Variables.htm#TimeIdlePhysical">%A_IdleTimePhysical%</a>, which is similar to %A_IdleTime% except that it ignores artificial input (the kind generated by scripts and programs), and thus may be more useful for detecting whether the user is truly present. This variable will be the same as %A_IdleTime% unless the <a href="lib/_InstallKeybdHook.htm">keyboard</a> or <a href="lib/_InstallMouseHook.htm">mouse</a> hook (or both) is installed.</p>
<p>Added command <a href="lib/StringSplit.htm">StringSplit</a>, which divides a string into an array of substrings using the specified delimiters.</p>
<p>Added new type of loop: <a href="lib/LoopParse.htm">string-parse</a>. It retrieves substrings (fields) from a string one by one (similar to <a href="lib/StringSplit.htm">StringSplit</a> but uses less memory).</p>
<p>Added new type of loop: <a href="lib/LoopReadFile.htm">file-read</a>. It reads the contents of a file (line by line) with higher performance than <a href="lib/FileReadLine.htm">FileReadLine</a>.</p>

<h2 id="v1.0.04.00">1.0.04 - March 6, 2004</h2>
<p>Fixed <kbd>Win</kbd>+<kbd>L</kbd> (hotkey to lock the computer) so that <kbd>Win</kbd> is not considered to be down when you log back in. [thanks Jack Horsfield].</p>
<p>Fixed the <a href="lib/Reload.htm">Reload</a> feature: If a <a href="lib/MsgBox.htm">MsgBox</a> or other dialog was displayed by the script at the time it was reloaded, the application would hang. [thanks Christian Ziemski]</p>
<p>Fixed auto-execute section, which is the top part of the script prior to the first hotkey label: If it had at least one normal (non-hotkey) label, in some cases the script's first hotkey label (if it had one) was executed as part of the auto-execute section. [thanks Robert Yaklin]</p>
<p>Improved <a href="lib/SoundSetWaveVolume.htm">SoundSetWaveVolume</a> to accept +/- as a prefix. These prefixes adjust the volume up or down relative to its <strong>current</strong> level. In addition, the command now accepts an optional 2nd parameter to indicate which device to operate upon (for systems with more than one sound device).</p>
<p>Improved the following commands to greatly reduce the keyboard and mouse lag caused by a <a href="lib/_UseHook.htm">hook-script</a> performing a long operation: <a href="lib/FileDelete.htm">FileDelete</a>, <a href="lib/FileCopy.htm">FileCopy</a>, <a href="lib/FileMove.htm">FileMove</a>, <a href="lib/FileReadLine.htm">FileReadLine</a>, <a href="lib/FileSetAttrib.htm">FileSetAttrib</a>, <a href="lib/FileSetTime.htm">FileSetTime</a>, <a href="lib/Send.htm">Send</a>, and <a href="lib/ControlSend.htm">ControlSend</a>.</p>
<p>Improved <a href="lib/StringLower.htm">StringLower/Upper</a> to support converting a string to title case. For example, "GONE with the WIND" would become "Gone With The Wind".</p>
<p>Added remote registry support to <a href="lib/LoopReg.htm">registry loops</a>, <a href="lib/RegRead.htm">RegRead</a>, <a href="lib/RegWrite.htm">RegWrite</a>, and <a href="lib/RegDelete.htm">RegDelete</a>. Simply prepend the computer name to the root key, as in this example: <code class="no-highlight">\\workstation01:HKEY_LOCAL_MACHINE</code></p>
<p>Added built-in variable <a href="Variables.htm#TimeIdle">%A_TimeIdle%</a>, which is the number of milliseconds since the system last received keyboard, mouse, or other input. This is useful for determining whether the user is away. This variable will be blank unless the operating system is Windows 2000, XP, or beyond.</p>
<p>Added command <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a>, which downloads a file from the Internet. [thanks Jonathan Bennett &amp; Jason Payam Ahdoot]</p>
<p>Added command <a href="lib/SoundGetWaveVolume.htm">SoundGetWaveVolume</a>, which retrieves the current wave output volume level.</p>
<p>Added commands <a href="lib/SoundGet.htm">SoundGet</a> and <a href="lib/SoundSet.htm">SoundSet</a>, which allow just about any setting of any sound device to be retrieved or changed. Examples include mute, microphone, master, synth, aux, and line-in.</p>

<h2 id="v1.0.03.00">1.0.03 - March 1, 2004</h2>
<p>Fixed <a href="lib/Send.htm#asc">Send {Asc nnnnn}</a> so that leading zeros in nnnnn are not ignored.</p>
<p>Fixed RShift (right <kbd>Shift</kbd>): Hotkeys that involved it sometimes created an incorrect shift-state. [thanks Jesper James Jensen]</p>
<p>Changed the default <a href="lib/_HotkeyModifierTimeout.htm">HotkeyModifierTimeout</a> from 100 to 50 to alleviate sticking modifier keys (Ctrl, Alt, Shift, and Win). [thanks Jesper James Jensen]</p>
<p>Changed <a href="lib/FileCopy.htm">FileCopy</a> for AutoIt2 (.aut) scripts so that it sets ErrorLevel to 1 rather than the number of files that could not be copied (improves compatibility).</p>
<p>Added command <a href="lib/FileCreateShortcut.htm">FileCreateShortcut</a>, which creates a .lnk file. [thanks Jonathan Bennett]</p>
<p>Added support for <a href="lib/LoopReg.htm">registry enumeration</a>, which allows the contents of a key to be retrieved (item by item) via a registry loop. <a href="lib/RegRead.htm">RegRead</a>, <a href="lib/RegWrite.htm">RegWrite</a>, and <a href="lib/RegDelete.htm">RegDelete</a> have also been enhanced to optionally use the loop's current registry item whenever they are enclosed in a registry loop. [thanks Robert Yaklin]</p>

<h2 id="v1.0.02.00">1.0.02 - February 26, 2004</h2>
<p>Fixed a bug introduced in the prior version: In rare cases, you had to release and press down a hotkey's modifiers (Ctrl, Alt, Shift, and Win) to get them back into effect after a <a href="lib/Send.htm">Send</a> operation. This is now unnecessary in most cases.</p>
<p>Changed: The program will now launch even if its tray icon cannot be created (perhaps due to running a shell other than Explorer). [thanks Ian Oliver]</p>
<p>Changed program startup so that the currently active window is not disturbed (it will stay active).</p>
<p>Improved the <a href="lib/Send.htm">Send</a> command to support the characters <code class="no-highlight">&oslash;</code> and <code class="no-highlight">&Oslash;</code>. [thanks Jesper James Jensen]</p>

<h2 id="v1.0.01.00">1.0.01 - February 24, 2004</h2>
<p>Fixed <a href="lib/EnvSub.htm">EnvSub's</a> date-time math so that if a newer time is subtracted from an older one, the result will be reported correctly as a negative number rather than a large positive number.</p>
<p>Fixed a rare problem with naked modifier keys used as hotkeys. For example, if RControl (by itself) was a hotkey, sometimes <kbd>Ctrl</kbd> would get stuck down after a <a href="lib/Send.htm">Send</a> operation that involved <kbd>Ctrl</kbd>.</p>
<p>Fixed syntax error reporting: in rare cases such as <a href="lib/Else.htm">Else If</a> statements, the line above where the syntax error actually occurred was reported.</p>
<p>Added the built-in <a href="Variables.htm">variable</a> %0%, which contains the number of command line parameters that were passed into the script. This also improves compatibility with AutoIt2. [thanks BoBo]</p>
<p>Added command <a href="lib/BlockInput.htm">BlockInput</a>, which prevents the user from doing anything with the keyboard, mouse, and maybe other input devices as well. [thanks Jonathan Bennett &amp; beardboy]</p>

<h2 id="v1.0.00.00">1.0.00 FINAL - February 16, 2004</h2>
<p> This seems like a stable version. I've had a lot of help testing it, so thanks to you all, especially Robert Yaklin. There are many more enhancements planned; you can expect the first in a series of new releases in about 2 weeks. Now on to the changes... </p>
<p>Fixed several problems with number recognition, mainly that numbers are now allowed to start with a plus sign or decimal point. For example, <code>.95</code>, <code>-.95</code>, and <code>+.95</code> are now considered to be floating point numbers. [Thanks to Romano]</p>
<p>Fixed <a href="lib/ListLines.htm">ListLines</a> crashing when it displayed commands whose optional output variables were omitted.</p>
<p>Fixed a rare crash condition involving large variables being given a value that has zero length.</p>
<p>Fixed <a href="lib/Reload.htm">Reload</a> on Windows 95. [Thanks to Robert Yaklin]</p>
<p>Fixed <a href="lib/IfEqual.htm">IF</a> statements so that operators do not need to have whitespace. For example, this is now valid as intended: <code>if var&lt;&gt;0</code></p>
<p>Fixed (again) shift key sticking when used with Numpad keys. Hopefully this is close to a 100% fix. [thanks Robert Yaklin]</p>
<p>Fixed <a href="lib/RegRead.htm">RegRead</a> of REG_BINARY values: ErrorLevel is now set to 0 when successful.</p>
<p>Fixed <a href="lib/RegWrite.htm">RegWrite</a> of a blank REG_DWORD value: It now writes a zero rather than a random number.</p>
<p>Changed <a href="lib/SplashTextOn.htm">SplashTextOn</a>: Removed the menu bar from the window, which was unintentionally introduced in the previous version. Also, on most systems, the window will be a few pixels wider and taller so that the border is always correctly shown. [thanks Jonathan Bennett and Robert Yaklin]</p>
<p>Changed <a href="lib/SetFormat.htm">SetFormat</a> so that specifying <code>0</code> is the same as specifying <code>0.0</code>. [thanks Robert Yaklin]</p>
<p>Changed commands that activate a window, such as <a href="lib/WinActivate.htm">WinActivate</a>, so that they won't hang if the previously active window or the target window is hung. Also, these commands will now try a more gentle approach first. You can skip the gentle approach by using <a href="lib/_WinActivateForce.htm">#WinActivateForce</a>, which maybe be useful in preventing task bar buttons from flashing when different windows are activated quickly one after the other.</p>
<p>Changed <a href="lib/IniWrite.htm">IniWrite</a> and <a href="lib/IniDelete.htm">IniDelete</a> so that they set ErrorLevel to 1 if there was a problem or 0 otherwise. For compatibility reasons, this does not apply to AutoIt2 (.aut) scripts.</p>
<p>Improved <a href="lib/RegRead.htm">RegRead</a> and <a href="lib/RegWrite.htm">RegWrite</a> to fully support REG_MULTI_SZ. [thanks Jonathan Bennett]</p>
<p>Improved <a href="lib/ControlClick.htm">ControlClick</a>: It now clicks the exact center of the control, which might improve reliability for some types of controls. Also, another change was made (SetActiveWindow) that might further boost reliability. Finally, a new optional parameter was added that allows the mouse button to be held down or released. [thanks Jonathan Bennett]</p>
<p>Improved <a href="lib/Send.htm">Send</a> to handle the following characters: <code class="no-highlight">&Ccedil;&uuml;&eacute;&acirc;&auml;&agrave;&aring;&ccedil;&ecirc;&euml;&egrave;&iuml;&icirc;&igrave;&Auml;&Aring;&Eacute;&aelig;&AElig;&ocirc;&ouml;&ograve;&ucirc;&ugrave;&yuml;&Ouml;&Uuml;&pound;&fnof;&aacute;&iacute;&oacute;&uacute;&ntilde;&Ntilde;&ordf;&ordm;&iquest;&not;&shy;&frac12;&frac14;&iexcl;&laquo;&raquo;</code> [thanks Jonathan Bennett]</p>
<p>Improved <a href="lib/Send.htm">Send</a> and <a href="lib/ControlSend.htm">ControlSend</a> so that any key can be held down or released. Example: <code>Send, {tab down}{b down}{b up}{tab up}</code></p>
<p>Improved <a href="lib/ControlSend.htm">ControlSend</a> so that the sending of <kbd>Shift</kbd>, <kbd>Ctrl</kbd>, <kbd>Alt</kbd>, and <kbd>Win</kbd> is more reliable. [thanks Jonathan Bennett]</p>
<p>Improved <a href="lib/FileRemoveDir.htm">FileRemoveDir</a> to optionally delete recursively (similar to deltree). [thanks Jonathan Bennett]</p>
<p>Improved <a href="lib/FileCopy.htm">FileCopy</a> so that it sets ErrorLevel to the number of files that could not be copied (zero if all requested files were copied). The copy operation continues even if error(s) are encountered (such as target file(s) already existing when the overwrite flag is OFF).</p>
<p>Improved <a href="lib/FileMove.htm">FileMove</a> to support wildcards and to behave like <a href="lib/FileCopy.htm">FileCopy</a> for ErrorLevel and continue-on-error. However, it no longer supports the moving of directories. Use <a href="lib/FileMoveDir.htm">FileMoveDir</a> instead. [thanks Jonathan Bennett]</p>
<p>Improved <a href="lib/FileSelectFile.htm">FileSelectFile</a> by adding two optional parameters: <em>Prompt</em> (display instructions for the user) and <em>Filter</em> (for example: <code class="no-highlight">*.txt</code>). As with all new parameters for old commands, they are not available in scripts whose file extension is .aut (for compatibility reasons).</p>
<p>Added <a href="lib/FileCopyDir.htm">FileCopyDir</a> and <a href="lib/FileMoveDir.htm">FileMoveDir</a>. [thanks Jonathan Bennett]</p>
<p>Added built-in variable <a href="Variables.htm">A_Tab</a>, which contains a single tab character (similar to A_Space).</p>
<p>Added new types for "<a href="lib/IfIs.htm">if var is &lt;type&gt;</a>": integer, digit, alpha, alnum, and space.</p>

<h2 id="v0.2.25.00">0.2.25 BETA - February 9, 2004</h2>
<p>I'm hoping this can be the <strong>final beta</strong> prior to initial release. All the test scripts run fine, including complex scripts that run for 72+ hours continuously without any memory leaks or other problems. The only significant fixes remaining are for <a href="lib/ControlSend.htm">ControlSend</a> (uppercase vs. lowercase problems) and FileMove (wildcard support). If you get time over the next few days, please try to give this latest version a workout, especially the below changes and additions.</p>
<p>Fixed <a href="lib/FileSelectFile.htm">FileSelectFile</a>: Sometimes the dialog would not be displayed, usually when doing a multi-select. [thanks to Steve Drown]</p>
<p>Fixed (hopefully) a hang-on-exit when the script is terminated while it is displaying a <a href="lib/MsgBox.htm">MsgBox</a> or other dialog (rare even then).</p>
<p>Fixed <a href="lib/_InstallKeybdHook.htm">#InstallKeybdHook</a> and <a href="lib/_InstallMouseHook.htm">#InstallMouseHook</a> so that they force the hooks to be installed even if there are no hotkeys that need them. This is useful to expand the scope of what the <a href="lib/KeyHistory.htm">KeyHistory</a> command shows.</p>
<p>Customized the AutoIt3 Window Spy to show which window text is available only when <a href="lib/SetTitleMatchMode.htm">SetTitleMatchMode</a> is in the "slow" mode. It also omits the mouse's desktop coordinates since they aren't used by AutoHotkey.</p>
<p>Changed the KeyLog command:</p>
<ul>
  <li>In an effort to prevent AutoHotkey from becoming branded a keylogger or trojan by various security firms and their software -- after which it might be very difficult to "un-brand" it -- the ability to log to a file has been disabled. A version with that feature is available upon request, or you can compile it yourself with that section enabled.</li>
  <li>Renamed the command to be <a href="lib/KeyHistory.htm">KeyHistory</a> to avoid even the appearance of supporting malicious use. Please change your scripts accordingly.</li>
  <li>Improved the command so that it also displays the info that only the log file used to show: elapsed time between keystrokes and the target window's title.</li>
</ul>
<p>Renamed command ControlLeftClick to <a href="lib/ControlClick.htm">ControlClick</a> so that other mouse buttons are supported. A simple search and replace of ControlLeftClick with ControlClick in your scripts should do the trick because the command assumes the left button if none is specified.</p>
<p>Improved the SHIFT-NUMPAD issue: <kbd>Shift</kbd> shouldn't get stuck down as often when used with any of the dual-state numpad keys. This is a compensation for the keyboard's driver-generated <kbd>Shift</kbd> events, which ensure that <kbd>Shift</kbd> isn't logically down whenever a numpad key is pressed or released. [thanks to Robert Yaklin]</p>
<p>Added command <a href="lib/SetMouseDelay.htm">SetMouseDelay</a> to change the delay that occurs after every mouse movement or click. Default 10.</p>
<p>Added directives <a href="lib/_MaxThreads.htm">#MaxThreads</a> and <a href="lib/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>. The latter defaults to 1, which means that new instances of a hotkey subroutine cannot be launched if that subroutine is already running. This default behavior is what most people would want since it helps prevent accidental double-presses. Thus, there's probably no need to change any of your scripts.</p>
<p>Added command <a href="lib/FileInstall.htm">FileInstall</a>, which includes extra files when compiling a script. </p>
<p>Added <a href="lib/_Include.htm">#Include</a> directive: By default, files are included only once, even if multiple inclusions are encountered. Use <a href="lib/_Include.htm">#IncludeAgain</a> to include a file more than once.</p>
<p>Added menu bar to the main window for convenient access to features such as viewing variables, lines, hotkeys, and key history.</p>

<h2 id="v0.2.24.00">0.2.24 BETA - February 1, 2004</h2>
<p>Changed (again) <a href="lib/EnvAdd.htm">math</a> operations that involve impure numbers (e.g. <code>123abc</code>) so that they conform to AutoIt2's behavior: Strings that start with a number <strong>are</strong> that number for the purpose of the calculation, e.g. <code>123abc</code> is considered to be <code>123</code>. Strings that do not start with a number are considered to be zero for the calculation, e.g. <code>123 + abc = 123</code>. This change does not affect the behavior of <a href="lib/IfEqual.htm">IfEqual, IfGreater and IfLess</a>: They will still compare strings alphabetically if either one is not purely numeric, which is slightly different from AutoIt2.</p>
<p>Added syntax to support determining whether a variable contains a pure number, floating point number, or time. Example:</p>
<pre class="no-highlight"><a href="lib/IfIs.htm">if var is [not]</a> number
if var is [not] float
if var is [not] time
{
    ...actions to take...
}</pre>

<h2 id="v0.2.23.00">0.2.23 BETA - January 31, 2004</h2>
<p>Fixed math operating on numbers that had trailing spaces: If a variable contained something like <code>123 </code> (i.e. space at the end) it would be considered non-numeric when math was performed on it, thus resulting in the variable being made blank. Sorry if that messed up anyone; the prior release is what broke it.</p>

<h2 id="v0.2.22.00">0.2.22 BETA - January 30, 2004</h2>
<p>Fixed for Windows 95: Retrieving environment variables should work now. The problem was caused by Win95's undocumented buffer size limit in GetEnvironmentVariable(). [Thanks to Robert Yaklin]</p>
<p>Fixed RWin (right <kbd>Win</kbd>): When used with a <a href="lib/_UseHook.htm">hook</a> hotkey, it might have caused the Start Menu to appear.</p>
<p>Removed an unintended 10ms delay during the launch of every hotkey [introduced in v0.2.20].</p>
<p>Changed math operations (<a href="lib/EnvAdd.htm">EnvAdd</a>/<a href="lib/EnvSub.htm">Sub</a>/<a href="lib/EnvMult.htm">Mult</a>/<a href="lib/EnvDiv.htm">Div</a>) so that the output variable is made blank if either of the inputs is not purely numeric. In addition to making flawed scripts fail in a more consistent way, this behavior can be used to quickly determine whether or not a variable is purely numeric.</p>
<p>Improved <a href="lib/RegRead.htm">RegRead</a> and <a href="lib/RegRead.htm">RegWrite</a> to support REG_BINARY. [As with so many other things, thanks to Jon, the AutoIt author]</p>
<p>Improved the handling of ALT keys: if either of them is used as both a prefix (modifying other hotkeys) and a suffix (is itself a hotkey whose action fires when the key is released), it doesn't have the side-effect of invoking a menu on the active window. Strangely, this was never a problem on my system until today when some mysterious change occurred making it obvious this adjustment was needed.</p>
<p>Added support for floating point: Any number containing a decimal point is considered to be such. Any math operation involving at least one floating point number will produce a floating point result. In addition, the <a href="lib/Random.htm">Random</a> command has been improved to optionally generate floating point numbers. Note: integer math is still used whenever floating point numbers aren't involved because testing reveals that scripts with math intensive loops run over 5 times faster with 64-bit integers vs. floating point numbers (tested on Pentium II and Athlon XP).</p>
<p>Switched from 32 to 64-bit integer math. 32-bit is only about 40% faster than 64-bit for scripts running intensive math loops on Pentium IIs and Athlon XPs. But for real-world scripts, the difference is negligible, so the greater flexibility seems worth the cost. 64-bit also allows <a href="Variables.htm">%A_TickCount%</a> and DWORDs read from the registry to be correctly reported as positive, as well as enabling the retrieval of the exact number of bytes in files larger than 2 gigabytes.</p>
<p>Added command <a href="lib/SetFormat.htm">SetFormat</a> to allow floating point numbers to be stored in a format other than the default (e.g. with blank padding, 0-padding, or a different number of decimal places).</p>
<p>Added Explorer right-click &gt;&gt;New &gt;&gt;AutoHotkey Script.</p>

<h2 id="v0.2.21.00">0.2.21 BETA - January 26, 2004</h2>
<p>Fixed a <a href="lib/Loop.htm">Loop</a> bug introduced in the prior version: If a <a href="lib/Loop.htm">Loop</a> was directly beneath an <a href="lib/IfEqual.htm">IF</a> or <a href="lib/Else.htm">ELSE</a> (i.e. not enclosed in a <a href="lib/Block.htm">block</a>), the flow of execution would be wrong, usually resulting in parts of the script being erroneously executed twice. [thanks to Steve Drown]</p>
<p>Fixed the custom icon feature of the Ahk2Exe script compiler.</p>
<p><a href="Variables.htm">Variable names</a> may now contain the following punctuation (previously, only underscore was allowed): <code class="no-highlight"># _ @ $ ? [ ]</code></p>
<p>Documented the fact that <a href="lib/MsgBox.htm">MsgBox</a> supports having a default button other than the first (256 = 2nd, 512 = 3rd).</p>
<p>Added the ability to compare, add to, and subtract from dates and times. This is done via an optional 3rd parameter for <a href="lib/EnvSub.htm">EnvSub</a> and <a href="lib/EnvAdd.htm">EnvAdd</a>, which can be either Seconds, Minutes, Hours, or Days (or just the first letter of each of these). The date-time format is <a href="lib/FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a>, which is used by all date-time commands. Example:</p>
<pre>var1 = 20050126
var2 = 20040126
EnvSub, var1, %var2%, days
MsgBox, %var1%  <em>; The answer will be 366 since 2004 is a leap year.</em>
var1 =  <em>; Make it blank so that the below will use the current timestamp instead.</em>
var1 += 31, days
MsgBox, %var1%  <em>; The answer will be the date 31 days from now.</em></pre>

<h2 id="v0.2.20.00">0.2.20 BETA - January 21, 2004</h2>
<p>The first draft of the help file and the installer are finally done. They're included in the current release. [Thanks to Robert Yaklin for his help with the installer.] The installer will associate .ahk files with the installed AutoHotkey.exe, rather than any old version you may have.</p>
<p>Fixed a bug introduced in 0.216 that prevented <a href="lib/_HotkeyModifierTimeout.htm">#HotkeyModifierTimeout</a> from working correctly. Scripts that didn't have the keyboard hook installed would not properly compensate for keys the user was physically holding down during the Send command.</p>
<p>Fixed <a href="lib/RegDelete.htm">RegDelete</a> so that it allows the 3rd parameter (<em>ValueName</em>) to be omitted. If omitted, the entire specified subkey will be deleted.</p>
<p>Fixed script compiler (Ahk2Exe) crashing when given a custom icon. However, the custom icon feature still doesn't work. Hopefully it will be working for the next release.</p>
<p>Removed the GroupCloseAll command. Instead, use <code><a href="lib/GroupClose.htm">GroupClose</a>, MyGroup, A</code>.</p>
<p>Changed <a href="lib/IfWinActive.htm">IfWin[Not]Active</a> and <a href="lib/WinWaitActive.htm">WinWait[Not]Active</a> so that they set the <a href="misc/WinTitle.htm#LastFoundWindow">Last Found window</a>. [Thanks again to Robert]. If any of your scripts use the Last Found Window feature, there's a small chance they'll need to be changed in light of this. </p>
<p>Changed the default <a href="lib/SetWinDelay.htm">WinDelay</a> to 100 vs. 250, and the "default" <a href="lib/SetDefaultMouseSpeed.htm">DefaultMouseSpeed</a> to be 2 vs. 10 (i.e. the mouse will move faster by default). AutoIt2 (.aut) scripts still use 500 as their default WinDelay, but now use 2 vs. 1 as their default mouse speed (since Jon has said that values less than 2 sometimes don't work with MouseClickDrag). If anyone thinks these may be too aggressive, let me know.</p>
<p>Improved <a href="lib/MsgBox.htm">MsgBox</a> with smart comma handling: Commas do not need to be escaped (<code class="no-highlight">`,</code>) anymore except when using the command's timeout feature.</p>
<p>Improved the <a href="lib/KeyHistory.htm">KeyHistory</a> command: It will now show the script's own generated keyboard events in the window (rather than nothing) when the keyboard hook isn't installed.</p>
<p>Improved <a href="lib/RegRead.htm">RegRead</a> by eliminating the 2nd parameter (<em>ValueType</em>) whenever the command is given only 4 parameters. When given 5 parameters (i.e. the old style), the 2nd parameter -- which is not used and is present only for backward compatibility with AutoIt2 -- can be left blank.</p>
<p>Improved the responsiveness of the program (tray menu, main window, etc.) when <a href="lib/SetBatchLines.htm">SetBatchLines</a> is very high or infinite. This also reduces keyboard and mouse lag to negligible levels if such scripts use the keyboard or mouse hook.</p>
<p>Improved <a href="lib/FileSetAttrib.htm">FileSetAttrib</a> and <a href="lib/FileSetTime.htm">FileSetTime</a> so that they optionally recurse into subfolders. Although all subfolders are recursed into, even if their names don't match the wildcard pattern, the attributes of the subfolders themselves are not changed unless <em>OperateOnFolders</em> is 1 and the folder name matches the pattern (<code class="no-highlight">*.*</code> matches all).</p>
<p>Improved <a href="lib/Loop.htm">file loops</a> by adding an automatic "recurse into subfolders" option and more.</p>
<p>Added command <a href="lib/SetControlDelay.htm">SetControlDelay</a>. This is just like <a href="lib/SetWinDelay.htm">SetWinDelay</a> except it defines the delay that will occur after every control command that changes a control, namely <a href="lib/ControlClick.htm">ControlClick</a>, <a href="lib/ControlFocus.htm">ControlFocus</a>, and <a href="lib/ControlSetText.htm">ControlSetText</a>. These commands are somewhat unreliable due to their nature; this delay seems to alleviate that. It defaults to 20 (milliseconds). In older versions, the value of SetWinDelay was used for these commands.</p>
<p>Added command <a href="lib/SoundPlay.htm">SoundPlay</a>. In addition to .wav files, it may be able to play .mp3, .avi, etc. depending on what features are installed on your OS.</p>
<p>Added <code>++</code> and <code>--</code> <a href="lib/EnvAdd.htm">operators</a>, which add or subtract 1 from the target variable. Examples: <code>count++</code>, <code>++count</code>, <code>count--</code>, <code>--count</code></p>
<p>Added support for <a href="misc/Arrays.htm">arrays</a> (AutoIt2 style). This was done by allowing the name of a variable to be resolved during runtime, rather than exclusively at compile-time as it was before. In other words, commands that expect the name of a variable (with no enclosing %%) now allow that variable name to contain references to other variables. Example:</p>
<pre><em>; Write to the array:</em>
i = 0
loop, 5
{
    i++
    Random, array%i%, 1, 100  <em>; Put a random number into each element.</em>
}

<em>; Read from the array:</em>
i = 0
loop
{
    i++
    StringTrimRight, element, array%i%, 0
    if element =
        break <em>; The end of the array has been reached.</em>
    MsgBox, %element%
}</pre>

<h2 id="v0.219">0.219 BETA - January 12, 2004</h2>
<p>Fixed the Suspend command so that when suspension is turned off, all hotkeys are re-enabled. Previously, hotkeys handled by the hook were sometimes left disabled.</p>
<p>Changed the Suspend command so that the keyboard and mouse hooks are never removed if the corresponding directives (#InstallKeybdHook and #InstallMouseHook) are present in the script.</p>
<p>Changed InputBox: For non-AutoIt2 (.aut) scripts, it now sets ErrorLevel to 1 and the output variable to the value entered if the user presses the Cancel button. For AutoIt2 scripts, the behavior is the same: ErrorLevel is not changed, and the output variable is set to blank whenever the user presses Cancel, even if text was entered.</p>
<p>Changed FileDelete to set ErrorLevel to be the number of files that could not be deleted (if a wildcard pattern was given).</p>
<p>Changed the KeyHistory command so that the filename is specified in the second parameter. So now it works this way:</p>
<pre class="no-highlight">KeyHistory  <em>; same as before (display short log in window)</em>
KeyHistory, on, c:\KeyHistory.txt  <em>; Turn on logging, optionally specifying the file to log to.</em>
KeyHistory, off  <em>; Turn off logging.</em>
KeyHistory, toggle [, filename]  <em>; Toggles to the opposite state (on or off).</em></pre>
<p>Improved the performance of KeyHistory when it logs to a file by having it leave the file open rather than closing and reopening it for every key/mouse event. This should also reduce wear &amp; tear on the drive. The only disadvantage is that viewing a log file that is open for logging might show contents that are out-of-date due to file buffering. To work around this, temporarily turn off logging before viewing the file.</p>
<p>Improved the performance of Run and RunWait by having them attempt CreateProcess() prior to ShellExecute(), rather than the other way around. I believe CreateProcess() is much faster.</p>
<p>Removed the commands FileToggleHidden and FileSetDateModified. See below for their replacements.</p>
<p>Added the following commands. Click a link for details:</p>
<ul>
  <li><a href="lib/ControlGetFocus.htm">ControlGetFocus</a></li>
  <li><a href="lib/FileSelectFolder.htm">FileSelectFolder</a></li>
  <li><a href="lib/FileGetAttrib.htm">FileGetAttrib</a></li>
  <li><a href="lib/FileSetAttrib.htm">FileSetAttrib</a></li>
  <li><a href="lib/FileGetTime.htm">FileGetTime</a></li>
  <li><a href="lib/FileSetTime.htm">FileSetTime</a></li>
  <li><a href="lib/FileGetSize.htm">FileGetSize</a></li>
  <li><a href="lib/FileGetVersion.htm">FileGetVersion</a></li>
</ul>

<h2 id="v0.218">0.218 BETA - January 7, 2004</h2>
<p> Added a script compiler (makes an EXE from a script) by popular demand. It was a lot easier than I thought, thanks to Jon's (AutoIt author's) open &amp; modular coding style. It's available on the <a href="https://www.autohotkey.com/download/">download page</a>. Note: Presently, .aut scripts are not supported because there's no way for the compiled script to figure out whether to run in AutoIt2 mode (backslash as escape char) or AutoHotkey mode (<code class="no-highlight">`</code> as escape char). So if necessary, first auto-convert your .aut file to .ahk by renaming it to "whatever.aut.ahk" and then running it with AutoHotkey.exe.</p>
<p>Added support for command line parameters becoming script variables. The command line format is:</p>
<ul>
  <li>AutoHotkey.exe [Switches] [Script Filename] [Script Parameters]</li>
  <li>CompiledScript.exe [Switches] [Script Parameters]</li>
  <li>Switches can be zero or more of the following:<ul>
  <li>/f or /force -- Launch unconditionally, skipping any warning dialogs.</li>
  <li>/r or /restart -- Indicate that the script is being restarted (this is also used by the Reload command, internally)</li></ul></li>
  <li>Script Filename can be omitted if there are no Script Parameters. If omitted, it will run (or prompt you to create) AutoHotkey.ini in the current directory.</li>
  <li>Script Parameters can be any strings you want to pass into the script. Any parameter containing spaces must be enclosed in double quotes. Like AutoIt2, the script sees them as the variables %1%, %2%, and so on.</li>
</ul>
<p>Added command #NoTrayIcon. Put it anywhere in a script to disable the showing of a tray icon. If you use this for a script that has hotkeys, you might want to bind a hotkey to the ExitApp command. Otherwise, there will be no easy way to exit the program (without restarting the computer or killing the process). Example: <code>#x::ExitApp</code></p>

<h2 id="v0.217">0.217 BETA - January 5, 2004</h2>
<p>Fixed variable assignment (SetEnv and the new style, <code>var = value</code>) to properly handle escape sequences. Lines such as this should now work properly: <code>result = %result% %color% `%`n</code></p>
<p>Fixed <kbd>Shift</kbd> getting stuck down in rare cases when Numpad hotkeys invoke the Send command to send <kbd>Shift</kbd>. The fix is basically a workaround for the fact that the OS, driver, or BIOS generates physical shift-key events to ensure that Numpad keys that have a dual-state (Numpad1-9 and Dot) never have their keystrokes occur while <kbd>Shift</kbd> is down. Thanks once again to Robert Yaklin for his help on tracking this down.</p>
<p>Fixed Numpad hotkeys (e.g. NumpadEnd) that have a counterpart on the main keyboard (e.g. End) so that the counterpart key does not fire the hotkey.</p>
<p>Added commands IniRead/Write/Delete:</p>
<ul>
  <li>IniRead, OutputVar, Filespec, Section, Key, Default (value to return if key not found)</li>
  <li>IniWrite, Value, Filespec, Section, Key</li>
  <li>IniDelete, Filespec, Section, Key</li>
  <li>Note: For compatibility reasons, IniRead does not support the last parameter if the script is of type .aut. Also, if this last parameter is omitted, OutputVar will be set to ERROR if there was a problem. This mirrors AutoIt2's behavior. Finally, none of these commands set ErrorLevel; this mirrors the behavior of AutoIt2 and 3.</li>
</ul>
<p>Added command EnvUpdate, which according to the AutoIt3 docs: "Refreshes the OS environment. Similar effect as logging off and then on again." The command sets ErrorLevel to 0 to indicate success or 1 otherwise. Note: Due to the nature of this feature, there is a slight chance that keyboard and mouse events will lag (be delayed) while the command is running if the keyboard/mouse hooks are installed.</p>
<p>Added a built-in variable A_Space which contains a single space character. This avoids the need for a workaround to get a variable to contain a space. Example:</p>
<pre>String = String with spaces
IfInString, String, %A_SPACE%
    MsgBox, A space was found.

<em>; But to assign a naked space to a variable of your own, be sure to turn off AutoTrim so that the assignment won't remove all leading and trailing spaces:</em>
AutoTrim, off
MySpace = %A_SPACE%</pre>
<p>Added the Edit command, which opens the current script for editing, or activates an existing Editor window if it finds one it thinks may have the file open based on its window title. This command is the same feature as selecting "Edit This Script" from the tray menu.</p>
<p>Added the Pause command and corresponding tray menu item. Unlike Suspend -- which disables hotkeys entirely -- pause will freeze the currently running subroutine (if none, pause will have no effect). The allowed values for the command's first parameter are ON, OFF, and TOGGLE (change to the opposite state). If the first parameter is omitted, it will default to TOGGLE just like the Suspend command. New hotkeys can still be launched while the script is paused, but when their subroutines finish, the underlying interrupted subroutine will still be paused. The <code>Pause, off</code> command will unpause only the most recently paused subroutine. Each subroutine can be paused independently of the others. The color of the tray icon changes to black whenever the script's current subroutine is in a paused state.</p>
<p>Improved the Suspend feature:</p>
<ul>
  <li>It now reverts all hotkeys back to their native functions rather than doing nothing when they are pressed.</li>
  <li>The tray icon is changed to an S whenever hotkeys are suspended.</li>
  <li>The first parameter can now be PERMIT or TOGGLE, in addition to ON or OFF. TOGGLE does the same thing as omitting the first parameter (i.e. toggles to the opposite state). PERMIT does not change the state of suspension. Instead, when used as the first line of any subroutine, it flags that subroutine as having permission to run even when hotkeys are suspended. Note: As before, any subroutine that has Suspend as its first command will be permitted to run while hotkeys are suspended (i.e. the PERMIT value is just a way to do it without changing the suspend state).</li>
  <li>Note: Suspend will not disable the AlwaysOn/AlwaysOff feature for Scroll/Caps/NumLock if the script is using it.</li>
  <li>Note: Although it isn't officially paused, the script is always halted while its tray menu is displayed. However, new hotkeys can be launched even then.</li>
</ul>
<p>Improved the behavior of #SingleInstance scripts when the user attempts to run another instance: The user is now prompted for whether to keep the original instance or replace it with the new one.</p>
<p>Improved PixelSearch by making the output variables optional. In addition, an optional parameter has been added, which if present is a number between 0 and 255 (inclusive) to indicate the allowed number of shades of variation in either direction for the intensity of the red, green, and blue components of the color. This can be helpful if the color you're looking for isn't always exactly the same shade. Example: <code>PixelSearch, FoundX, FoundY, %X1%, %Y1%, %X2%, %Y2%, %Color%, 10 <em>; Allow 10 shades of variation</em></code>. Note: If you specify 255 shades of variation, all colors will match. The default is 0 shades.</p>

<h2 id="v0.216">0.216 BETA - December 29, 2003</h2>
<p>Fixed a bug introduced in a prior version that prevented new hotkeys from firing if the script had a MsgBox or other dialog displayed on the screen.</p>
<p>Fixed PixelSearch to accept negative coordinates without complaining.</p>
<p>Changed the behavior of scripts so that the default values of things such as KeyDelay and WinDelay will go into effect for every newly launched hotkey subroutine. You can use the auto-execute section -- which consists of the commands at the top of the script that occur prior to the first hotkey label -- to change any of the defaults that you wish. So now, when you press a hotkey, the subroutine will always start off fresh with the default values of the following:</p>
<ul>
  <li>DetectHiddenWindows</li>
  <li>DetectHiddenText</li>
  <li>SetTitleMatchMode</li>
  <li>SetBatchLines</li>
  <li>SetWinDelay</li>
  <li>SetKeyDelay</li>
  <li>SetDefaultMouseSpeed</li>
  <li>SetStoreCapsLockMode</li>
  <li>AutoTrim</li>
  <li>StringCaseSense</li>
</ul>
<p>Added StringUpper and StringLower. Example: <code>StringUpper, OutputVar, InputVar</code>. Note: As with all such commands, InputVar and OutputVar are allowed to be the same variable.</p>
<p>Added the following built-in variables:</p>
<ul>
  <li>A_ThisHotkey: This is the label name (for example: <code class="no-highlight">#c</code>) of the hotkey subroutine most recently launched. It's blank if none.</li>
  <li>A_PriorHotkey: Same as above except for the subroutine that ran prior to this one.</li>
  <li>A_TimeSinceThisHotkey: Milliseconds since the most recently launched hotkey subroutine began. It's -1 if A_ThisHotkey is blank.</li>
  <li>A_TimeSincePriorHotkey: Milliseconds since the prior hotkey subroutine was launched. It's -1 if A_PriorHotkey is blank.</li>
  <li>A_TickCount: Milliseconds since the computer was last restarted. If this value ever exceeds 4294967295 (49.7 days), it will reset back to zero and begin counting from there. </li>
</ul>

<h2 id="v0.215">0.215 BETA - December 18, 2003</h2>
<p>Fixed a possible crash in variable assignments that involve more than one source, e.g. statements such as <code>clipboard = %clipboard%%SomeVar%</code>.</p>
<p>Fixed a possible crash-on-startup bug introduced in version 0.212 in conjunction with "else if" support.</p>
<p>Fixed clipboard being hogged (held open) in rare cases such as displaying the clipboard with SplashTextOn.</p>
<p>Fixed PixelGetColor to accept negative coordinates without complaining.</p>
<p>Fixed a very obscure issue where a non-suppressed mouse hotkey such as <code>~LButton::</code> would cause that particular AutoHotkey instance's tray menu and main window context menus to behave strangely.</p>
<p>Added command SoundSetWaveVolume, which sets the playback volume for files such as WAV and MP3. For example: <code>SoundSetWaveVolume, 50 <em>; Number between 0 and 100, inclusive</em></code>.</p>
<p>Added command EnvSet, which is needed because unlike AutoIt2, AutoHotkey does not store its variables in the environment. This is because performance would be worse and also because the OS limits environment variables to 32 KB (AutoHotkey variables, including the clipboard, are essentially unlimited in size). ErrorLevel is set to 1 if there was a problem or 0 otherwise. For example: <code>EnvSet, AutGUI, Some text to put in the variable</code>.</p>
<p>Note: An EnvGet command is not necessary because dereferencing a blank or undefined variable will automatically trigger that behavior. For example, in the following line, the value of the ProgramFiles variable (if undefined in the script) will be fetched from the environment: <code>TargetFile = %ProgramFiles%\Something\setup.ini</code></p>
<p>Disabled the feature that jumps to the proper line in notepad or metapad when a syntax error is found (if the script is already open in such an editor) because it doesn't seem to work reliably. If any of you were using it, let me know. Later, I plan to add support for an external script such as "RunWhenSyntaxError.ahk" that will automatically be run if a script launch fails due to a syntax error.</p>
<p>Improved PixelSearch to set ErrorLevel to 2 if there was an error other than "color not found". It still sets it to 1 if the color isn't found, or 0 if it is. </p>

<h2 id="v0.214">0.214 BETA - December 16, 2003</h2>
<p>Added command WinMenuSelectItem (similar to AutoIt3 command). The menu search terms are not case-sensitive (i.e. File-&gt;Save is the same as file-&gt;save) and the use of ampersand (&amp;) to indicate the underlined letter in a menu item is not necessary. For example:</p>
<pre>WinMenuSelectItem, Untitled - Notepad, , File, Save
WinMenuSelectItem, Untitled - Notepad, , 1&amp;, 3&amp;  <em>; Same as above but uses menu item position rather than text.</em></pre>
<p>Note: The position method exists to support menus that don't contain text (perhaps because they contain pictures of text rather than actual text). Position 1 is the first menu item (e.g. the File Menu). Menu separator lines count as menu items for the purpose of determining the position of a menu item.</p>
<p>Added command ControlFocus. For example:</p>
<pre>ControlFocus, (ControlName or ControlClassNN), WinTitle, WinText, Excludetitle, Excludetext</pre>
<p>Note: As with all commands that take WinTitle/Text, you can specify the letter A as the title to use the active window, or leave all 4 window parameters blank to use the window most recently found by commands such as IfWinExist and WinWait.</p>
<p>Improved the following commands so that they set ErrorLevel to 1 if there was any kind of non-critical error (such as a nonexistent window or control) that prevented the command from completing: ControlSend, ControlClick, ControlSetText, ControlGetText, StatusBarGetText, WinGetText.</p>
<p>Improved StatusBarWait so that it sets ErrorLevel to 2 if there was some kind of error (e.g. the target window doesn't exist or doesn't have a status bar). But as before, ErrorLevel will be set to 1 if the command times out or 0 if the status bar becomes a match for the specified text.</p>
<p>Improved the KeyHistory command to support logging keys &amp; mouse buttons to a file. It still works the old way (displaying the KeyHistory window) if no parameters are given. But it behaves differently if given a first parameter. Examples:</p>
<pre class="no-highlight">KeyHistory, C:\KeyHistory.txt  <em>; Specify the filename and turn on file logging.</em>
KeyHistory, off     <em>; Turn off file logging.</em>
KeyHistory, on      <em>; Turn on file logging to the filename specified by a prior use of this command.</em>
KeyHistory, toggle  <em>; Toggle logging (set it to the opposite of its previous state).</em></pre>
<p>The keyboard or mouse hook must be installed for logging to occur. You can force them to be unconditionally installed by adding the following lines to your script:</p>
<pre>#InstallKeybdHook
#InstallMouseHook</pre>
<p>The log file is a tab-delimited text file with the following fields:</p>
<ul>
  <li>Virtual key code (hex)</li>
  <li>Scan code (hex, the first digit is 1 if the key is an "extended" key)</li>
  <li>Seconds elapsed since prior event</li>
  <li>flag (h = hook hotkey, s = suppressed (hidden from system) by hook, i = ignored by hook)</li>
  <li>down/up (d or u)</li>
  <li>Key name</li>
  <li>Active window title (only present if it has changed from the prior event)</li>
</ul>
<p>Sample log file:</p>
<pre class="no-highlight">59	015	15.0	 	u	Y	C:\
5B	15B	0.1	 	u	Left Windows
9E	000	1.1	 	d	WheelDown

9F	000	0.4	 	d	WheelUp
A4	038	0.4	 	d	Alt
09	00F	0.1	 	d	Tab
09	00F	0.2	 	u	Tab
A4	038	0.1	 	u	Alt	 Untitled - Notepad
A3	11D	1.4	 	d	Right Ctrl
26	148	0.1	h	d	Up	C:\
26	148	0.1	s	u	Up
A3	11D	0.0	 	u	Right Ctrl
A3	11D	1.6	 	d	Right Ctrl
2E	153	0.1	h	d	Delete
A3	11D	0.0	i	u	Right Ctrl
A4	038	0.0	i	d	Alt
73	03E	0.0	i	d	F4
73	03E	0.0	i	u	F4
A4	038	0.0	i	u	Alt
A3	11D	0.0	i	d	Right Ctrl</pre>
<p>Note: Each keystroke generates two lines, a down and an up.</p>

<h2 id="v0.213">0.213 BETA - December 15, 2003</h2>
<p>Fixed hotkeys that have LWin/RWin (<kbd>Win</kbd>) as a modifier and that use the Send command: In some cases, <kbd>Win</kbd> was incorrectly put into the down position after the Send. [Thanks to Robert Yaklin for discovering this.] On a related note, you do not need to use the Sleep command to allow the user time to release the modifier keys (Ctrl, Alt, Shift, and Win) with hotkeys that use the Send command. The Send command knows to change the modifiers to what they need to be for every key that will be sent.</p>
<p>Fixed hotkeys that override Windows hotkeys such as <kbd>Win</kbd>+<kbd>E</kbd> and <kbd>Win</kbd>+<kbd>R</kbd> so that the Start Menu doesn't appear when <kbd>Win</kbd> is released.</p>
<p>Added PixelGetColor and PixelSearch, which mirror AutoIt3's commands of the same name. These can help with detecting the state of non-standard controls and with the automation of full-screen apps such as games. See docs for details.</p>
<p>Minor: Undid the previous change mentioned below having to do with "escape chars at the end of a line or that escape a whitespace char". To conform to AutoIt2 behavior, escape chars that don't escape anything are now removed (i.e. made invisible).</p>
<p>Minor: Changed WinClose to use the WM_CLOSE vs. SC_CLOSE (<kbd>Alt</kbd>+<kbd>F4</kbd>) method so that it's like AutoIt2 and AutoIt3. The new method is a little less gentle to the target window than the previous method, but it's likely to work on more types of windows.</p>
<p>There's now an automated way to convert a .aut file to .ahk so that you can take full advantage of the new features (some new features -- such as the new parameters available in some commands -- are disabled in .aut scripts to improve compatibility with AutoIt2). The conversion will simply make the escape character <code class="no-highlight">`</code> instead of <code class="no-highlight">\</code>. This is harder than it sounds due to the precise ordering of escape sequences in each line, which is why you just can't do a Search &amp; Replace in a text editor. This automated way should take care of all the details:</p>
<ol>
  <li>Append a <code class="no-highlight">.ahk</code> to the end of an existing .aut file, so that filename now ends in <code class="no-highlight">.aut.ahk</code></li>
  <li>Run this file with AutoHotkey, which, rather than running the file, will create a new file in the same directory that ends in <code class="no-highlight">-NEW.ahk</code>. This is the converted version. The original version will be unchanged.</li>
  <li> If you were using #EscapeChar in the script, remove it from the converted version.</li>
</ol>
<p>After converting a script from .aut to .ahk, the main problem areas to check for are commands that accept additional parameters in .ahk files but not in .aut files. If you used any non-escaped commas in the parameter that was formerly the last parameter (in AutoIt2) but is now not the last parameter, those commas will be interpreted as delimiters. For example:</p>
<pre>Msgbox, 0, Title, Text, with, commas</pre>
<p>In the above, the string "Text, with, commas" would be interpreted as the last arg by AutoIt2. But since AutoHotkey supports a new parameter for the timeout of the MsgBox, the string "with, commas" would be interpreted as the timeout value (which would be caught as a load-time error in this case). Here is another example:</p>
<pre>WinActivate, title, text with literal comma, here.</pre>
<p>The above would be a problem after conversion; The string "here." would be interpreted as the new <em>ExcludeTitle</em> parameter.</p>
<p>Here is a list of commands that both accept new parameters and that might be problematic:</p>
<ul>
  <li>MsgBox</li>
  <li>StringReplace</li>
  <li>StringGetPos</li>
  <li>WinClose/Kill/Activate/Minimize/Maximize/Restore/Hide/Show</li>
  <li>WinSetTitle/WinGetTitle</li>
</ul>
<p>Note #1: Even though they accept new parameters in .ahk files, commands such as IfWinExist are not troublesome with respect to the above because the program can tell the difference between the AutoIt2 and AutoHotkey methods. The WinWait family of commands should also not be a problem.</p>
<p>Note #2: As always, AutoHotkey can run most AutoIt2 (.aut) files directly, without the need to convert to a .ahk file.</p>

<h2 id="v0.212">0.212 BETA - December 8, 2003</h2>
<p>Added support for a command being on the same line as its ELSE. Examples:</p>
<pre>if x = 1
    Gosub, a1
else if x = 2
    Gosub, a2
else IfEqual, x, 3
{
    Gosub, a3
    Sleep, 1
}
else Gosub, a4  <em>; i.e. Any command can be on the same line with an ELSE.</em>

<em>; Also OK:</em>
IfEqual, y, 1, Gosub, b1
else {
    Sleep, 1
    Gosub, b2
}

<em>; But this is illegal:</em>
if x = 1 {  <em>; Invalid: This would compare X to the string "1 {" instead of treating { as the start of a block.</em>
    Sleep, 1
    MsgBox, test
}

<em>; A legal alternative:</em>
IfEqual, x, 1, {
    Sleep, 1
    MsgBox, test
}</pre>
<p>The main use of the above is for "else if" ladders, which may increase the script's readability.</p>
<p>Relaxed the conditions that triggered the warning dialog "More than X hotkeys have been received in the last Y milliseconds" (thanks to CyberSlug for the idea) so that keyboard auto-repeat feature can be used on most systems without triggering a warning. In addition, you can customize this behavior by using the following directives:</p>
<pre>#HotkeyInterval 2000 <em>; This is the default value (milliseconds).</em>
#MaxHotkeysPerInterval 50 <em>; This is the default value.</em></pre>
<p>Care should be taken not to make the above too lenient because if you ever inadvertently introduce an infinite loop of keystrokes (via a Send command that accidentally triggers other hotkeys), your computer could become unresponsive due to the rapid flood of keyboard events. Example of an infinite loop of keystrokes: <code>^c::Send, ^c</code>.</p>
<p>If you want to do something like the above without triggering an infinite loop, add a $ to the hotkey definition (e.g <code>$#y::</code>). The $ tells it to use the hook for the hotkey, which is smart enough to know not to treat our own SEND commands as a source for hotkeys. Using the hook has at least a couple of disadvantages, which is why it isn't always used: 1) Only one instance of the program at a time should have the hook installed; 2) It may very slightly impact system performance.</p>
<p>Improved the <code>~</code> (tilde) hotkey prefix (see docs) so that it works with modified hotkeys (i.e. those that require <kbd>Ctrl</kbd>, <kbd>Alt</kbd>, <kbd>Shift</kbd>, or <kbd>Win</kbd> to be pressed) as well as unmodified ones. The only exception is mouse buttons, which must be unmodified to be "non-suppressed".</p>
<p>Made all windowing commands support the letter A as the first parameter to indicate that the active window should be used. Even though the result is always "known" ahead of time for commands such as WinWait, WinActivate, IfWinExist, and IfWinActive (since by definition the active window is active and exists), this change makes things more consistent. For example, the first parameter can conditionally resolve to the letter A at runtime, thus increasing flexibility. In addition, this change also allows the Last Used Window to be reset easily such as in this example:</p>
<pre>#y::  <em>; Win-Y</em>
Run, notepad
WinWait, Notepad
WinActivate  <em>; Activate the window last found.</em>
<em>; ...Let's say some time has passed and we're no longer sure which window is the "last used" one.</em>
WinActivate, Notepad
WinWait, a  <em>; ***** Set the "last used" window to be the active window.</em>
<em>; Now we can do commands such as the below without specifying the window (better performance too):</em>
WinMinimize
ControlSend, , Some text that will appear in notepad even if it isn't active (ControlSend can use the "last used" window; in addition it sends to the top-most control by default).
WinMaximize
WinActivate
return</pre>
<p>New command:</p>
<pre>#HotkeyModifierTimeout 100  <em>; value in milliseconds, default 100</em></pre>
<p>The above only has meaning if the script does not have the keyboard hook installed (you can see if your script uses the hook via the KeyHistory command). This is because the hook can keep track of which modifier keys (Alt, Ctrl, Win, and Shift) the user is physically holding down. For example:</p>
<pre>^!a::Send, abcdefg</pre>
<p>The above SEND requires that <kbd>Ctrl</kbd> and <kbd>Alt</kbd> be released so that the keys get sent properly. After the SEND completes, if the hook is installed, the program knows whether it can safely push back down <kbd>Ctrl</kbd> and <kbd>Alt</kbd>. But if not and the SEND finishes more than HotkeyModifierTimeout milliseconds after the hotkey subroutine began, the modifier keys will not be restored, and you will have to release and press them again if you wish to use them to modify the same (or another) key again. Note: You can set the value to be -1 so that it never times out, or 0 so that it always times out. Also, you can ensure that the keyboard hook is installed, thus making the above unnecessary, by adding the line #InstallKeybdHook anywhere in the script. Reducing KeyDelay (via SetKeyDelay) to 0 or -1 may also help if the keyboard hook isn't installed, since SEND will run more quickly.</p>
<p>Fixed unjustified warning dialog ("Another instance of this program already has the keyboard or mouse hook installed") that sometimes occurred when using the "Reload This Script" function. This was apparently caused by OS being slow to unload the prior instance &amp; mutex from memory. The program now does not display this warning if a currently-running script is being restarted.</p>
<p>Added $ as a hotkey modifier symbol (e.g. <code>$^c::</code>): It results in the use of an alternate (more powerful) method to implement the hotkey. Use this if the default method doesn't work properly (due to its recursive use of the Send command, for example). In technical terms, this method uses the keyboard hook rather than RegisterHotkey() to implement the hotkey.</p>
<p>Fixed GetKeyState so that all keys work. Previously, keys with numpad equivalents, such as <kbd>Del</kbd> and <kbd>End</kbd>, didn't work.</p>
<p>GetKeyState now supports an optional 3rd arg that can be the letter T (state of toggleable key such as <kbd>CapsLock</kbd>) or P (physical state of key). If the arg is omitted or blank, the logical state of the key will be returned. The logical state should be one that the OS and the foreground app believe the key to be in, whereas the physical state is whether the key or mouse button is physically down or up. For example:</p>
<pre>GetKeyState, state, CapsLock, T  <em>; Will set "state" to be D if CapsLock is ON or U otherwise.</em></pre>
<p>Currently, the "physical" state is always the same as the logical state if the hooks aren't installed, because Windows XP (and probably NT/2k, but perhaps not Win9x) doesn't seem to properly implement the following code. If anyone has a workaround, I'd love to hear it:</p>
<pre class="no-highlight">#define IsPhysicallyDown(vk) (GetAsyncKeyState(vk) &amp; 0x80000000)</pre>
<p>The keyboard hook is installed to support left/right-modifier specific hotkeys, wildcard hotkeys, SetNum/Scroll/CapsLock, AlwaysOn/Off, to override Windows Explorer hotkeys such as <kbd>Win</kbd>+<kbd>E</kbd>, and for a few other purposes. It is not unconditionally installed because it very slightly impacts system performance and is also only not designed to be used by more than one script at a time (though you can force it). You can determine which hooks (mouse and keyboard) are installed by assigning the KeyHistory command to a hotkey.</p>
<p>You can force the hooks to be installed unconditionally by adding either or both of these lines anywhere in the script:</p>
<pre>#InstallKeybdHook <em>; this is the hook needed to maximize reliability of modifier restoration with the Send command (see above)</em>
#InstallMouseHook <em>; this would probably only be used if you wanted to see mouse button events in the KeyHistory, since it will automatically be installed if you are using any mouse hotkeys.</em></pre>
<p>For the Send command, changed the name of ControlDown/Up to CtrlDown/Up so that it matches AutoIt. Also added LCtrl and RCtrl as alternate valid key names for LControl/RControl for use with hotkeys as well as commands such as Send and GetKeyState.</p>
<p>Fixed SEND so that if modifier keys are sent that happen to be part of the hotkey definition itself, those modifiers are restored after the Send is complete. This resolves issues where if KeyDelay was greater than -1, you would have to release the modifiers and press them down again to get the same hotkey to fire again after the first time. For example:</p>
<pre>^+0::Send, {SHIFTDOWN}a{SHIFTUP}</pre>
<p>Another thanks to CyberSlug for discovering this problem. See other sections above for further details.</p>
<p>Changed ControlSend so that <code class="no-highlight">{ASC nnnn}</code> items are ignored, since the OS does not support this feature when sending keystrokes directly to a window or control.</p>
<p>Fixed the Send command, which was sometimes sending an incorrect scan code (usually inconsequential).</p>
<p>Minor change: A modifier's key-up hotkey action (if it has one) won't fire if that modifier was used to modify any mouse button click (since <kbd>Ctrl</kbd>+LeftClick, for example, is a valid native OS feature that most users would never want to sacrifice).</p>
<p>Minor change: Escape characters that occur at the very end of a line or that "escape" a whitespace character are now considered to be literal. This should be more like AutoIt2. Example: <code>var1 = this character is now literal --&gt;`</code></p>
<p>Tip: C-style section comments can be used, but the symbols must appear at the beginning of a line to be recognized:</p>
<pre>/*
...
(section that is commented out)
...
*/</pre>

<h2 id="v0.211">0.211 BETA - December 1, 2003</h2>
<p>Fixed the Reload command and the corresponding tray menu item to work with script filenames that contain spaces.</p>
<p>Added GetKeyState. For example:</p>
<pre>GetKeyState, OutputVar, LButton</pre>
<p>It sets <em>OutputVar</em> to be U (for up), D (for down), or blank if the state couldn't be determined for any reason. The key name can be virtually any of the keys listed in the documentation, including mouse buttons (at least under WinXP, and they will probably work on other OSes as well).</p>
<p>Added a new optional parameter to MouseClick. If this last parameter is D the button will be held down until it is released by the user physically clicking it or via another action in the script. If this last parameter is U, the button will be released (even if it wasn't down before, an up-event will still be sent).</p>
<p>Added new hotkey definition symbol <code class="no-highlight">~</code> (tilde) to indicate that this hotkey's native function shouldn't be suppressed (hidden from the system) when the hotkey fires. For example, in the below, the mouse button click will be sent to the active window when it normally wouldn't be:</p>
<pre>~RButton::Sleep, 1</pre>
<p>Note: Special hotkeys that are substitutes for alt-tab always ignore this setting.</p>
<p>Changed commands that click the mouse (MouseClick, LeftClick, etc.) so that the clicks themselves cannot trigger hotkey subroutines. This prevents potential infinite loop conditions if a script were to send mouse events that happen to be valid hotkeys.</p>
<p>Changed slightly how hotkeys that are combinations of keyboard and mouse work: Normally if the prefix key of that pair modifies any other key (even something that isn't a hotkey) its key-up action won't fire (if it has one). This has been changed so that mouse buttons are the exception. For example:</p>
<pre>Numpad0 &amp; Numpad1::MsgBox, test1  <em>; Numpad0 is now a prefix key that is handled by the keyboard hook.</em>
Numpad0::MsgBox, test2  <em>; Now Numpad0 is both a prefix AND a suffix (a suffix because it has its own action)</em></pre>
<p>Under the old method, if Numpad0 was pressed down and then a mouse button clicked, the Numpad0 action would not fire when Numpad0 is released, as it normally would. Under the new method it does, but only if the combination of Numpad0 and that mouse button isn't a hotkey (since by default, the key/mouse events that comprise a hotkey are always hidden from the system unless the <code class="no-highlight">~</code> symbol, described above, is used).</p>

<h2 id="v0.210">0.210 BETA - November 19, 2003</h2>
<p>Added command Suspend. It's just like the tray menu item of the same name. The first parameter can be either blank (to toggle the state to the opposite setting), ON (to suspend hotkeys), or OFF (to resume). Note: Any hotkey whose subroutine's first line is the Suspend command will not be subject to suspension. This allows any such hotkey to turn off the suspension.</p>

<h2 id="v0.209">0.209 BETA - November 19, 2003</h2>
<p>Improved Run and RunWait so that they attempt CreateProcess() (the AutoIt method) if the normal ShellExecute() method fails to work. This should make things more flexible and more like AutoIt. Note: Internally, the ShellExecute() method is always attempted first because I believe it has more capabilities, such as the ability to run documents, launch URLs, and execute system verbs such as "properties" (see below).</p>
<p>Run and RunWait now support the following system verbs: properties, edit, print, find, explore, open, and print. For example:</p>
<pre>Run, properties c:\autoexec.bat  <em>; Bring up the properties dialog for this file.</em>
Run, edit %A_SCRIPTFULLPATH%  <em>; Perform the associated "edit" action for this file (if it has one).</em></pre>
<p>Added #Delimiter command. This can be used to change the default (comma) delimiter, which is used to separate commands and parameters from each other. Note: It cannot be a space, tab (since some editors replace tabs with spaces), or a char that it already in use for another special purpose. For example:</p>
<pre>#Delimiter . <em>; Make the delimiter a period rather than a comma.</em></pre>
<p>Fixed tray menu item "Edit This Script" (again) because it still wasn't working right.</p>
<p>Enabled tray menu item "Suspend". This function prevents new hotkey subroutines from launching (but Alt-Tab hotkeys will still work). In other words, pressing a hotkey will have no effect at all; it won't even be seen by the system. For example, if <kbd>Ctrl</kbd>+<kbd>C</kbd> is a hotkey, it would do nothing rather than its normal "copy" behavior. Note: "Suspend" will not halt any subroutines that are already running.</p>

<h2 id="v0.208">0.208 BETA - November 17, 2003</h2>
<p><strong>FIXES:</strong></p>
<p>Fixed the tray menu item "Edit This Script".</p>
<p>Fixed compatibility-check for AutoIt2: some of the default AutoIt2 behaviors weren't being used.</p>
<p>Fixed WinWait commands: <em>ExcludeText</em> and <em>ExcludeTitle</em> weren't being handled correctly.</p>
<p>Turned off debug logging: If you were running an older version, you may have a small text file "C:\AutoHotkey SetForegroundWindowEx.txt", which you can safely delete after upgrading to this version.</p>
<p>Changed StringReplace so that it doesn't trim whitespace from the result, which matches AutoIt2's behavior.</p>
<p><strong>CHANGES:</strong></p>
<p>Included the VC++ project in the source code ZIP file.</p>
<p>Changed the default for .aut (AutoIt2) scripts to <code>DetectHiddenWindows, Off</code>, so that things are more like AutoIt2. This is now the default for all scripts. From what I can tell, unlike AutoIt2, AutoIt3 always detects hidden windows. Since this can sometimes cause problems with window matching and distinctness, the AutoIt2 method seems to be a better default.</p>
<p>Changed the SetTitleMatchMode command. In addition to supporting the traditional modes of 1 &amp; 2, the command now supports the words <em>Fast</em> and <em>Slow</em> (e.g. <code>SetTitleMatchMode, Slow</code>). The default is <em>Fast</em>, which is what AutoIt2 uses, whereas AutoIt3 uses the slow mode because it can "see" more text for certain windows. The fast mode performs significantly better, which may help the speed of scripts that do a lot of windowing commands. The slow mode can be used to ensure full compatibility with AutoIt3 and its Window Spy (the Spy is included with AutoHotkey). I'm thinking of modifying the Window Spy so that it indicates which text of a window is available only in the "slow" mode.</p>
<p>Window finding reliability: Made the "slow" TitleMatchMode more reliable by increasing the timeout to 5 seconds because some windows are sluggish about checking their message queues (e.g. during long disk operations), and thus very slow to cough up their window text.</p>
<p>In this version, by default, multiple instances of the same script can be launched. If you wish to limit a script to a single instance, use the #SingleInstance directive described below.</p>
<p><strong>ADDITIONS:</strong></p>
<p>DriveSpaceFree (gets the free space [in MB] for a drive). For example: <code>DriveSpaceFree, OutputVar, C:\</code></p>
<p><code class="no-highlight">SetAutoTrim, on/off</code> (defaults to on): When you assign a value to a variable, this controls whether whitespace is automatically trimmed from the left and right of the string. For this purpose, whitespace consists of spaces and tabs, but NOT newlines (carriage returns). Thus, I believe the "on" setting yields the same behavior as AutoIt2 in this regard.</p>
<p>StringGetPos now supports a new optional last parameter. If the parameter is the letter R, the search goes from the right to left, so the last occurrence is found rather than the first.</p>
<p>ControlSetText: Derived from AutoIt3's function of the same name. For example: <code>ControlSetText, ControlName, Some new text, wintitle, wintext, exclude-title, exclude-text</code></p>
<p>Note that some or all of the last four parameters can be omitted. If all of them are omitted, the window found by the most recent IfWinExist, IfWinNotExist, or WinWait will be used. This behavior is the same for almost all of the other windowing commands too.</p>
<p>#AllowSameLineComments: To increase compatibility with AutoIt2, scripts that end in .aut are normally not permitted to have same-line comments (e.g. <code>Run, notepad <em>; this is a comment</em></code>). Add the line #AllowSameLineComments to the top of your script to allow them.</p>
<p>#SingleInstance: Specifying this anywhere in a script will prevent new instances of that script from being launched once there is already one running. Instead, you will be prompted for whether to close the existing instance. Note: You do not need to use "on" or "off" with this command.</p>
<p>#CommentFlag: Allows you to change the comment-flag from the default of semicolon to a string of your choice. The string can be up to 15 characters long. For example: <code>#CommentFlag // <em>; Change to C++ style.</em></code></p>
<p>#EscapeChar: The escape character is normally accent (<code class="no-highlight">`</code>) but this allows you to change it to AutoIt2's escape character (backslash) or some other char of your choice. Note that by default, scripts that end in .aut will use the backslash for their escape char.</p>
<p>#DerefChar: The deref char is normally <code>%</code> (e.g. <code>Sleep, %SleepTime%</code>). You can change it to some other character with this.</p>
<p><strong>TIPS</strong></p>
<p>The first comma can always be omitted for any command, e.g. <code>MsgBox This is the text of the Msgbox (single-parameter mode)</code>.</p>
<p>You can use <kbd>CapsLock</kbd> as a new "modifier", similar to <kbd>Win</kbd>, without changing its native function (WinNT/2k/XP only, currently). For example:</p>
<pre>CapsLock &amp; A::run, notepad
CapsLock &amp; S::run, calc</pre>

<h2 id="v0.207">0.207 BETA - November 12, 2003</h2>
<p>Fixed StringMid: It was previously able to read beyond the length of the input variable.</p>
<p>Disabled the auto-restore-on-resume feature -- which restores the foreground window that a suspended thread was working with -- because it probably causes more trouble than it's worth.</p>

<h2 id="v0.206">0.206 BETA - November 11, 2003</h2>
<p>Fixed scripts randomly hanging (sleeping indefinitely): caused by the thread's main timer having been killed when it shouldn't be.</p>
<p>Fixed WinWait-type commands that would behave unexpectedly if a new hotkey subroutine was launched while the command was waiting for the timeout to expire: the new subroutine was overwriting a buffer that was still needed by the old subroutine.</p>
<p>Fixed: tray menu behaving strangely if a modal dialog, such as MsgBox or InputBox, was on the screen.</p>
<p>Fixed the REPEAT command, which was causing an infinite loop if its first parameter was a dereferenced variable rather than a literal number.</p>

<h2 id="v0.205">0.205 BETA - November 10, 2003</h2>
<p>Initial release.</p>
</body>
</html>
